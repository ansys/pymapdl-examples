[
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#out-of-plane-bending-of-a-curved-bar",
        "title": "Out-of-Plane Bending of a Curved Bar",
        "section": "Out-of-Plane Bending of a Curved Bar",
        "text": "A portion of a horizontal circular ring, built-in at A, is loaded by a vertical (Z)\nload F applied at the end B. The ring has a solid circular cross-section of diameter d.\nDetermine the deflection \\delta at end B, the maximum bending\nstress \\sigma_{Bend} , and the maximum torsional shear stress τ.\nS. Timoshenko, Strength of Materials, Part I, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1955,\npg. 412, eq. 241.\nStatic Analysis ANTYPE=0\nElastic Curved Pipe Element (PIPE18)\n3-D 3 Node Pipe Element (PIPE289)\nE = 30 \\cdot 10^6 psi\n\\mu = 0.3\nr = 100 in\nd = 2 in\n\\theta = 90°\nF = 50 lb\nNode 10 is arbitrarily located on the radius of curvature side of the element to define the\nplane of the elbow when PIPE18 elements are used. The wall thickness is set to half the diameter\nfor a solid bar. Since the section has no hole in the middle, ovalization cannot occur and\nPIPE289 elements can be used to determine the deflection and stresses.\nOut-of-Plane Bending of a Curved Bar\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#define-element-type-and-real-properties",
        "title": "Out-of-Plane Bending of a Curved Bar > Define element type and real properties",
        "section": "Define element type and real properties",
        "text": "Use Elastic Curved Pipe element (PIPE18) and set KEYOPT(6)=2 for printing member forces.\nDefine element type and real properties"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#define-material",
        "title": "Out-of-Plane Bending of a Curved Bar > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’s ratio NUXY of 0.3 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#define-geometry",
        "title": "Out-of-Plane Bending of a Curved Bar > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#define-boundary-conditions-and-load",
        "title": "Out-of-Plane Bending of a Curved Bar > Define boundary conditions and load",
        "section": "Define boundary conditions and load",
        "text": "Fix all dofs at node 1. Specify nodal force F = -50 lb along Z direction at node 2.\nThen exit prep7 processor.\nDefine boundary conditions and load"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#solve",
        "title": "Out-of-Plane Bending of a Curved Bar > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#post-processing",
        "title": "Out-of-Plane Bending of a Curved Bar > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflection and stress quantities.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#verify-the-results",
        "title": "Out-of-Plane Bending of a Curved Bar > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#finish-the-post-processing-processor",
        "title": "Out-of-Plane Bending of a Curved Bar > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#clears-the-database-without-restarting",
        "title": "Out-of-Plane Bending of a Curved Bar > Clears the database without restarting.",
        "section": "Clears the database without restarting.",
        "text": "Clears the database without restarting."
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#set-a-new-title-for-the-analysis",
        "title": "Out-of-Plane Bending of a Curved Bar > Set a new title for the analysis",
        "section": "Set a new title for the analysis",
        "text": "Set a new title for the analysis"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#switches-to-the-preprocessor-prep7",
        "title": "Out-of-Plane Bending of a Curved Bar > Switches to the preprocessor (PREP7)",
        "section": "Switches to the preprocessor (PREP7)",
        "text": "Switches to the preprocessor (PREP7)"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#define-element-type-and-section-properties",
        "title": "Out-of-Plane Bending of a Curved Bar > Define element type and section properties",
        "section": "Define element type and section properties",
        "text": "Use 3-D 3-Node Pipe element (PIPE289) and set KEYOPT(4)= 2 Thick pipe theory.\nDefine element type and section properties"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#define-material",
        "title": "Out-of-Plane Bending of a Curved Bar > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’s ratio NUXY of 0.3 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#define-geometry",
        "title": "Out-of-Plane Bending of a Curved Bar > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#define-boundary-conditions-and-load",
        "title": "Out-of-Plane Bending of a Curved Bar > Define boundary conditions and load",
        "section": "Define boundary conditions and load",
        "text": "Fix all dofs at node 1. Specify nodal force F = -50 lb along Z direction at node 19.\nThen exit prep7 processor.\nDefine boundary conditions and load"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#solve",
        "title": "Out-of-Plane Bending of a Curved Bar > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#post-processing",
        "title": "Out-of-Plane Bending of a Curved Bar > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflection and stress quantities.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#verify-the-results",
        "title": "Out-of-Plane Bending of a Curved Bar > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#finish-the-post-processing-processor",
        "title": "Out-of-Plane Bending of a Curved Bar > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-018",
        "href": "verif-manual/vm-018.html#stop-mapdl",
        "title": "Out-of-Plane Bending of a Curved Bar > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 1.814 seconds)\nDownload Jupyter notebook: vm-018.ipynb\nDownload Python source code: vm-018.py\nDownload zipped: vm-018.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-018.ipynb\nDownload Python source code: vm-018.py\nDownload zipped: vm-018.zip"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#friction-stir-welding-fsw-simulation",
        "title": "Friction stir welding (FSW) simulation",
        "section": "Friction stir welding (FSW) simulation",
        "text": "This example problem shows how to simulate the friction stir welding (FSW)\nprocess. Several characteristics of FSW are presented, including\ntool-workpiece surface interaction, heat generation due to friction, and\nplastic deformation. A nonlinear direct coupled-field analysis is performed, as\nthermal and mechanical behaviors are mutually dependent and coupled together\nduring the FSW process.\nBecause it is often difficult to find a full set of engineering data to\nsimulate the FSW process, the problem emphasizes the simulation rather than the\nnumerical results. A simplified version of the model created by Zhu and Chao\nillustrates the FSW simulation method.\nThe following features and capabilities are highlighted:\nDirect Structural-thermal analysis using coupled-field solid elements\nPlastic heat generation in coupled-field elements\nFrictional heat generation using contact elements\nSurface-projection-based contact   method\nContact elements with bonding capability\nThe following topics are available:\n28.1. Introduction\n28.2. Problem description\n28.3. Modeling\n28.4. Material properties\n28.5. Boundary conditions and loading\n28.6. Analysis and solution controls\n28.7. Results and discussion\n28.8. Exit MAPDL\n28.9. Recommendations\n28.10. References\n28.11. Input files\nYou can also perform this example analysis entirely in the Ansys Mechanical\nApplication. For more information, see Friction Stir Welding (FSW) Simulation\nin the Workbench Technology Showcase: Example Problems.\nFriction stir welding (FSW) simulation"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#281-introduction",
        "title": "Friction stir welding (FSW) simulation > 28.1. Introduction",
        "section": "28.1. Introduction",
        "text": "Friction stir welding (FSW) is a solid-state welding technique that involves\nthe joining of metals without filler materials. A cylindrical rotating tool\nplunges into a rigidly clamped workpiece and moves along the joint to be\nwelded. As the tool translates along the joint, heat is generated by friction\nbetween the tool shoulder and the workpiece. Additional heat is generated by\nplastic deformation of the workpiece material.\nThe generated heat results in thermal softening of the workpiece material.\nThe translation of the tool causes the softened workpiece material to flow\nfrom the front to the back of the tool where it consolidates.\nAs cooling occurs, a solid continuous joint between the two plates is formed.\nNo melting occurs during the process, and the resulting\ntemperature remains below the solidus temperature of the metals being joined.\nFSW offers many advantages over conventional welding techniques, and has been\nsuccessfully applied in the aerospace, automobile, and shipbuilding industries.\nThermal and mechanical behaviors are mutually dependent during the FSW process.\nBecause the temperature field affects stress distribution, this example uses a\nfully thermomechanically coupled model.\nThe model consists of a coupled-field solid element with structural and thermal\ndegrees of freedom. The model has two rectangular steel plates and a cylindrical\ntool. All necessary mechanical and thermal\n28.5. Boundary conditions and loading are applied on the model. The\nsimulation occurs over three load steps, representing the 28.5.3. Loading of\nthe process.\nThe temperature rises at the contact interface due to frictional contact\nbetween the tool and workpiece. FSW generally occurs when the temperature at\nthe weld line region reaches 70 to 90 percent of the melting temperature of the\nworkpiece material. The temperature obtained around the weld line region in\nthis example falls within the range reported by Zhu and Chao [Zhu2004] and\nPrasanna and Rao [Prasanna2010], while the maximum resulting temperature is\nwell below the melting temperature of the workpiece.\nThe calculated frictional heat generation and plastic heat generation show that\nthe friction between the tool shoulder and workpiece is responsible for\ngenerating most of the heat. A bonding temperature is specified at the contact\ninterface of the plates to model the welding behind the tool. When the\ntemperature at the contact surface exceeds this bonding temperature, the\ncontact is changed to bonded.\n28.1. Introduction"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#282-problem-description",
        "title": "Friction stir welding (FSW) simulation > 28.2. Problem description",
        "section": "28.2. Problem description",
        "text": "The Zhu and Chao thermomechanical model\nThe model used in this example is a simplified version of the thermomechanical\nmodel developed by Zhu and Chao for FSW with 304L stainless steel [Zhu2004].\nZhu and Chao presented nonlinear thermal and thermomechanical simulations using\nthe finite element analysis code WELDSIM. They initially formulated a\nheat-transfer problem using a moving heat source, and later used the transient\ntemperature outputs from the thermal analysis to determine residual stresses in\nthe welded plates via a 3-D elastoplastic thermomechanical simulation.\nA direct coupled-field analysis is performed on a reduced-scale version of the\nZhu and Chao model [Zhu2004]. Also, rather than using a moving heat source as\nin the reference model, a rotating and moving tool is used for a more realistic\nsimulation.\nThe tool pin is ignored. The heat generated at the pin represents approximately\ntwo percent of the total heat and is therefore negligible.\nThe simulation welds two 304L stainless steel plates (workpiece) with a\ncylindrical shape tool, as shown in the following figure:\nFigure 28.1: 3-D model of workpiece and tool\nThe FSW process generally requires a tool made of a harder material than the\nworkpiece material being welded. In the past, FSW was used for soft workpiece\nmaterials such as aluminium. With the development of tools made from\nsuper-abrasive materials such as polycrystalline cubic boron nitride (PCBN),\nFSW has become possible with high-temperature materials such as stainless\nsteel. A cylindrical PCBN tool is modeled in this case.\nThe workpiece sides parallel to the weld line are constrained in all the\ndirections to simulate the clamping ends. The bottom side of the workpiece is\nconstrained in the perpendicular (z) direction to simulate support at the\nbottom. Heat losses are considered on all the surfaces of the model. All\n28.5. Boundary conditions and loading are symmetric across the weld\ncenterline.\nThe simulation is performed in three load steps, each representing a respective\nphase ( 28.5.3. Loading) of the FSW process.\n28.2. Problem description"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#283-modeling",
        "title": "Friction stir welding (FSW) simulation > 28.3. Modeling",
        "section": "28.3. Modeling",
        "text": "Modeling is a two-part task, as described in these topics:\n28.3.1. Workpiece and Tool Modeling\n28.3.2. Contact Modeling\n28.3. Modeling"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2831-workpiece-and-tool-modeling",
        "title": "Friction stir welding (FSW) simulation > 28.3.1. Workpiece and tool modeling",
        "section": "28.3.1. Workpiece and tool modeling",
        "text": "Two rectangular shaped plates (similar to those used in the reference model)\nare used as the workpiece. Dimensions have been reduced to decrease the\nsimulation time.\nThe plate size is 3 x 1.25 x 0.125 in (76.2 x 31.75 x 3.18 mm). The tool\nshoulder diameter is 0.6 in (15.24 mm).\nPlate thickness remains the same as that of the reference model, but the plate\nlength and width are reduced. The plate width is reduced because the regions\naway from the weld line are not significantly affected by the welding process,\nand this example focuses primarily on the heat generation and temperature rise\nin the region nearest the weld line.\nThe height of the tool is equal to the shoulder diameter. Both the workpiece\n(steel plates) and the tool are modeled using coupled-field element\nSOLID226 with the structural-thermal option (KEYOPT(1)= 11).\nA hexahedral mesh with dropped midside nodes is used because the presence of\nmidside nodes (or quadratic interpolation functions) can lead to oscillations\nin the thermal solution, leading to nonphysical temperature distribution. A\nhexahedral mesh is used instead of a tetrahedral mesh to avoid mesh-orientation\ndependency. For more accurate results, a finer mesh is used in the weld-line\nregion. The following figure shows the 3-D meshed model:\nFigure 28.2: 3-D meshed model of workpiece and tool\n28.3.1. Workpiece and tool modeling\nSOLID226\nKEYOPT(1)= 11"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2832-contact-modeling",
        "title": "Friction stir welding (FSW) simulation > 28.3.2. Contact modeling",
        "section": "28.3.2. Contact modeling",
        "text": "Contact is modeled as follows for the FSW simulation:\nContact pair between the plates\nContact pair between tool and workpiece\nRigid surface constraint\n28.3.2. Contact modeling"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#28321-contact-pair-between-the-plates",
        "title": "Friction stir welding (FSW) simulation > 28.3.2.1. Contact pair between the plates",
        "section": "28.3.2.1. Contact pair between the plates",
        "text": "During the simulation, the surfaces to be joined come into contact. A standard\nsurface-to-surface contact pair using TARGE170 and CONTA174, as shown\nin the following figure:\nThe surface-projection-based contact method (KEYOPT(4) = 3 for contact\nelements) is defined at the contact interface. The surface-projection-based\ncontact method is well suited to highly nonlinear problems that include\ngeometrical, material, and contact nonlinearities.\nThe problem simulates welding using the bonding capability of contact\nelements. To achieve continuous bonding and simulate a perfect thermal contact\nbetween the plates, a high thermal contact conductance (TCC) of 2 ⋅ 10E6 W/m2\n°C is specified. (A small TCC value yields an imperfect contact and a\ntemperature discontinuity across the interface.) The conductance is specified\nas a real constant for CONTA174 elements.\nThe maximum temperature ranges from 70 to 90 percent of the melting temperature\nof the workpiece material. Welding occurs after the temperature of the material\naround the contacting surfaces exceeds the bonding temperature (approximately\n70 percent of the workpiece melting temperature). In this case, 1000 °C is\nconsidered to be the bonding temperature based on the reference results. The\nbonding temperature is specified using the real constant TBND for\nCONTA174. When the temperature at the contact surface for closed contact\nexceeds the bonding temperature, the contact type changes to bonded. The\ncontact status remains bonded for the remainder of the simulation, even though\nthe temperature subsequently decreases below the bonding value.\n28.3.2.1. Contact pair between the plates\nTARGE170\nCONTA174\nKEYOPT(4) = 3\nCONTA174\nTBND\nCONTA174"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#28322-contact-pair-between-tool-and-workpiece",
        "title": "Friction stir welding (FSW) simulation > 28.3.2.2. Contact pair between tool and workpiece",
        "section": "28.3.2.2. Contact pair between tool and workpiece",
        "text": "The tool plunges into the work piece, rotates, and moves along the weld line.\nBecause the frictional contact between the tool and workpiece is primarily\nresponsible for heat generation, a standard surface-to-surface contact pair is\ndefined between the tool and workpiece. The CONTA174 element is used to\nmodel the contact surface on the top surface of the workpiece, and the\nTARGE170 element is used for the tool, as shown in this figure:\nFigure 28.4: Contact pair between tool and workpiece.\nCONTA174 in blue, and TARGE170 in red.\nTwo real constants are specified to model friction-induced heat generation.\nThe fraction of frictional dissipated energy converted into heat is modeled\nfirst; the FHTG real constant is set to 1 to convert all frictional\ndissipated energy into heat. The factor for the distribution of heat between\ncontact and target surfaces is defined next; the FWGT real constant is set\nto 0.95, so that 95 percent of the heat generated from the friction flows into\nthe workpiece and only five percent flows into the tool.\nA low TCC value (10 W/m2 °C) is specified for this contact pair because most of\nthe heat generated transfers to the workpiece. Some additional heat is also\ngenerated by plastic deformation of the workpiece material. Because the\nworkpiece material softens and the value of friction coefficient drops as the\ntemperature increases, a variable coefficient of friction (0.4 to 0.2) is\ndefined (Mapdl.tb(\"FRIC\") with\nmapdl.tbtemp() and\nMapdl.tbdata()).\n28.3.2.2. Contact pair between tool and workpiece\nCONTA174\nTARGE170\nCONTA174\nTARGE170\nFHTG\nFWGT\nMapdl.tb(\"FRIC\")\nmapdl.tbtemp()\nMapdl.tbdata()"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#28323-rigid-surface-constraint",
        "title": "Friction stir welding (FSW) simulation > 28.3.2.3. Rigid surface constraint",
        "section": "28.3.2.3. Rigid surface constraint",
        "text": "The workpiece remains fixed in all stages of the simulation. The tool rotates\nand moves along the weld line. A pilot node is created at the center of the top\nsurface of the tool in order to apply the rotation and translation on the tool.\nThe motion of the pilot node controls the motion of the entire tool. A rigid\nsurface constraint is defined between the pilot node (TARGE170) and the\nnodes of the top surface of the tool (CONTA174). A multipoint constraint\n(MPC) algorithm with contact surface behavior defined as bonded always is used\nto constrain the contact nodes to the rigid body motion defined by the pilot\nnode.\nThe following contact settings are used for the CONTA174 elements:\nTo include MPC contact algorithm: KEYOPT(2) = 2\nFor a rigid surface constraint: KEYOPT(4) = 2\nTo set the behavior of contact surface as bonded (always): KEYOPT(12) = 5\nFigure 28.5: Rigid surface constrained.\nPilot node or master with applied boundary conditions and the constrained\ntop surface of the tool (blue).**\n28.3.2.3. Rigid surface constraint\nTARGE170\nCONTA174\nCONTA174\nKEYOPT(2) = 2\nKEYOPT(4) = 2\nKEYOPT(12) = 5"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#284-material-properties",
        "title": "Friction stir welding (FSW) simulation > 28.4. Material properties",
        "section": "28.4. Material properties",
        "text": "Accurate temperature calculation is critical to the FSW process because the\nstresses and strains developed in the weld are temperature-dependent. Thermal\nproperties of the 304L steel plates such as thermal conductivity, specific\nheat, and density are temperature-dependent. Mechanical properties of the\nplates such as Young’s modulus and the coefficient of thermal expansion are\nconsidered to be constant due to the limitations of data available in the\nliterature.\nIt is assumed that the plastic deformation of the material uses the Von Misses\nyield criterion, as well as the associated flow rule and the work-hardening\nrule. Therefore, a bilinear isotropic hardening model (TB,PLASTIC,,,,BISO)\nis selected.\nThe following table shows the material properties of the workpiece:\nTable 28.1: Workpiece material properties\nProperty\nValue\nLinear properties\nYoung’s modulus\n193 GPa\nPoisson’s ratio\n0.3\nCoefficient of thermal expansion\n18.7 µm/m °C\nBilinear isotropic hardening constants (``TB,PLASTIC,,,,BISO``)\nYield stress\n290 MPa\nTangent modulus\n2.8 GPa\nTemperature-dependent material properties\nTemperature (°C)\n0\nThermal conductivity (W/m °C)\n16\nSpecific heat (J/Kg °C)\n500\nDensity (Kg/m3)\n7894\nMapdl.tbdata()\ndefines the yield stress and tangent modulus.\nThe fraction of the plastic work dissipated as heat during FSW is about 80\npercent. Therefore, the fraction of plastic work converted to heat\n(Taylor-Quinney coefficient) is set to 0.8 (Mapdl.mp(\"QRATE\")) for the calculation of plastic heat generation in\nthe workpiece material.\nTo weld a high-temperature material such as 304L stainless steel, a tool\ncomposed of hard material is required. Tools made from super-abrasive materials\nsuch as PCBN are suitable for such processes, and so a cylindrical PCBN tool is\nused here. The material properties of the PCBN tool are obtained from the\nreferences: [Ozel2008] and [Mishra2007].\nThe following table shows the material properties of the PCBN tool:\nTable 28.2: Material properties of the PCBN tool\nProperty\nValue\nYoung modulus\n680 GPa\nPoisson’s ratio\n0.22\nThermal conductivity\n100 W/m °C\nSpecific heat\n750 J/Kg °C\nDensity\n4280 Kg/m3\nThe following code setup the material properties:\n28.4. Material properties\nTB,PLASTIC,,,,BISO\nMapdl.tbdata()\nMapdl.mp(\"QRATE\")"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#285-boundary-conditions-and-loading",
        "title": "Friction stir welding (FSW) simulation > 28.5. Boundary conditions and loading",
        "section": "28.5. Boundary conditions and loading",
        "text": "This section describes the thermal and mechanical boundary conditions imposed\non the FSW model:\n28.5.1. Thermal Boundary conditions\n28.5.2. Mechanical Boundary conditions\n28.5.3. Loading\n28.5. Boundary conditions and loading"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2851-thermal-boundary-conditions",
        "title": "Friction stir welding (FSW) simulation > 28.5.1. Thermal boundary conditions",
        "section": "28.5.1. Thermal boundary conditions",
        "text": "The frictional and plastic heat generated during the FSW process propagates\nrapidly into remote regions of the plates. On the top and side surfaces of the\nworkpiece, convection and radiation account for heat loss to the\nambient. Conduction losses also occur from the bottom surface of the workpiece\nto the backing plate.\nFigure 28.6: Thermal boundary conditions.\nConvection loads (red) and conduction loads (yellow)\nAvailable data suggest that the value of the convection coefficient lies\nbetween 10 and 30 W/m2 °C for the workpiece surfaces, except for the bottom\nsurface. The value of the convection coefficient is 30 W/m2°C for workpiece and\ntool.\nThis coefficient affects the output temperature. A lower coefficient\nincreases the output temperature of the model. A high overall heat-transfer\ncoefficient (about 10 times the convective coefficient) of 300 W/m2 °C is\nassumed for the conductive heat loss through the bottom surface of the\nworkpiece. As a result, the bottom surface of the workpiece is also treated as\na convection surface for modeling conduction losses. Because the percentage of\nheat lost due to radiation is low, radiation heat losses are ignored. An\ninitial temperature of 25 °C is applied on the model.\nTemperature boundary conditions are not imposed anywhere on the model.\n28.5.1. Thermal boundary conditions"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2852-mechanical-boundary-conditions",
        "title": "Friction stir welding (FSW) simulation > 28.5.2. Mechanical boundary conditions",
        "section": "28.5.2. Mechanical boundary conditions",
        "text": "The workpiece is fixed by clamping each plate. The clamped portions of the\nplates are constrained in all directions. To simulate support at the bottom of\nthe plates, all bottom nodes of the workpiece are constrained in the\nperpendicular direction (z direction).\nFigure 28.7: Mechanical boundary conditions:\nX-direction (UX) in red, Y-direction (UY) in green, and Z-direction (UZ) in blue.\n28.5.2. Mechanical boundary conditions\nUX\nUY\nUZ"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2853-loading",
        "title": "Friction stir welding (FSW) simulation > 28.5.3. Loading",
        "section": "28.5.3. Loading",
        "text": "The FSW process consists of three primary phases:\nPlunge – The tool plunges slowly into the workpiece\nDwell – Friction between the rotating tool and workpiece generates heat\nat the initial tool position until the workpiece temperature reaches the\nvalue required for the welding.\nTraverse (or Traveling) – The rotating tool moves along the weld line.\nDuring the traverse phase, the temperature at the weld line region rises, but\nthe maximum temperature values do not surpass the melting temperature of the\nworkpiece material. As the temperature drops, a solid continuous joint appears\nbetween the two plates.\nFor illustrative purposes, each phase of the FSW process is considered a separate\nload step. A rigid surface constraint is already defined for applying loading on the\ntool.\nThe following table shows the details for each load step.\nTable 28.3: Load steps\nLoad step\nTime period (sec)\nLoadings on pilot node\nBoundary Condition\n1\n1\nDisplacement boundary condition\nUZ = -7.95E-07 m\n2\n5.5\nRotational boundary condition\nROTZ = 60 RPM\n3\n22.5\nDisplacement and rotational boundary conditions together on the pilot node\nROTZ = 60 RPM UY = 60.96E-3 m\nThe tool plunges into the workpiece at a very shallow depth, then rotates to\ngenerate heat. The depth and rotating speeds are the critical parameters for\nthe weld temperatures. The parameters are determined based on the experimental\ndata of Zhu and Chao [Zhu2004]. The tool travels from one end of the welding\nline to the other at a speed of 2.7 mm/s.\n28.5.3. Loading\nUZ\nROTZ\nROTZ\nUY"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#286-analysis-and-solution-controls",
        "title": "Friction stir welding (FSW) simulation > 28.6. Analysis and solution controls",
        "section": "28.6. Analysis and solution controls",
        "text": "A nonlinear transient analysis is performed in three load steps using\nstructural-thermal options of SOLID226 and\nCONTA174.\nFSW simulation includes factors such as nonlinearity, contact, friction, large\nplastic deformation, structural-thermal coupling, and different loadings at\neach load step. The solution settings applied consider all of these factors.\nThe first load step in the solution process converges within a few substeps,\nbut the second and third load steps converge only after applying the proper\nsolution settings shown in the following table:\nTable 28.4: Solution settings\nSolution setting\nDescription of setting and comments\nMapdl.antype(4)\nTransient analysis.\nMapdl.lnsrch(\"ON\")\nFor contact problems,this option is useful for enhancing convergence.\nMapdl.cutcontrol(\"PLSLIMIT\", 0.15)\nControls the time-step cutback during a nonlinear solution and specifies the maximum equivalent plastic strain allowed within a time-step. If the calculated value exceeds the specified value, the program performs a cutback (bisection). PLSLIMIT is set at 15 percent (from the default five percent) because solution-control support is not available.\nMapdl.nlgeom(\"ON\")\nIncludes large-deflection effects or large strain effects, according to the element type.\nMapdl.nropt(\"UNSYM\")\nRecommended for contact elements with high friction coefficients.\nMapdl.timint(\"OFF\", \"STRUC\")\nTo speed up convergence in a coupled-field transient analysis, the structural dynamic effects are turned off. These structural effects are not important in the modeling of heat generation due to friction; however,the thermal dynamic effects are considered here.\nMapdl.kbc(0)\nThe loads applied to intermediate substeps within the load step are ramped because the structural dynamic effects are set to off.\nTo allow for a faster solution, automatic time-stepping is activated\n(Mapdl.autots(\"on\")). The initial time\nstep size (Mapdl.deltim()) is set to\n0.1, and the minimum time step is set to 0.001. The maximum time step is set as\n0.2 in load steps 2 and 3. A higher maximum time-step size may result in an\nunconverged solution.\nThe time step values are determined based on mesh or element size. For\nstability, no time-step limitation exists for the implicit integration\nalgorithm. Because this problem is inherently nonlinear and an accurate\nsolution is necessary, a disturbance must not propagate to more than one\nelement in a time step; therefore, an upper limit on the time step size is\nrequired. It is important to choose a time step size that does not violate the\nsubsequent criterion (minimum element size, maximum thermal conductivity over\nthe whole model, minimum density, and minimum specific heat).\n28.6. Analysis and solution controls\nSOLID226\nCONTA174\nMapdl.antype(4)\nMapdl.lnsrch(\"ON\")\nMapdl.cutcontrol(\"PLSLIMIT\", 0.15)\nPLSLIMIT\nMapdl.nlgeom(\"ON\")\nMapdl.nropt(\"UNSYM\")\nMapdl.timint(\"OFF\", \"STRUC\")\nMapdl.kbc(0)\nMapdl.autots(\"on\")\nMapdl.deltim()"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#287-results-and-discussion",
        "title": "Friction stir welding (FSW) simulation > 28.7. Results and discussion",
        "section": "28.7. Results and discussion",
        "text": "The following results topics for the FSW simulation are available:\n28.7.1. Deformation and stresses\n28.7.2. Temperature results\n28.7.3. Welding results\n28.7.4. Heat generation\n28.7. Results and discussion"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2871-deformation-and-stresses",
        "title": "Friction stir welding (FSW) simulation > 28.7.1. Deformation and stresses",
        "section": "28.7.1. Deformation and stresses",
        "text": "It is important to observe the change in various quantities around the weld\nline during the FSW process. The following figure shows the deflection of the\nworkpiece due to plunging of the tool in the first load step:\nFigure 28.9: Deflection at workpiece after load step 1\nThe deflection causes high stresses to develop on the workpiece beneath the\ntool, as shown in this figure:\nFigure 28.10: Von Mises stress after load step 1\nFollowing load step 1, the temperature remains unchanged (25 °C), as shown in\nthis figure:\nFigure 28.11: Temperature after load step 1\nAs the tool begins to rotate at this location, the frictional stresses develop\nand increase rapidly. The following two figures show the increment in contact\nfrictional stresses from load step 1 to load step 2:\nFigure 28.12: Frictional stress after load step 1\nFigure 28.13: Frictional stress after load step 2\nAll frictional dissipated energy is converted into heat during load step 2. The\nheat is generated at the tool-workpiece interface. Most of the heat is\ntransferred to the workpiece (FWGT is specified to 0.95). As a result, the\ntemperature of the workpiece increases rapidly compared to that of the tool.\n28.7.1. Deformation and stresses"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2872-temperature-results",
        "title": "Friction stir welding (FSW) simulation > 28.7.2. Temperature results",
        "section": "28.7.2. Temperature results",
        "text": "The following two figures shows the temperature rise due to heat generation in the\nsecond and third load steps:\nFigure 28.14: Temperature after load step 2\nFigure 28.15: Temperature after load step 3\nThe maximum temperature on the workpiece occurs beneath the tool during the\nlast two load steps. Heat generation is due to the mechanical loads. No\nexternal heat sources are used. As the temperature increases, the material\nsoftens and the coefficient of friction decreases. A temperature-dependent\ncoefficient of friction (0.4 to 0.2) helps to prevent the maximum temperature\nfrom exceeding the material melting point.\nThe observed temperature rise in the model shows that heat generation during\nthe second and third load steps is due to friction between the tool shoulder\nand workpiece, as well as plastic deformation of the workpiece material.\nThe melting temperature of 304L stainless steel is 1450 °C. As shown in the\nfollowing figure, the maximum temperature range at the weld line region on the\nworkpiece beneath the tool is well below the melting temperature of the\nworkpiece material during the second and third load steps, but above 70 percent\nof the melting temperature:\nFigure 28.16: Maximum temperature (on workpiece beneath the tool) variation with time\nThe two plates can be welded together within this temperature range.\nThe following figure shows the temperature distributions on the top surface of\nthe workpiece along the transverse distance (perpendicular to the weld line):\nFigure 28.17: Temperature distribution on the top surface of workpiece at various locations\nAs shown in the following figure and table, the temperature plots indicate the\ntemperature distribution at various locations on the weld line when the maximum\ntemperature occurs at those locations:\nTable 28.5: Locations on weld line\nLocation Number\nDistance on the weld line in y direction\nTime when maximum temperature occurs\n1\n0.016 m\n15.25 Sec\n2\n0.027 m\n19.2 Sec\n3\n0.040 m\n24 Sec\nThe following figure shows the temperature distribution in the thickness direction\nat location 1:\nFigure 28.19: Temperature distribution in thickness direction at location 1\nAs expected, the highest temperature caused by heat generation appears around\nthe weld line region. By comparing the above temperature results with the\nreference results, it can be determined that the temperatures obtained at the\nweld line are well below the melting temperature of the workpiece material, but\nstill sufficient for friction stir welding.\nThe following table and figure show the time-history response of the\ntemperature at various locations on the weld line:\nLocation number\nDistance on the weld line\n1\n0.018 m\n2\n0.023 m\n3\n0.027 m\n4\n0.032 m\n5\n0.035 m\n6\n0.039 m\nFigure 28.20: Temperature variation with time on various joint locations\n28.7.2. Temperature results"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2873-welding-results",
        "title": "Friction stir welding (FSW) simulation > 28.7.3. Welding results",
        "section": "28.7.3. Welding results",
        "text": "A bonding temperature of 1000 °C is already defined for the welding simulation\nat the interface of the plates. The contact status at this interface after the last\nload step is shown in the following figure:\nFigure 28.21: Contact status at interface with bonding temperature 1000 °C\nElements can be in near-contact (blue), sliding (green) or sticking (red) states.\nThe sticking portion of the interface shows the bonding or welding region of\nthe plates. If the bonding temperature was assumed to be 900 °C, then the\nwelding region would increase, as shown in this figure:\nFigure 28.22: Contact status at interface with bonding temperature 900 °C\nElements can be in near-contact (blue), sliding (green) or sticking (red) states.\n28.7.3. Welding results"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2874-heat-generation",
        "title": "Friction stir welding (FSW) simulation > 28.7.4. Heat generation",
        "section": "28.7.4. Heat generation",
        "text": "Friction and plastic deformation generate heat. A calculation of frictional and\nplastic heat generation is performed. The generation of heat due to friction\nbegins in the second load step.\nThe CONTA174 element’s FDDIS (SMISC item) output option is used to\ncalculate frictional heat generation on the workpiece. This option gives the\nfrictional energy dissipation per unit area for an element. After multiplying\nthis value with the corresponding element area, the friction heat-generation\nrate for an element is calculated. By summing the values from each CONTA174\nelement of the workpiece, the total frictional heat generation rate is\ncalculated for a given time.\nIt is possible to calculate the total frictional heat-generation rate at each\ntime-step (Mapdl.etable). The\nfollowing figure shows the plot of total frictional heat generation rate on the\nworkpiece with time:\nFigure 28.23: Total frictional heat rate variation with time\nThe plot indicates that the frictional heat starts from the second load step\n(after 1 second).\nThe element contact area can be calculated using the\nCONTA174 element CAREA (NMISC, 58) output\noption.\nA similar calculation is performed to check the heat generation from plastic\ndeformation on the workpiece. The SOLID226 element’s output option\nPHEAT (NMISC, 5) gives the plastic heat generation rate per unit\nvolume. After multiplying this value with the corresponding element volume,\nthe plastic heat generation rate for an element is calculated. By summing the\nvalues from each element (SOLID226) of the workpiece, the total plastic\nheat generation rate is calculated for a particular time.\nIt is possible to calculate the total frictional heat generation rate at each\ntime-step (Mapdl.etable). The following\nfigure shows the plot of the total plastic heat-generation rate with time.\nFigure 28.24: Total plastic heat rate variation with time\nFigure 28.23 and Figure 28.24\nshow that friction is responsible for generating most of the heat needed, while the\ncontribution of heat due to plastic deformation is less significant. Because the\ntool-penetration is shallow and the tool pin is ignored, the plastic heat is small\ncompared to frictional heat.\n28.7.4. Heat generation\nCONTA174\nFDDIS\nSMISC item\nCONTA174\nMapdl.etable\nCONTA174\nCAREA\nNMISC, 58\nSOLID226\nPHEAT\nNMISC, 5\nSOLID226\nMapdl.etable"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#288-exit-mapdl",
        "title": "Friction stir welding (FSW) simulation > 28.8. Exit MAPDL",
        "section": "28.8. Exit MAPDL",
        "text": "28.8. Exit MAPDL"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#289-recommendations",
        "title": "Friction stir welding (FSW) simulation > 28.9. Recommendations",
        "section": "28.9. Recommendations",
        "text": "To perform a similar FSW analysis, consider the following hints and\nrecommendations:\nFSW is a coupled-field (structural-thermal) process. The temperature field\naffects the stress distribution during the entire process. Also, heat generated\nin structural deformation affects the temperature field. The direct method of\ncoupling is recommended for such processes. This method involves just one\nanalysis that uses a coupled-field element containing all necessary degrees of\nfreedom. Direct coupling is advantageous when the coupled-field interaction\ninvolves strongly coupled physics or is highly nonlinear.\nA nonlinear transient analysis is preferable for simulations where the\nobjective is to study the transient temperature and transient heat\ntransfer.\nThe dynamic effects of different physics should be controlled. In this\nproblem, for example, the dynamic effects of the structural degrees of freedom\nare disabled as they are unimportant.\nSeparating the solution process into three load steps helps you to understand\nthe physics and solve the problem.\nThe contact between the two plates must be nearly perfect to maintain\ntemperature continuity. For a perfect thermal contact, specify a high thermal\ncontact conductance (TCC) coefficient between workpiece plates. A high\ncoefficient results in temperature continuity across the interface.\nBecause the problem is nonlinear, proper solution settings are required. Set\nthe following analysis controls to the appropriate values to achieve the\nconverged solution: Mapdl.lnsrch(),\nMapdl.cutcontrol(),\nMapdl.kbc(),\nMapdl.neqit(),\nMapdl.nropt(),\nand Mapdl.autots().\nConvergence at the second and third load steps is difficult to achieve. The\ndepth of penetration of the tool on the workpiece (UZ), rotational speed of the\ntool (ROTZ), and time-step size play crucial roles in the convergence of the\nsecond load step. Use a very small time-step size if the rotational speed is\nhigher than 60 RPM.\nA symmetric mesh (about the joint line) is preferred to capture the exact\noutputs and their effects on the workpiece. A hex mesh with dropped midside\nnodes is recommended for the workpiece as well as the tool.\nThis approach helps to maintain symmetry and prevent the temperature\nfrom reaching negative values during the simulation.\nA minimum of two element layers is required in the thickness direction. A fine\nsweep mesh near the weld line yields more accurate results; however, too fine a\nmesh increases computational time. A fine mesh is unnecessary on the tool side.\nTo minimize computational time, the tool can be considered to be rigid with no\ntemperature degrees of freedom.\n28.9. Recommendations\nMapdl.lnsrch()\nMapdl.cutcontrol()\nMapdl.kbc()\nMapdl.neqit()\nMapdl.nropt()\nMapdl.autots()\nUZ\nROTZ"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2810-references",
        "title": "Friction stir welding (FSW) simulation > 28.10. References",
        "section": "28.10. References",
        "text": "The following papers are cited in this example problem:\nZhu, X. K. & Chao, Y. J. (2004). Numerical simulation of transient\ntemperature and residual stresses in friction stir welding of 304L stainless\nsteel. Journal of Materials Processing Technology. 146(2),\n263-272.\nPrasanna, P., Rao, B. S., & Rao, G. K. (2010). Finite element modeling for\nmaximum temperature in friction stir welding and its validation.\nJournal of Advanced Manufacturing Technology. 51,\n925-933.\nOzel, T., Karpat, Y., & Srivastava, A. (2008). Hard turning with variable\nmicro-geometry PcBN tools. CIRP Annals - Manufacturing\nTechnology. 57, 73-76.\nMishra, R. S. (2007). Friction Stir Welding and\nProcessing. Ed. R. S. Mishra and M. W. Mahoney. Materials Park,\nOH: ASM International.\n28.10. References"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir",
        "href": "technology_showcase_examples/techdemo-28/ex_28-tecfricstir.html#2811-input-files",
        "title": "Friction stir welding (FSW) simulation > 28.11. Input files",
        "section": "28.11. Input files",
        "text": "The following files were used in this problem:\nfsw.cdb – Common database file containing the FSW model information\nDownload the zipped td-28 file set for this problem\nFor more information, see Obtaining the input files.\nGallery generated by Sphinx-Gallery\n28.11. Input files\nfsw.cdb"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#beam-stresses-and-deflections",
        "title": "Beam stresses and deflections",
        "section": "Beam stresses and deflections",
        "text": "Problem description:\nA standard 30 inch WF beam, with a cross-sectional area A,\nis supported as shown below and loaded on the overhangs by a\nuniformly distributed load w. Determine the maximum bending\nstress, \\sigma_max, in the middle portion of the beam and\nthe deflection, \\delta, at the middle of the beam.\nReference:\nS. Timoshenko, Strength of Material, Part I, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1955,\npg. 98, problem 4.\nAnalysis type(s):\nStatic Analysis ANTYPE=0\nElement type(s):\n3-D 2 Node Beam (BEAM188)\nMaterial properties:\nE = 30 \\cdot 10^6 psi\nGeometric properties:\na = 120 in\nl = 240 in\nh = 30 in\nA = 50.65 in^2\nI_z = 7892 in^4\nLoading:\nw = (10000/12) lb/in\nAnalytical equations:\nM is the bending moment for the middle portion of the beam:\nM = 10000 \\cdot 10 \\cdot 60 = 6 \\cdot 10^6 lb \\cdot in\nDetermination of the maximum stress in the middle portion of the beam is\n\\sigma_max = \\frac{M h}{2 I_z}\nThe deflection, \\delta, at the middle of the beam can be defined\nby the formulas of the transversally loaded beam:\n\\delta = 0.182 in\nBeam stresses and deflections\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#start-mapdl",
        "title": "Beam stresses and deflections > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#define-element-type",
        "title": "Beam stresses and deflections > Define element type",
        "section": "Define element type",
        "text": "Set up the element type (a beam-type).\nDefine element type"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#define-material",
        "title": "Beam stresses and deflections > Define material",
        "section": "Define material",
        "text": "Set up the material.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#define-section",
        "title": "Beam stresses and deflections > Define section",
        "section": "Define section",
        "text": "Set up the cross-section properties for a beam element.\nDefine section"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#define-geometry",
        "title": "Beam stresses and deflections > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. Create nodes then create elements\nbetween nodes.\nDefine elements\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#define-boundary-conditions",
        "title": "Beam stresses and deflections > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Application of boundary conditions (BC).\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#define-distributed-loads",
        "title": "Beam stresses and deflections > Define distributed loads",
        "section": "Define distributed loads",
        "text": "Apply a distributed force of w = (10000/12) lb/in\nin the y-direction.\nDefine distributed loads"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#solve",
        "title": "Beam stresses and deflections > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system. Print the solver output.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#post-processing",
        "title": "Beam stresses and deflections > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. To get the stress and deflection results\nfrom the middle node and cross-section of the beam we can use\nMapdl.get_value.\nPost-processing\nMapdl.get_value"
    },
    {
        "objectID": "verif-manual/vm-002-beam_stresses_and_deflections",
        "href": "verif-manual/vm-002-beam_stresses_and_deflections.html#check-results",
        "title": "Beam stresses and deflections > Check results",
        "section": "Check results",
        "text": "Now that we have the results we can compare the nodal displacement and stress\nexperienced by middle node of the beam to the known stresses -11,400 psi and\n0.182 inches of the deflection.\nStop MAPDL.\nTotal running time of the script: (0 minutes 1.777 seconds)\nDownload Jupyter notebook: vm-002-beam_stresses_and_deflections.ipynb\nDownload Python source code: vm-002-beam_stresses_and_deflections.py\nDownload zipped: vm-002-beam_stresses_and_deflections.zip\nGallery generated by Sphinx-Gallery\nCheck results\nDownload Jupyter notebook: vm-002-beam_stresses_and_deflections.ipynb\nDownload Python source code: vm-002-beam_stresses_and_deflections.py\nDownload zipped: vm-002-beam_stresses_and_deflections.zip"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#one-dimensional-terzaghis-consolidation-problem-with-permeability-as-function-of-depth",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth",
        "section": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth",
        "text": "The test case is to simulate a one-dimensional Terzaghi’s problem with permeability as a function\nof the soil depth. A pressure P is applied on the top surface of the soil with depth H and\nwidth W. The top surface of the soil is fully permeable and the permeability decreases linearly\nwith depth. The excess pore water pressure for 0.1, 0.2, 0.3, 0.4, and 0.5 day is calculated and\ncompared against the reference results obtained using the PIM method (Figure 5, pg. 5916).\nA POINT INTERPOLATION METHOD FOR SIMULATING DISSIPATION PROCESS\nOF CONSOLIDATION, J.G.WANG, G.R.LIU, Y.G.WU, COMPUTER METHODS\nIN APPLIED MECHANICS AND ENGINEERING 190 (2001),PG: 5907-5922\nStatic Analysis ANTYPE=0\n2D 4-Node Coupled Pore-Pressure Element (CPT212)\nYoungs modulus, E = 4 \\cdot 10^7 Pa\nPoissons ratio, \\mu = 0.3\nPermeability value at bottom of the soil, fpx = 1.728 \\cdot 10^-3 m/day\nPermeability value at the top of the soil = 100 * fpx\nHeight, H = 16 m\nWidth, W = 1 m\nPressure, P = 1 \\cdot 10^4 Pa\nThe soil is modeled using 2D CPT212 elements with plane strain element behavior.\nThe UX degree of freedom for all nodes is constrained and the UY degree of freedom at the bottom\nof the soil is constrained. The pressure degree of freedom at the top edge is constrained to\nmake it fully permeable. Linearly varying permeability of the soil is defined using the TB,PM\nmaterial model. Static analysis is performed with an end time of 86400 seconds (1 day) and with\nstepped pressure loading P on the top edge of the soil. The excess water pore pressure at depth\nH = 6 m is computed for 0.1 (8640 s), 0.2 (17280 s), 0.3 (25920 s), 0.4 (34560 s), and\n0.5 days (43200 s) by interpolating the solution obtained at the nearest time points.\nOne Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#define-element-type-and-properties",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Define element type and properties",
        "section": "Define element type and properties",
        "text": "Use 2D 4 NOode Coupled Pore Pressure Element (CPT212) and\nset PLANE STRAIN Formulation Keyopt(3)=2.\nDefine element type and properties"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#define-material",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 4e7\nand Poisson’s ratio of 0.3 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#define-geometry",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#define-boundary-conditions",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Fix UX degrees of freedom. Constraining UY DOF AT Location Y=0.\nDefining the top portion of the soil as permeable.\nThen exit prep7 processor.\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#solve",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#post-processing",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#specify-reference-solution",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Specify Reference Solution",
        "section": "Specify Reference Solution",
        "text": "Specify Reference Solution"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#inline-functions-in-pymapdl-to-query-node",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Inline functions in PyMAPDL to query node",
        "section": "Inline functions in PyMAPDL to query node",
        "text": "Inline functions in PyMAPDL to query node"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#post-processing-compute-pore-pressure",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Post-processing: Compute pore pressure",
        "section": "Post-processing: Compute pore pressure",
        "text": "redirects solver output to a file named “SCRATCH”\nPost-processing: Compute pore pressure"
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#verify-the-results",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#finish-the-post-processing-processor",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-295",
        "href": "verif-manual/vm-295.html#stop-mapdl",
        "title": "One Dimensional Terzaghi’s Consolidation Problem with Permeability as Function of Depth > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 1.639 seconds)\nDownload Jupyter notebook: vm-295.ipynb\nDownload Python source code: vm-295.py\nDownload zipped: vm-295.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-295.ipynb\nDownload Python source code: vm-295.py\nDownload zipped: vm-295.zip"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#nuclear-regulatory-commission-piping-benchmarks",
        "title": "Nuclear Regulatory Commission Piping Benchmarks",
        "section": "Nuclear Regulatory Commission Piping Benchmarks",
        "text": "The example problem contains Mechanical APDL solutions to\nNuclear Regulatory Commission (NRC) piping benchmark problems\ntaken from publications NUREG/CR-1677, Volumes 1, Problem 1.\nThe piping benchmark solutions given in NRC publications were obtained\nby using a computer program EPIPE which is a modification of the widely\navailable program SAP IV specifically prepared to perform piping analyses.\nThis benchmark problem contains three straight sections, two bends,\nand two fixed anchors. The total mass of the system is represented\nby structural mass element (MASS21) specified at individual nodes.\nModal and response spectrum analysis is performed on the piping model.\nFrequencies obtained from modal solve and the nodal/element solution\nobtained from spectrum solve are compared against reference results.\nFor response spectrum analysis, acceleration response spectrum\ncurve defined by SV and FREQ commands.\nP.Bezler, M. Hartzman & M. Reich,”Dynamic Analysis of Uniform Support\nMotion Response Spectrum Method”, (NUREG/CR-1677), Brookhaven National\nLaboratory, August 1980, Problem 1, Pages 24-47.\nModal Analysis ANTYPE=2\nSpectral Analysis ANTYPE=8\nStructural Mass Element (MASS21)\n3-D 3-Node Pipe Element (PIPE289)\n3-D 3-Node Elbow Element (ELBOW290)\nThe model consists of a piping system with straight pipes and elbows.\nThe system is subjected to uniform support motion in three spatial\ndirections.\nThe model is meshed using PIPE289 and ELBOW290 elements for\nthe piping components and MASS21 elements for point mass representation.\nFrequencies obtained from modal solution.\nMaximum nodal displacements and rotations are extracted.\nElement forces and moments are calculated for specific elements.\nReaction forces from the spectrum solution are obtained.\nSpecify material properties, real constants and Element types\nGeometry modeling of nuclear piping system\nMeshing of nuclear piping system using pipe and elbow elements\nThe total system mass of nuclear piping system is represented by structural\nmass element MASS21 specified at individual nodes.\nUsing ELBOW, to convert some PIPE289 into ELBOW290\nDisplay the nuclear piping system model\nDefine constraints\nFinish preprocessing aspects of nuclear piping system.\nNuclear Regulatory Commission Piping Benchmarks\nSV\nFREQ\nANTYPE=2\nANTYPE=8\nMASS21\nPIPE289\nELBOW290\nPIPE289\nELBOW290\nMASS21\nMASS21\nELBOW\nPIPE289\nELBOW290"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#modal-analysis",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Modal analysis",
        "section": "Modal analysis",
        "text": "Perform modal analysis to obtain the first five natural frequencies\nof the system. The results will be used to determine the response spectrum\nanalysis. The modal analysis is performed using the LANB method.\nModal analysis"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#solve-the-modal-analysis",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Solve the modal analysis",
        "section": "Solve the modal analysis",
        "text": "Solve the modal analysis"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#postprocessing-extracting-frequencies-from-the-modal-analysis",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Postprocessing: Extracting frequencies from the modal analysis",
        "section": "Postprocessing: Extracting frequencies from the modal analysis",
        "text": "Postprocessing: Extracting frequencies from the modal analysis"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#response-spectrum-analysis",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Response Spectrum Analysis",
        "section": "Response Spectrum Analysis",
        "text": "Perform spectrum analysis using the frequencies obtained from the modal analysis.\nThe response spectrum analysis will be performed for a single point excitation\nresponse spectrum. The damping ratio is set to a constant value for all modes.\nThe modes are grouped based on a significance level, and the seismic acceleration\nresponse loading is defined. The excitation is applied along the X, Y, and Z\ndirections with specified frequencies and corresponding spectral values.\nStart the solution controls for spectrum solve\nResponse Spectrum Analysis"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#solve-the-spectrum-analysis-along-x-direction",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Solve the spectrum analysis along X direction",
        "section": "Solve the spectrum analysis along X direction",
        "text": "Excitation along X direction\nSolve the spectrum analysis along X direction"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#solve-the-spectrum-analysis-along-y-direction",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Solve the spectrum analysis along Y direction",
        "section": "Solve the spectrum analysis along Y direction",
        "text": "Excitation along Y direction\nSolve the spectrum analysis along Y direction"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#solve-the-spectrum-analysis-along-z-direction",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Solve the spectrum analysis along Z direction",
        "section": "Solve the spectrum analysis along Z direction",
        "text": "Finish the spectrum analysis\nSolve the spectrum analysis along Z direction"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#postprocessing-extracting-results-from-the-spectrum-analysis",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Postprocessing: Extracting results from the spectrum analysis",
        "section": "Postprocessing: Extracting results from the spectrum analysis",
        "text": "Extract maximum nodal displacements and rotations from the spectrum solution.\nThe results will be stored in the MAPDL database and can be accessed using\nthe starstatus command. The nodal displacements and rotations are obtained\nfor specific nodes in the model. The element forces and moments are obtained\nfor specific nodes from spectrum solution. The reaction forces from the spectrum\nsolution are also extracted.\nElement Forces and Moments obtained from spectrum solution for Node “I”\nReaction forces from spectrum solution\nFinish postprocessing of response spectrum analysis.\nPostprocessing: Extracting results from the spectrum analysis"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#verify-the-results",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Verify the results",
        "section": "Verify the results",
        "text": "Verify the results"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#frequencies-obtained-from-modal-solution",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Frequencies Obtained from Modal Solution",
        "section": "Frequencies Obtained from Modal Solution",
        "text": "The results obtained from the modal solution are compared against target values.\nThe target values are defined based on the reference results from the NRC publication.\nFrequencies Obtained from Modal Solution"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#element-forces-and-moments-obtained-from-spectrum-solution-for-specific-elements",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Element forces and moments obtained from spectrum solution for specific elements",
        "section": "Element forces and moments obtained from spectrum solution for specific elements",
        "text": "Element forces and moments obtained from spectrum solution for specific elements"
    },
    {
        "objectID": "verif-manual/vm-nr1677-01-1a",
        "href": "verif-manual/vm-nr1677-01-1a.html#reaction-forces",
        "title": "Nuclear Regulatory Commission Piping Benchmarks > Reaction forces",
        "section": "Reaction forces",
        "text": "Stop MAPDL.\nTotal running time of the script: (0 minutes 1.467 seconds)\nDownload Jupyter notebook: vm-nr1677-01-1a.ipynb\nDownload Python source code: vm-nr1677-01-1a.py\nDownload zipped: vm-nr1677-01-1a.zip\nGallery generated by Sphinx-Gallery\nReaction forces\nDownload Jupyter notebook: vm-nr1677-01-1a.ipynb\nDownload Python source code: vm-nr1677-01-1a.py\nDownload zipped: vm-nr1677-01-1a.zip"
    },
    {
        "objectID": "verif-manual/sg_execution_times",
        "href": "verif-manual/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "01:05.522 total execution time for 25 files from verif-manual:\nExample\nTime\nMem (MB)\nsphx_glr_verif-manual_vm-298.py (vm-298.py)\n00:22.736\n0.0\nsphx_glr_verif-manual_vm-299.py (vm-299.py)\n00:06.382\n0.0\nsphx_glr_verif-manual_vm-006-pinched_cylinder.py (vm-006-pinched_cylinder.py)\n00:06.342\n0.0\nsphx_glr_verif-manual_vm-016.py (vm-016.py)\n00:02.871\n0.0\nsphx_glr_verif-manual_vm-005-laterally_loaded_tapered_support_structure.py (vm-005-laterally_loaded_tapered_support_structure.py)\n00:02.229\n0.0\nsphx_glr_verif-manual_vm-291.py (vm-291.py)\n00:01.890\n0.0\nsphx_glr_verif-manual_vm-018.py (vm-018.py)\n00:01.814\n0.0\nsphx_glr_verif-manual_vm-002-beam_stresses_and_deflections.py (vm-002-beam_stresses_and_deflections.py)\n00:01.777\n0.0\nsphx_glr_verif-manual_vm-295.py (vm-295.py)\n00:01.639\n0.0\nsphx_glr_verif-manual_vm-012-combined-bending-and-torsion.py (vm-012-combined-bending-and-torsion.py)\n00:01.626\n0.0\nsphx_glr_verif-manual_vm-004-deflection_of_a_hinged_support.py (vm-004-deflection_of_a_hinged_support.py)\n00:01.548\n0.0\nsphx_glr_verif-manual_vm-003-thermally_loaded_support_structure.py (vm-003-thermally_loaded_support_structure.py)\n00:01.531\n0.0\nsphx_glr_verif-manual_vm-007-plastic_compression_of_a_pipe_assembly.py (vm-007-plastic_compression_of_a_pipe_assembly.py)\n00:01.506\n0.0\nsphx_glr_verif-manual_vm-nr1677-01-1a.py (vm-nr1677-01-1a.py)\n00:01.467\n0.0\nsphx_glr_verif-manual_vm-008-parametric_calculation.py (vm-008-parametric_calculation.py)\n00:01.234\n0.0\nsphx_glr_verif-manual_vm-025.py (vm-025.py)\n00:01.072\n0.0\nsphx_glr_verif-manual_vm-021.py (vm-021.py)\n00:01.049\n0.0\nsphx_glr_verif-manual_vm-011-residual-stress-problem.py (vm-011-residual-stress-problem.py)\n00:01.006\n0.0\nsphx_glr_verif-manual_vm-001-statically_indeterminate_reaction_force_analysis.py (vm-001-statically_indeterminate_reaction_force_analysis.py)\n00:01.006\n0.0\nsphx_glr_verif-manual_vm-015.py (vm-015.py)\n00:00.936\n0.0\nsphx_glr_verif-manual_vm-010-bending_of_a_t-shaped_beam.py (vm-010-bending_of_a_t-shaped_beam.py)\n00:00.899\n0.0\nsphx_glr_verif-manual_vm-014.py (vm-014.py)\n00:00.880\n0.0\nsphx_glr_verif-manual_vm-020.py (vm-020.py)\n00:00.867\n0.0\nsphx_glr_verif-manual_vm-013.py (vm-013.py)\n00:00.799\n0.0\nsphx_glr_verif-manual_vm-009-large_lateral_deflection_of_unequal_stiffness_springs.py (vm-009-large_lateral_deflection_of_unequal_stiffness_springs.py)\n00:00.415\n0.0\nComputation times\nvm-298.py\nvm-299.py\nvm-006-pinched_cylinder.py\nvm-016.py\nvm-005-laterally_loaded_tapered_support_structure.py\nvm-291.py\nvm-018.py\nvm-002-beam_stresses_and_deflections.py\nvm-295.py\nvm-012-combined-bending-and-torsion.py\nvm-004-deflection_of_a_hinged_support.py\nvm-003-thermally_loaded_support_structure.py\nvm-007-plastic_compression_of_a_pipe_assembly.py\nvm-nr1677-01-1a.py\nvm-008-parametric_calculation.py\nvm-025.py\nvm-021.py\nvm-011-residual-stress-problem.py\nvm-001-statically_indeterminate_reaction_force_analysis.py\nvm-015.py\nvm-010-bending_of_a_t-shaped_beam.py\nvm-014.py\nvm-020.py\nvm-013.py\nvm-009-large_lateral_deflection_of_unequal_stiffness_springs.py"
    },
    {
        "objectID": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis",
        "href": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis.html#statically-indeterminate-reaction-force-analysis",
        "title": "Statically indeterminate reaction force analysis",
        "section": "Statically indeterminate reaction force analysis",
        "text": "A prismatical bar with built-in ends is loaded axially at two\nintermediate cross sections. Determine the reactions R_1\nand R_2.\nS. Timoshenko, Strength of Materials, Part I, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1955,\npg. 26, problem 10.\nStatic Analysis ANTYPE=0\n3-D Spar (or Truss) Elements (LINK180)\nE = 30 \\cdot 10^6 psi\na = b = 0.3\nl = 10 in\nF_1 = 2*F_2 = 1000 lb\nP = R_1 + R_2 where P is load.\n\\frac{R_2}{R_1} = \\frac{a}{b}\nWhere a and b are the ratios of distances between\nthe load and the wall.\nStatically indeterminate reaction force analysis\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis",
        "href": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis.html#define-material",
        "title": "Statically indeterminate reaction force analysis > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material, with a linking-type\nsection and a Young’s modulus of 30e6).\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis",
        "href": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis.html#define-geometry",
        "title": "Statically indeterminate reaction force analysis > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis",
        "href": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis.html#define-boundary-conditions",
        "title": "Statically indeterminate reaction force analysis > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Full constrain nodes 1 and 4, by incrementing from node 1 to node 4\nin steps of 3. Apply y-direction forces to nodes 2 and 3, with\nvalues of -500 lb and -1000 lb respectively. Then exit prep7.\nEffectiely, this sets:\n- F_1 = 2*F_2 = 1000 lb\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis",
        "href": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis.html#solve",
        "title": "Statically indeterminate reaction force analysis > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis",
        "href": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis.html#post-processing",
        "title": "Statically indeterminate reaction force analysis > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Select the nodes at y=10 and y=0, and\nsum the forces there. Then store the y-components in two variables:\nreaction_1 and reaction_2.\nPost-processing\ny=10\ny=0\nreaction_1\nreaction_2"
    },
    {
        "objectID": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis",
        "href": "verif-manual/vm-001-statically_indeterminate_reaction_force_analysis.html#check-results",
        "title": "Statically indeterminate reaction force analysis > Check results",
        "section": "Check results",
        "text": "Now that we have the reaction forces we can compare them to the\nexpected values of 900 lbs and 600 lbs for reactions 1 and 2 respectively.\nAnalytical results obtained from:\n- P = R_1 + R_2 where P is load of 1500 lbs\n- \\frac{R_2}{R_1} = \\frac{a}{b}\nHint: Solve for each reaction force independently.\nStop MAPDL.\nTotal running time of the script: (0 minutes 1.006 seconds)\nDownload Jupyter notebook: vm-001-statically_indeterminate_reaction_force_analysis.ipynb\nDownload Python source code: vm-001-statically_indeterminate_reaction_force_analysis.py\nDownload zipped: vm-001-statically_indeterminate_reaction_force_analysis.zip\nGallery generated by Sphinx-Gallery\nCheck results\nDownload Jupyter notebook: vm-001-statically_indeterminate_reaction_force_analysis.ipynb\nDownload Python source code: vm-001-statically_indeterminate_reaction_force_analysis.py\nDownload zipped: vm-001-statically_indeterminate_reaction_force_analysis.zip"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#bending-of-a-solid-beam-plane-elements",
        "title": "Bending of a Solid Beam (Plane Elements)",
        "section": "Bending of a Solid Beam (Plane Elements)",
        "text": "A beam of length l and height h is built-in at one end and loaded at the\nfree end with:\nCase 1: a moment M.\nCase 2: a shear force F.\nFor each case, determine the deflection \\delta at the free end and the bending\nstress \\sigma_{Bend} a distance d from the wall at the outside fiber.\nFormulas for Stress and Strain, R. J. Roark, 4th Edition, McGraw-Hill Book Co., Inc.,\nNew York, NY, 1965, pp. 104, 106.\nStatic Analysis ANTYPE=0\n2-D Structural Solid Elements (PLANE42)\n2-D 4 Node structural elements(PLANE182)\nE = 30 \\cdot 10^6 psi\n\\mu = 0.0\nl = 10 in\nh = 2.0 in\nd = 1.0 in\nCase 1, M = 2000 in-lb\nCase 2, F = 300 lb\nThe stiffness matrix formed in the first load step is also used in the second\nload step (automatically determined by Mechanical APDL). The end moment is\nrepresented by equal and opposite forces separated by a distance h. The bending\nstress is obtained from face stresses on element 1.\nBending of a Solid Beam (Plane Elements)\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#case-1-solve-using-plane42-element-model",
        "title": "Bending of a Solid Beam (Plane Elements) > Case 1: Solve Using PLANE42 Element Model.",
        "section": "Case 1: Solve Using PLANE42 Element Model.",
        "text": "Enter the model creation prep7 preprocessor\nCase 1: Solve Using PLANE42 Element Model."
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-element-type-and-properties",
        "title": "Bending of a Solid Beam (Plane Elements) > Define element type and properties",
        "section": "Define element type and properties",
        "text": "Use 2-D Structural Solid (PLANE42) and include Surface solution for both faces,\nvia Keyopt(6)=2.\nDefine element type and properties"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-material",
        "title": "Bending of a Solid Beam (Plane Elements) > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’s ratio of 0.0 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-geometry",
        "title": "Bending of a Solid Beam (Plane Elements) > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-boundary-conditions-and-loadings",
        "title": "Bending of a Solid Beam (Plane Elements) > Define boundary conditions and loadings",
        "section": "Define boundary conditions and loadings",
        "text": "Fix all degrees of freedom (dof) at nodes 10 & 11.\nFor load case 1, apply end moment and then exit prep7 processor.\nDefine boundary conditions and loadings"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#solve",
        "title": "Bending of a Solid Beam (Plane Elements) > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system for the 1st load case.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#post-processing",
        "title": "Bending of a Solid Beam (Plane Elements) > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflection and stress components for load case 1.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#solve",
        "title": "Bending of a Solid Beam (Plane Elements) > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system for the 2nd load case.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-boundary-conditions-and-loadings",
        "title": "Bending of a Solid Beam (Plane Elements) > Define boundary conditions and loadings",
        "section": "Define boundary conditions and loadings",
        "text": "For load case 2, apply end load and then solve for 2nd load case.\nDefine boundary conditions and loadings"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#post-processing",
        "title": "Bending of a Solid Beam (Plane Elements) > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflection and stress components for load case 2.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#verify-the-results",
        "title": "Bending of a Solid Beam (Plane Elements) > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#finish-the-post-processing-processor",
        "title": "Bending of a Solid Beam (Plane Elements) > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#clears-the-database-without-restarting",
        "title": "Bending of a Solid Beam (Plane Elements) > Clears the database without restarting.",
        "section": "Clears the database without restarting.",
        "text": "Clears the database without restarting."
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#case-2-solve-using-plane182-element-model",
        "title": "Bending of a Solid Beam (Plane Elements) > Case 2: Solve Using PLANE182 Element Model",
        "section": "Case 2: Solve Using PLANE182 Element Model",
        "text": "Switches to the preprocessor (PREP7)\nCase 2: Solve Using PLANE182 Element Model"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-element-type-and-properties",
        "title": "Bending of a Solid Beam (Plane Elements) > Define element type and properties",
        "section": "Define element type and properties",
        "text": "Use 2-D 4 Node structural elements (PLANE182) and include simplified enhanced\nstrain formulation, via Keyopt(1)=3.\nDefine element type and properties"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-material",
        "title": "Bending of a Solid Beam (Plane Elements) > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’s ratio of 0.0 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-geometry",
        "title": "Bending of a Solid Beam (Plane Elements) > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-boundary-conditions-and-loadings",
        "title": "Bending of a Solid Beam (Plane Elements) > Define boundary conditions and loadings",
        "section": "Define boundary conditions and loadings",
        "text": "Fix all degrees of freedom (dof) at nodes 10 & 11.\nFor load case 1, apply end moment and then exit prep7 processor.\nDefine boundary conditions and loadings"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#solve",
        "title": "Bending of a Solid Beam (Plane Elements) > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system for the 1st load case.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#post-processing",
        "title": "Bending of a Solid Beam (Plane Elements) > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflection and stress components for load case 1.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#solve",
        "title": "Bending of a Solid Beam (Plane Elements) > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system for the 2nd load case.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#define-boundary-conditions-and-loadings",
        "title": "Bending of a Solid Beam (Plane Elements) > Define boundary conditions and loadings",
        "section": "Define boundary conditions and loadings",
        "text": "For load case 2, apply end load and then solve for 2nd load case.\nDefine boundary conditions and loadings"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#post-processing",
        "title": "Bending of a Solid Beam (Plane Elements) > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflection and stress components for load case 2.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#verify-the-results",
        "title": "Bending of a Solid Beam (Plane Elements) > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-016",
        "href": "verif-manual/vm-016.html#finish-the-post-processing-processor",
        "title": "Bending of a Solid Beam (Plane Elements) > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Total running time of the script: (0 minutes 2.871 seconds)\nDownload Jupyter notebook: vm-016.ipynb\nDownload Python source code: vm-016.py\nDownload zipped: vm-016.zip\nGallery generated by Sphinx-Gallery\nFinish the post-processing processor.\nDownload Jupyter notebook: vm-016.ipynb\nDownload Python source code: vm-016.py\nDownload zipped: vm-016.zip"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#inverse-solving-analysis-of-a-cardiovascular-structure",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure",
        "section": "Inverse-Solving Analysis of a Cardiovascular Structure",
        "text": "This example problem demonstrates the capabilities and advantages\nof using a nonlinear static analysis with inverse solving to\ninvestigate the biomechanics of a cardiovascular system.\nThe following topics are available:\n1. Introduction\n2. Setting up the model\n3. Analysis\n4. Results\n5. Exit MAPDL\n6. Recommendations\n7. References\n8. Input files\nThis example is inspired from the model and analysis defined in Chapter 62\nof the Mechanical APDL Technology Showcase Manual.\nInverse-Solving Analysis of a Cardiovascular Structure"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#1-introduction",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 1. Introduction",
        "section": "1. Introduction",
        "text": "Finite element models of cardiovascular system components (such as the heart\nvalve or blood vessels) are based on in vivo organ geometries obtained from\n3D imaging systems such as computed tomography (CT) or magnetic resonance imaging (MRI).\nAlthough medical imaging techniques offer accurate in vivo visualization of 3D\npatient-specific geometries, the geometries are under a loaded state\n(for example, in the presence of blood pressure) and lack in vivo stress/strain\nfield information. Therefore, a nonlinear analysis performed directly on the\ngeometry to simulate additional loading leads to inaccurate results.\nIn such cases, an inverse-solving analysis uses input geometry consisting of\nimages where the models are already in a deformed shape under applied loads.\nThe material properties and applied loads are known. The analysis can then\ndetermine the following:\nThe organ geometries at zero-pressure state (zero-pressure configuration)\nThe stress and strain fields on the in vivo organ geometries (the input geometries)\nThe behavior and response of the organ geometries when increasing the\nloading and taking accounting for prestressed effects\n1. Introduction"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#11-problem-description",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 1.1. Problem description",
        "section": "1.1. Problem description",
        "text": "A mouse-specific 3D geometry of the aortic lumen containing four side branches\nis considered:\nThe model represents an approximated geometry of the abdominal aorta of a mouse,\nbased on the reference.[1] The geometry is considered at end-diastolic pressure (80 mm Hg).\nThe purpose of the analysis is to solve for end-systolic pressure (120 mm Hg).\nThis figure shows the inner diameter of the model at various approximate locations:\nThe wall thickness is assumed to be 20 percent of the local radius, so it varies\nthroughout the structure.\n1.1. Problem description"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#12-starting-mapdl-as-a-service",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 1.2. Starting MAPDL as a service",
        "section": "1.2. Starting MAPDL as a service",
        "text": "1.2. Starting MAPDL as a service"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#2-setting-up-the-model",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 2. Setting up the model",
        "section": "2. Setting up the model",
        "text": "The model is meshed mostly with the higher-order hexahedral SOLID186\nelements (about 99.4 percent of the total mesh), as shown in\nthe following figure. However, it also has relatively a small number\nof tetrahedral SOLID187 elements (about 0.6 percent of the total mesh).\nThe mesh consists of 62123 elements with 4 elements to represent the wall\nthickness and at least 52 elements (or more) in the circumferential\ndirection at most locations. Mixed u-P element formulation is enabled (KEYOPT(6) = 1).\n2. Setting up the model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#21-material-properties",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 2.1. Material properties",
        "section": "2.1. Material properties",
        "text": "A Mooney-Rivlin hyperelastic material model with the following constants [4] is\nused to model the abdominal aorta:\n2.1. Material properties"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#22-boundary-conditions-and-loading",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 2.2. Boundary Conditions and Loading",
        "section": "2.2. Boundary Conditions and Loading",
        "text": "The free radial boundary conditions are applied at each end cross-section in the model:\nLocal cylindrical coordinate systems are created at each end cross-section. The nodes\nin each end cross-section are constrained in all degrees of freedom except for the\nrespective local radial direction.\nA uniformly-distributed pressure load is applied on the inner surfaces of the model.\nBecause the input geometry is considered at end-diastolic pressure, a pressure load of\n80 mm Hg (1.0666e-02 MPa) is applied on the inner surfaces of the model in the first\nload step (inverse-solving). The pressure is increased to 120 mm Hg (1.5999e-02 MPa)\nin the second load step (forward-solving).\n2.2. Boundary Conditions and Loading"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#3-analysis",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 3. Analysis",
        "section": "3. Analysis",
        "text": "The analysis for this problem is performed in two load steps:\n3. Analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#31-load-step-1-inverse-solving",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 3.1. Load Step 1 (Inverse-Solving)",
        "section": "3.1. Load Step 1 (Inverse-Solving)",
        "text": "Load Step 1 (Inverse-Solving) - A nonlinear static analysis with inverse solving (INVOPT,ON)\nis performed on the input geometry of the model (at end-diastolic pressure (80 mm Hg)) to\ndetermine the zero-pressure geometry of the model and to obtain the stress/strain results\non the input geometry.\n3.1. Load Step 1 (Inverse-Solving)"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#32-load-step-2-forward-solving",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 3.2. Load Step 2 (Forward-Solving)",
        "section": "3.2. Load Step 2 (Forward-Solving)",
        "text": "After an inverse-solving load step, the solver generally allows an analysis to continue\nas forward-solving in a new load step. You can modify existing loads or apply new loads\nin the forward-solving step. For more information, see Reverting to Forward Solving and\nContinuing the Analysis as a New Load Step in the Structural Analysis Guide.\nLoad Step 2 (Forward-Solving) - To solve the model for end-systolic pressure (120 mm Hg),\nthe solution continues using forward solving (INVOPT,OFF). The pressure load is increased\nfrom 80 mm Hg to 120 mm Hg. Continuing the solution as a new load step following the\ninverse-solving load step eliminates a step in the simulation, allowing for a more\nefficient analysis.\n3.2. Load Step 2 (Forward-Solving)"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#4-results",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 4. Results",
        "section": "4. Results",
        "text": "The results of the analysis are obtained in two load steps:\n4. Results"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#41-load-step-1-inverse-solving",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 4.1. Load Step 1 (Inverse-Solving)",
        "section": "4.1. Load Step 1 (Inverse-Solving)",
        "text": "The deformed shape of the abdominal aorta model after the first load step\nis the zero-pressure geometry:\nIn addition to the zero-pressure geometry, the inverse-solving load step also\ngives the stress/strain results of the input geometry at end-diastolic pressure (80 mm Hg):\n4.1. Load Step 1 (Inverse-Solving)"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#42-load-step-2-forward-solving",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 4.2. Load Step 2 (Forward-Solving)",
        "section": "4.2. Load Step 2 (Forward-Solving)",
        "text": "In the second load step, the analysis is continued via forward solving (INVOPT,OFF)\nand the pressure load is increased until it reaches end-systolic pressure (120 mm Hg):\nFor comparison purposes only, the following figure shows one of the cross-sections in the proximal abdominal\naorta at zero-pressure, end-diastolic pressure, and end-systolic pressure conditions:\nThe input geometry is considered at end-diastolic pressure (80 mm Hg), the deformed geometry\nafter the first load step (inverse solving) is at zero-pressure, and the deformed geometry after\nthe second load step is at end-systolic pressure (120 mm Hg). The outer diameters of the cross-section\nin deformed states are approximately calculated by creating a local cylindrical coordinate system\nat the approximate center of the deformed cross-section.\nWhen using the inverse-solving method to account for the input geometry at end-diastolic pressure (80 mm Hg)\nand prestress effects, the actual maximum total deformation is much lower.\n4.2. Load Step 2 (Forward-Solving)"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#5-exit-mapdl",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 5. Exit MAPDL",
        "section": "5. Exit MAPDL",
        "text": "5. Exit MAPDL"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#6-recommendations",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 6. Recommendations",
        "section": "6. Recommendations",
        "text": "When performing a similar type of analysis using inverse-solving, consider the following:\nUse a structured mesh with a sufficient number of element layers in the thickness direction.\nDoing so captures results more accurately, as a free mesh may give lesser-quality tetrahedral\nand/or pyramid elements, leading to spurious high-stress concentrations at some locations.\nPerform a loop test to verify the results of an inverse-solving analysis.\nAn inverse-solving analysis followed by a forward-solving analysis, or vice versa,\nis known as a loop test, as it should always result in the same geometry with the same solution.\nUse a reversed sign to apply displacement type loading in the inverse-solving load step.\nFor more information, see Applying Loads in an Inverse-Solving Analysis in the Structural Analysis Guide.\n6. Recommendations"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#7-references",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 7. References",
        "section": "7. References",
        "text": "The following reference works are cited in, or were consulted when creating, this example problem:\nBols, J., Degroote, J., Trachet, B., Verhegghe, B., Segers, P., & Vierendeels, J. (2013).\nA computational method to assess the in vivo stresses and unloaded configuration of\npatient-specific blood vessels. Journal of Computational and Applied Mathematics. 246: 10-17.\nTrachet, B., Renard, M., DeSantis, G., Staelens, S., DeBacker, J., Antiga, L., Loeys,\nB., & Segers, P. (2011). An integrated framework to quantitatively link mouse-specific\nhemodynamics to aneurysm formation in angiotensin II-infused ApoE -/- mice. Annals of\nBiomedical Engineering. 39: 2430-2444.\nTrachet, B., Bols, J., Degroote, J., Verhegghe, B., Stergiopulos, N., Vierendeels, J., &\nSegers, P. (2015). An animal-specific FSI model of the abdominal aorta in anesthetized\nmice. Annals of Biomedical Engineering. 43: 1298-1309.\nPrendergast, P.J., Lally, C., Daly, S., Reid, A. J., Lee, T. C., Quinn, D., & Dolan,\nF. (2003). Analysis of prolapse in cardiovascular stents: a constitutive equation for\nvascular tissue and finite-element modelling. Journal of Biomechanical Engineering. 125(5): 692-699.\n7. References"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-62/ex_62-techinverse",
        "href": "technology_showcase_examples/techdemo-62/ex_62-techinverse.html#8-input-files",
        "title": "Inverse-Solving Analysis of a Cardiovascular Structure > 8. Input files",
        "section": "8. Input files",
        "text": "The following files were used in this problem:\nInverse_Analysis_Cardiovascular_Structure.dat – Input file for this example problem.\nComparison_Case.dat – Input file for the comparison case.\nDownload the zipped td-62 file set for this problem\nFor more information, see Obtaining the input files.\nGallery generated by Sphinx-Gallery\n8. Input files"
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#combined-bending-and-torsion",
        "title": "Combined bending and torsion",
        "section": "Combined bending and torsion",
        "text": "A vertical bar of length l is subjected to the action of a\nhorizontal force F acting at a distance d from the axis of the bar.\nDetermine the maximum principal stress \\sigma _{max} and the\nmaximum shear stress \\tau _ {max} in the bar.\nTimoshenko, Strength of Materials, Part I, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1955,\npg. 299, problem 2.\nStatic analysis ANTYPE=0\nElastic straight pipe element (PIPE16)\n3D 2 Node pipe element (PIPE288)\nE = 30 \\cdot 10^6 psi\nu=0.3\nl = 25 l\nd = 3 ft\nSection modulus (l/c) = 10 in^3\nOuter Diameter = 4.67017 in\nWall Thickness = 2.33508 in\nF = 250 lb\nM = Fd = 9000 in-lb\nUse consistent length units of inches. Real constants for PIPE16 and\nsection properties for PIPE288 are used to define the pipe Outer Diameter\nand Wall Thickness. These values are calculated for a solid cross-section\nfrom the given section modulus. The offset load is applied as a centroidal\nforce and a moment.\nCombined bending and torsion\nANTYPE=0\nPIPE16\nPIPE288"
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#start-mapdl",
        "title": "Combined bending and torsion > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL.\nStart MAPDL"
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#pre-processing-with-et-pipe16",
        "title": "Combined bending and torsion > Pre-processing with ET PIPE16",
        "section": "Pre-processing with ET PIPE16",
        "text": "Pre-processing with ET PIPE16"
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#solve",
        "title": "Combined bending and torsion > Solve",
        "section": "Solve",
        "text": "Solve"
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#post-processing",
        "title": "Combined bending and torsion > Post-processing",
        "section": "Post-processing",
        "text": "Post-processing"
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#verify-the-results",
        "title": "Combined bending and torsion > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#pre-processing-with-et-pipe288",
        "title": "Combined bending and torsion > Pre-processing with ET PIPE288",
        "section": "Pre-processing with ET PIPE288",
        "text": "Pre-processing with ET PIPE288"
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#solve",
        "title": "Combined bending and torsion > Solve",
        "section": "Solve",
        "text": "Solve"
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#post-processing",
        "title": "Combined bending and torsion > Post-processing",
        "section": "Post-processing",
        "text": "Post-processing"
    },
    {
        "objectID": "verif-manual/vm-012-combined-bending-and-torsion",
        "href": "verif-manual/vm-012-combined-bending-and-torsion.html#verify-the-results",
        "title": "Combined bending and torsion > Verify the results.",
        "section": "Verify the results.",
        "text": "Stop MAPDL.\nTotal running time of the script: (0 minutes 1.626 seconds)\nDownload Jupyter notebook: vm-012-combined-bending-and-torsion.ipynb\nDownload Python source code: vm-012-combined-bending-and-torsion.py\nDownload zipped: vm-012-combined-bending-and-torsion.zip\nGallery generated by Sphinx-Gallery\nVerify the results.\nDownload Jupyter notebook: vm-012-combined-bending-and-torsion.ipynb\nDownload Python source code: vm-012-combined-bending-and-torsion.py\nDownload zipped: vm-012-combined-bending-and-torsion.zip"
    },
    {
        "objectID": "verif-manual/vm-008-parametric_calculation",
        "href": "verif-manual/vm-008-parametric_calculation.html#parametric-calculation",
        "title": "Parametric calculation",
        "section": "Parametric calculation",
        "text": "Write a user file macro to calculate the distance d between either nodes\nor keypoints in PREP7. Define abbreviations for calling the macro and\nverify the parametric expressions by using the macro to calculate\nthe distance between nodes N_1 and N_2 and\nbetween keypoints K_3 and K_4.\nNone.\nParametric arithmetic.\nNone.\nN_{\\mathrm{1(x,y,z)}} = 1.5, 2.5, 3.5\nN_{\\mathrm{2(x,y,z)}} = -3.7, 4.6, -3\nK_{\\mathrm{3(x,y,z)}} = 100, 0, 30\nK_{\\mathrm{4(x,y,z)}} = -200,25,80\nInstead of *CREATE, *USE, etc., we have created a class\nCreate with methods that correspond to each type of simulation.\nThis class gives a possibility to change coordinates and reuse it.\nThe simulation can be checked not just by target values, but also\nwith the simple distances’ formula between keypoints as:\nD = \\sqrt[2]{(x_2 - x_1)^2 + (y_2 - y_1)^2 + (z_2 - z_1)^2}\nParametric calculation\nd\nPREP7\n*CREATE\n*USE\nCreate"
    },
    {
        "objectID": "verif-manual/vm-008-parametric_calculation",
        "href": "verif-manual/vm-008-parametric_calculation.html#start-mapdl",
        "title": "Parametric calculation > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL and import Numpy and Pandas libraries.\nStart MAPDL"
    },
    {
        "objectID": "verif-manual/vm-008-parametric_calculation",
        "href": "verif-manual/vm-008-parametric_calculation.html#pre-processing",
        "title": "Parametric calculation > Pre-processing",
        "section": "Pre-processing",
        "text": "Enter verification example mode and the pre-processing routine.\nPre-processing"
    },
    {
        "objectID": "verif-manual/vm-008-parametric_calculation",
        "href": "verif-manual/vm-008-parametric_calculation.html#define-class",
        "title": "Parametric calculation > Define class",
        "section": "Define class",
        "text": "Identifying the class create with methods create_kp_method and\ncreate_node_method to calculate and plot the distances between keypoints\nand nodes.\nDefine class\ncreate\ncreate_kp_method\ncreate_node_method"
    },
    {
        "objectID": "verif-manual/vm-008-parametric_calculation",
        "href": "verif-manual/vm-008-parametric_calculation.html#distance-between-keypoints",
        "title": "Parametric calculation > Distance between keypoints",
        "section": "Distance between keypoints",
        "text": "Using already created method for keypoints to get the distance between them\nand print out an output. The keypoints have got next coordinates:\nK_{\\mathrm{3(x,y,z)}} = 100, 0, 30\nK_{\\mathrm{4(x,y,z)}} = -200, 25,80\nDistance between keypoints"
    },
    {
        "objectID": "verif-manual/vm-008-parametric_calculation",
        "href": "verif-manual/vm-008-parametric_calculation.html#distance-between-nodes",
        "title": "Parametric calculation > Distance between nodes.",
        "section": "Distance between nodes.",
        "text": "Using already created method for nodes to get the distance between them and\nprint out an output. The nodes have got next coordinates:\nN_{\\mathrm{1(x,y,z)}} = 1.5, 2.5, 3.5\nN_{\\mathrm{2(x,y,z)}} = -3.7, 4.6, -3\nDistance between nodes."
    },
    {
        "objectID": "verif-manual/vm-008-parametric_calculation",
        "href": "verif-manual/vm-008-parametric_calculation.html#check-results",
        "title": "Parametric calculation > Check results",
        "section": "Check results",
        "text": "Finally we have the results of the distances for both simulations,\nwhich can be compared with expected target values:\n1st simulation to get the distance between keypoints K_3 and K_4,\nwhere LEN_1 = 305.16\\,(in)\n2nd simulation to get the distance between nodes N_1 and N_2,\nwhere LEN_2 = 8.58\\,(in)\nFor better representation of the results we can use pandas dataframe\nwith following settings below:\nStop MAPDL.\nTotal running time of the script: (0 minutes 1.234 seconds)\nDownload Jupyter notebook: vm-008-parametric_calculation.ipynb\nDownload Python source code: vm-008-parametric_calculation.py\nDownload zipped: vm-008-parametric_calculation.zip\nGallery generated by Sphinx-Gallery\nCheck results\npandas\nDownload Jupyter notebook: vm-008-parametric_calculation.ipynb\nDownload Python source code: vm-008-parametric_calculation.py\nDownload zipped: vm-008-parametric_calculation.zip"
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#cylindrical-shell-under-pressure",
        "title": "Cylindrical Shell Under Pressure",
        "section": "Cylindrical Shell Under Pressure",
        "text": "A long cylindrical pressure vessel of mean diameter d and wall thickness t has closed\nends and is subjected to an internal pressure P. Determine the axial stress\n\\sigma_y and the hoop stress \\sigma_z in the vessel at the\nmidthickness of the wall.\nS. Timoshenko, Strength of Materials, Part I, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1955,\npg. 45, article 11.\nUGURAL AND FENSTER, ADV. STRENGTH AND APPL. ELAS., 1981.\nStatic Analysis ANTYPE=0\n2-Node Finite Strain Axisymmetric Shell (SHELL208)\nE = 30 \\cdot 10^6 psi\n\\mu = 0.3\nt = 1 in\nd = 120 in\nP = 500 psi\nAn arbitrary axial length of 10 inches is selected.\nNodal coupling is used in the radial direction. An axial\nforce of 5654866.8 lb ((Pπd^2)/4) is applied to\nsimulate the closed-end effect.\nCylindrical Shell Under Pressure\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#define-element-type-and-section-properties",
        "title": "Cylindrical Shell Under Pressure > Define element type and section properties",
        "section": "Define element type and section properties",
        "text": "Use 2-Node Axisymmetric Shell element (SHELL208) and “SHELL” as section type.\nDefine element type and section properties"
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#define-material",
        "title": "Cylindrical Shell Under Pressure > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’s ratio of 0.3 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#define-geometry",
        "title": "Cylindrical Shell Under Pressure > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#define-coupling-and-boundary-conditions",
        "title": "Cylindrical Shell Under Pressure > Define coupling and boundary conditions",
        "section": "Define coupling and boundary conditions",
        "text": "Couple the nodes #1 and 2 in radial direction (rotation around Z-axis).\nFix UY displacement for node 1. Fix ROTZ (rotation around Z-axis) for node 2.\nApply a concentrated force value of 5654866.8 lb in FY direction at node 2.\nInternal pressure of 500 psi is applied. Then exit prep7 processor.\nP = 500 psi\nDefine coupling and boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#solve",
        "title": "Cylindrical Shell Under Pressure > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#post-processing",
        "title": "Cylindrical Shell Under Pressure > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing and compute stress components.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#verify-the-results",
        "title": "Cylindrical Shell Under Pressure > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#finish-the-post-processing-processor",
        "title": "Cylindrical Shell Under Pressure > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-013",
        "href": "verif-manual/vm-013.html#stop-mapdl",
        "title": "Cylindrical Shell Under Pressure > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 0.799 seconds)\nDownload Jupyter notebook: vm-013.ipynb\nDownload Python source code: vm-013.py\nDownload zipped: vm-013.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-013.ipynb\nDownload Python source code: vm-013.py\nDownload zipped: vm-013.zip"
    },
    {
        "objectID": "verif-manual/vm-004-deflection_of_a_hinged_support",
        "href": "verif-manual/vm-004-deflection_of_a_hinged_support.html#deflection-of-a-hinged-support",
        "title": "Deflection of a hinged support",
        "section": "Deflection of a hinged support",
        "text": "A structure consisting of two equal steel bars, each of length l\nand cross-sectional area A, with hinged ends is subjected to\nthe action of a load F. Determine the stress, \\sigma,\nin the bars and the deflection, \\delta, of point 2. Neglect\nthe weight of the bars as a small quantity in comparison with the load\nF.\nS. Timoshenko, Strength of Materials, Part I, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1955,\npg. 10, problem 2.\nStatic Analysis ANTYPE=0\n3-D Spar (or Truss) Elements (LINK180)\nE = 30 \\cdot 10^6 psi\nl = 15 ft\nA = 0.5 in^2\n\\Theta = 30 ^\\circ\nF = 5000 lb\nThe tensile force in the bars is S\n- S = \\frac{P}{2 sin \\Theta}\nThe necessary cross-sectional area A is\n- A = \\frac{S}{\\sigma}\nThe elongation of the bar AB is\n- B_1 D = \\frac{\\sigma l}{E}\nThe deflection BB_1 is\n- BB_1 = \\frac{B_1 D}{sin \\Theta}\nConsistent length units are used. The dimensions a and b are\ncalculated parametrically in the input as follows:\n- a = 2 l cos \\Theta,\n- b = l sin \\Theta.\nDeflection of a hinged support\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-004-deflection_of_a_hinged_support",
        "href": "verif-manual/vm-004-deflection_of_a_hinged_support.html#start-mapdl",
        "title": "Deflection of a hinged support > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL"
    },
    {
        "objectID": "verif-manual/vm-004-deflection_of_a_hinged_support",
        "href": "verif-manual/vm-004-deflection_of_a_hinged_support.html#define-material",
        "title": "Deflection of a hinged support > Define material",
        "section": "Define material",
        "text": "Create a simple hinge geometry.\nWe use the LINK180 element type to model this and an elastic modulus\nof 30e6.\nWe store the x-coordinate of node 3 and the y-coordinate of node 2 for\nease of use later on.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-004-deflection_of_a_hinged_support",
        "href": "verif-manual/vm-004-deflection_of_a_hinged_support.html#define-geometry",
        "title": "Deflection of a hinged support > Define geometry",
        "section": "Define geometry",
        "text": "We create three nodes in an isosceles triangle shape, with elements\nalong the equal sides, forming a hinge.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-004-deflection_of_a_hinged_support",
        "href": "verif-manual/vm-004-deflection_of_a_hinged_support.html#define-boundary-conditions",
        "title": "Deflection of a hinged support > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Fix nodes 1 and 3 in place\nApply a force of -5000 in the negative y-direction to node 2\nThen finish the prep7 section\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-004-deflection_of_a_hinged_support",
        "href": "verif-manual/vm-004-deflection_of_a_hinged_support.html#solve",
        "title": "Deflection of a hinged support > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-004-deflection_of_a_hinged_support",
        "href": "verif-manual/vm-004-deflection_of_a_hinged_support.html#post-processing",
        "title": "Deflection of a hinged support > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing, get the results and view the nodal displacement\nas well as the equivalent stress on the nodes.\nWe make the line width larger for ease of visualization as well as\nusing two perceptually linear colormaps to enhance display of the\ndata.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-004-deflection_of_a_hinged_support",
        "href": "verif-manual/vm-004-deflection_of_a_hinged_support.html#principal-nodal-stress",
        "title": "Deflection of a hinged support > Principal nodal stress",
        "section": "Principal nodal stress",
        "text": "Use the post_processing attribute to get the principal nodal\nstress as an array.\nThis returns the same data as prnsol, except instead of returning\ntext, it returns a numpy array.\nPrincipal nodal stress\npost_processing\nprnsol"
    },
    {
        "objectID": "verif-manual/vm-004-deflection_of_a_hinged_support",
        "href": "verif-manual/vm-004-deflection_of_a_hinged_support.html#check-results",
        "title": "Deflection of a hinged support > Check results",
        "section": "Check results",
        "text": "Now that we have the results we can compare the nodal displacement and\nstress experienced by node 2 to the known quantities 10000 psi and\n-0.12 inches. To do this we:\nFind the mid-node from the coordinates using the Query class\nGet the y-displacement from node 2\nGet the element nearest to node 2\nGet the stress on this element\nCompare\nStop MAPDL.\nTotal running time of the script: (0 minutes 1.548 seconds)\nDownload Jupyter notebook: vm-004-deflection_of_a_hinged_support.ipynb\nDownload Python source code: vm-004-deflection_of_a_hinged_support.py\nDownload zipped: vm-004-deflection_of_a_hinged_support.zip\nGallery generated by Sphinx-Gallery\nCheck results\nQuery\nDownload Jupyter notebook: vm-004-deflection_of_a_hinged_support.ipynb\nDownload Python source code: vm-004-deflection_of_a_hinged_support.py\nDownload zipped: vm-004-deflection_of_a_hinged_support.zip"
    },
    {
        "objectID": "verif-manual/index",
        "href": "verif-manual/index.html#verification-manual",
        "title": "Verification Manual",
        "section": "Verification Manual",
        "text": "This section demonstrates a range of Mechanical APDL elements and capabilities\nin straightforward problems which have “classical” or readily-obtainable\ntheoretical solutions using PyMAPDL.\nThese problems may then serve as the basis for additional validation and\nqualification of Mechanical APDL capabilities for specific applications that\nmay be of interest.\nsphx_glr_verif-manual_vm-001-statically_indeterminate_reaction_force_analysis.py\nsphx_glr_verif-manual_vm-002-beam_stresses_and_deflections.py\nsphx_glr_verif-manual_vm-003-thermally_loaded_support_structure.py\nsphx_glr_verif-manual_vm-004-deflection_of_a_hinged_support.py\nsphx_glr_verif-manual_vm-005-laterally_loaded_tapered_support_structure.py\nsphx_glr_verif-manual_vm-006-pinched_cylinder.py\nsphx_glr_verif-manual_vm-007-plastic_compression_of_a_pipe_assembly.py\nsphx_glr_verif-manual_vm-008-parametric_calculation.py\nsphx_glr_verif-manual_vm-009-large_lateral_deflection_of_unequal_stiffness_springs.py\nsphx_glr_verif-manual_vm-010-bending_of_a_t-shaped_beam.py\nsphx_glr_verif-manual_vm-011-residual-stress-problem.py\nsphx_glr_verif-manual_vm-012-combined-bending-and-torsion.py\nsphx_glr_verif-manual_vm-013.py\nsphx_glr_verif-manual_vm-014.py\nsphx_glr_verif-manual_vm-015.py\nsphx_glr_verif-manual_vm-016.py\nsphx_glr_verif-manual_vm-018.py\nsphx_glr_verif-manual_vm-020.py\nsphx_glr_verif-manual_vm-021.py\nsphx_glr_verif-manual_vm-025.py\nsphx_glr_verif-manual_vm-291.py\nsphx_glr_verif-manual_vm-295.py\nsphx_glr_verif-manual_vm-298.py\nsphx_glr_verif-manual_vm-299.py\nsphx_glr_verif-manual_vm-nr1677-01-1a.py\nGallery generated by Sphinx-Gallery\nVerification Manual"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#bending-of-a-circular-plate-using-axisymmetric-shell-elements",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements",
        "section": "Bending of a Circular Plate Using Axisymmetric Shell Elements",
        "text": "A flat circular plate of radius r and thickness t is subject to\nvarious edge constraints and surface loadings. Determine the\ndeflection \\delta at the middle and the maximum stress \\sigma_{max}\nfor each case.\nCase 1: Uniform loading P, clamped edge.\nCase 2: Concentrated center loading F, clamped edge.\nCase 3: Uniform loading \\frac{P}{4}, simply supported edge.\nS. Timoshenko, Strength of Materials, Part II, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1956,\npg. 96,97, and 103.\nStatic Analysis ANTYPE=0\n2-Node Finite Strain Axisymmetric Shell (SHELL208)\nE = 30 \\cdot 10^6 psi\n\\mu = 0.3\nr = 40.0 in\nt = 1.0 in\nP = 6.0 psi\nF = 7,539.82 lb\nThe stiffness matrix formed in the first load step is automatically reused\nin the second load step. A new stiffness matrix is automatically formed in\nthe third load step because of changed boundary constraints. The mesh density\nis biased near the centerline and outer edge to recover stress values near\nthose points.\nBending of a Circular Plate Using Axisymmetric Shell Elements\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#define-element-type-and-section-properties",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Define element type and section properties",
        "section": "Define element type and section properties",
        "text": "Use 2-Node Axisymmetric Shell (SHELL208) and include extra internal node,\nvia Keyopt(3)=2.\nDefine element type and section properties"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#define-material",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’s ratio of 0.3 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#define-geometry",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#solve",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system for three load steps.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#define-boundary-conditions-and-loadings",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Define boundary conditions and loadings",
        "section": "Define boundary conditions and loadings",
        "text": "Fix all degrees of freedom (dof) at node 11 and fix UX & ROTZ dofs at node 1.\nSolve for three load case scenarios as defined.\nCase 1: Apply uniform pressure loading, P = 6 psi near clamped edge.\nCase 2: Concentrated center loading F = 7,539.82 lb, clamped edge.\nCase 3: Uniform loading P/4, simply supported edge.\nThen exit prep7 processor.\nDefine boundary conditions and loadings"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#post-processing",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflection and stress components.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#inline-functions-in-pymapdl-to-query-node",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Inline functions in PyMAPDL to query node",
        "section": "Inline functions in PyMAPDL to query node",
        "text": "Inline functions in PyMAPDL to query node"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#retrieve-nodal-deflection-and-elemental-stresses-for-each-load-cases",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Retrieve nodal deflection and elemental stresses for each load cases",
        "section": "Retrieve nodal deflection and elemental stresses for each load cases",
        "text": "Retrieve nodal deflection and elemental stresses for each load cases"
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#verify-the-results",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#finish-the-post-processing-processor",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-015",
        "href": "verif-manual/vm-015.html#stop-mapdl",
        "title": "Bending of a Circular Plate Using Axisymmetric Shell Elements > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 0.936 seconds)\nDownload Jupyter notebook: vm-015.ipynb\nDownload Python source code: vm-015.py\nDownload zipped: vm-015.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-015.ipynb\nDownload Python source code: vm-015.py\nDownload zipped: vm-015.zip"
    },
    {
        "objectID": "sg_execution_times",
        "href": "sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "01:05.522 total execution time for 25 files from all galleries:\nExample\nTime\nMem (MB)\nsphx_glr_verif-manual_vm-298.py (../../examples/verif-manual/vm-298.py)\n00:22.736\n0.0\nsphx_glr_verif-manual_vm-299.py (../../examples/verif-manual/vm-299.py)\n00:06.382\n0.0\nsphx_glr_verif-manual_vm-006-pinched_cylinder.py (../../examples/verif-manual/vm-006-pinched_cylinder.py)\n00:06.342\n0.0\nsphx_glr_verif-manual_vm-016.py (../../examples/verif-manual/vm-016.py)\n00:02.871\n0.0\nsphx_glr_verif-manual_vm-005-laterally_loaded_tapered_support_structure.py (../../examples/verif-manual/vm-005-laterally_loaded_tapered_support_structure.py)\n00:02.229\n0.0\nsphx_glr_verif-manual_vm-291.py (../../examples/verif-manual/vm-291.py)\n00:01.890\n0.0\nsphx_glr_verif-manual_vm-018.py (../../examples/verif-manual/vm-018.py)\n00:01.814\n0.0\nsphx_glr_verif-manual_vm-002-beam_stresses_and_deflections.py (../../examples/verif-manual/vm-002-beam_stresses_and_deflections.py)\n00:01.777\n0.0\nsphx_glr_verif-manual_vm-295.py (../../examples/verif-manual/vm-295.py)\n00:01.639\n0.0\nsphx_glr_verif-manual_vm-012-combined-bending-and-torsion.py (../../examples/verif-manual/vm-012-combined-bending-and-torsion.py)\n00:01.626\n0.0\nsphx_glr_verif-manual_vm-004-deflection_of_a_hinged_support.py (../../examples/verif-manual/vm-004-deflection_of_a_hinged_support.py)\n00:01.548\n0.0\nsphx_glr_verif-manual_vm-003-thermally_loaded_support_structure.py (../../examples/verif-manual/vm-003-thermally_loaded_support_structure.py)\n00:01.531\n0.0\nsphx_glr_verif-manual_vm-007-plastic_compression_of_a_pipe_assembly.py (../../examples/verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.py)\n00:01.506\n0.0\nsphx_glr_verif-manual_vm-nr1677-01-1a.py (../../examples/verif-manual/vm-nr1677-01-1a.py)\n00:01.467\n0.0\nsphx_glr_verif-manual_vm-008-parametric_calculation.py (../../examples/verif-manual/vm-008-parametric_calculation.py)\n00:01.234\n0.0\nsphx_glr_verif-manual_vm-025.py (../../examples/verif-manual/vm-025.py)\n00:01.072\n0.0\nsphx_glr_verif-manual_vm-021.py (../../examples/verif-manual/vm-021.py)\n00:01.049\n0.0\nsphx_glr_verif-manual_vm-011-residual-stress-problem.py (../../examples/verif-manual/vm-011-residual-stress-problem.py)\n00:01.006\n0.0\nsphx_glr_verif-manual_vm-001-statically_indeterminate_reaction_force_analysis.py (../../examples/verif-manual/vm-001-statically_indeterminate_reaction_force_analysis.py)\n00:01.006\n0.0\nsphx_glr_verif-manual_vm-015.py (../../examples/verif-manual/vm-015.py)\n00:00.936\n0.0\nsphx_glr_verif-manual_vm-010-bending_of_a_t-shaped_beam.py (../../examples/verif-manual/vm-010-bending_of_a_t-shaped_beam.py)\n00:00.899\n0.0\nsphx_glr_verif-manual_vm-014.py (../../examples/verif-manual/vm-014.py)\n00:00.880\n0.0\nsphx_glr_verif-manual_vm-020.py (../../examples/verif-manual/vm-020.py)\n00:00.867\n0.0\nsphx_glr_verif-manual_vm-013.py (../../examples/verif-manual/vm-013.py)\n00:00.799\n0.0\nsphx_glr_verif-manual_vm-009-large_lateral_deflection_of_unequal_stiffness_springs.py (../../examples/verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.py)\n00:00.415\n0.0\nComputation times\n../../examples/verif-manual/vm-298.py\n../../examples/verif-manual/vm-299.py\n../../examples/verif-manual/vm-006-pinched_cylinder.py\n../../examples/verif-manual/vm-016.py\n../../examples/verif-manual/vm-005-laterally_loaded_tapered_support_structure.py\n../../examples/verif-manual/vm-291.py\n../../examples/verif-manual/vm-018.py\n../../examples/verif-manual/vm-002-beam_stresses_and_deflections.py\n../../examples/verif-manual/vm-295.py\n../../examples/verif-manual/vm-012-combined-bending-and-torsion.py\n../../examples/verif-manual/vm-004-deflection_of_a_hinged_support.py\n../../examples/verif-manual/vm-003-thermally_loaded_support_structure.py\n../../examples/verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.py\n../../examples/verif-manual/vm-nr1677-01-1a.py\n../../examples/verif-manual/vm-008-parametric_calculation.py\n../../examples/verif-manual/vm-025.py\n../../examples/verif-manual/vm-021.py\n../../examples/verif-manual/vm-011-residual-stress-problem.py\n../../examples/verif-manual/vm-001-statically_indeterminate_reaction_force_analysis.py\n../../examples/verif-manual/vm-015.py\n../../examples/verif-manual/vm-010-bending_of_a_t-shaped_beam.py\n../../examples/verif-manual/vm-014.py\n../../examples/verif-manual/vm-020.py\n../../examples/verif-manual/vm-013.py\n../../examples/verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.py"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#cardiovascular-stent-simulation",
        "title": "Cardiovascular Stent Simulation",
        "section": "Cardiovascular Stent Simulation",
        "text": "This example problem shows how to simulate stent-artery interaction during and after stent\nplacement in an occluded artery.\nThe analysis exposes advanced modeling techniques using PyMAPDL such as:\n* Contact\n* Element birth and death\n* Mixed u-P formulation\n* Nonlinear stabilization\nThe following topics are available:\n25.1. Introduction\n25.2. Setting up the model\n25.3. Analysis\n25.4. Solution of the model\n25.5. Results\n25.6. Exit MAPDL\n25.7. Input files\nThis example is inspired from the model and analysis defined in Chapter 25 of the Mechanical\nAPDL Technology Showcase Manual.\nCardiovascular Stent Simulation"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#251-introduction",
        "title": "Cardiovascular Stent Simulation > 25.1. Introduction",
        "section": "25.1. Introduction",
        "text": "25.1. Introduction"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#2511-problem-description",
        "title": "Cardiovascular Stent Simulation > 25.1.1. Problem description",
        "section": "25.1.1. Problem description",
        "text": "A bare metal stent is an effective device for opening atherosclerotic arteries and\nother blockages:\nThe success of stenting depends largely on how the stent and the artery interact\nmechanically. In both the stent-design process and in pre-clinical patient-specific\nevaluations, computer simulation using finite element analysis (FEA) has become an\naccepted tool for studying stent-artery interaction.\nA viable stent-artery finite element model must properly reflect the nonlinear nature\nof the phenomenon, such as the biological tissue properties, large arterial wall\ndeformation, and the sliding contact between the stent and the artery wall.\n25.1.1. Problem description"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#2512-starting-mapdl-as-a-service",
        "title": "Cardiovascular Stent Simulation > 25.1.2. Starting MAPDL as a service",
        "section": "25.1.2. Starting MAPDL as a service",
        "text": "25.1.2. Starting MAPDL as a service"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#252-setting-up-the-model",
        "title": "Cardiovascular Stent Simulation > 25.2. Setting up the model",
        "section": "25.2. Setting up the model",
        "text": "First, we define the material properties.\nThen, we can define the elements.\nWe define the 5-parameter Mooney-Rivlin hyperelastic artery material\nmodel.\nWe define the linear elastic material model for stiff calcified plaque.\nWe define the Solid185 element type to mesh both the artery and plaque.\nWe define the settings to model the stent, the artery and the plaque.\nWe use force-distributed boundary constraints on 2 sides of artery wall to allow\nfor radial expansion of tissue without rigid body motion.\nSettings for MPC Surface-based, force-distributed contact on proximal plane\nparallel to x-y plane\nSettings for standard contact between stent and inner plaque wall contact\nsurface\nSettings for MPC based, force-distributed constraint on proximal stent nodes\nSettings for MPC based, force-distributed constraint on distal stent\nnodes.\nOnce all the setups are ready, we read the geometry file.\n25.2. Setting up the model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#253-analysis",
        "title": "Cardiovascular Stent Simulation > 25.3. Analysis",
        "section": "25.3. Analysis",
        "text": "25.3. Analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#2531-static-analysis",
        "title": "Cardiovascular Stent Simulation > 25.3.1. Static Analysis",
        "section": "25.3.1. Static Analysis",
        "text": "We, then, apply the static analysis.\n25.3.1. Static Analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#2532-loads",
        "title": "Cardiovascular Stent Simulation > 25.3.2. Loads",
        "section": "25.3.2. Loads",
        "text": "We apply the Load Step 1:\nBalloon angioplasty of the artery to expand it past the\nradius of the stent - IGNORE STENT\nWe then apply the Load Step 2: Reactivate contact between stent and plaque.\nWe apply the Load Step 3.\nWe apply the Load Step 4: Apply blood pressure (13.3 kPa) load to\ninner wall of plaque and allow the stent to act as a scaffold.\nFinally, we apply stabilization with energy option.\n25.3.2. Loads"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#254-solution-of-the-model",
        "title": "Cardiovascular Stent Simulation > 25.4. Solution of the model",
        "section": "25.4. Solution of the model",
        "text": "25.4. Solution of the model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#255-results",
        "title": "Cardiovascular Stent Simulation > 25.5. Results",
        "section": "25.5. Results",
        "text": "This section illustrates the use of PyDPF-Core to post-process the results.\n25.5. Results"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#2551-mesh-of-the-model",
        "title": "Cardiovascular Stent Simulation > 25.5.1. Mesh of the model",
        "section": "25.5.1. Mesh of the model",
        "text": "25.5.1. Mesh of the model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#2552-computed-displacements-of-the-model",
        "title": "Cardiovascular Stent Simulation > 25.5.2. Computed displacements of the model",
        "section": "25.5.2. Computed displacements of the model",
        "text": "25.5.2. Computed displacements of the model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#2553-von-mises-stress",
        "title": "Cardiovascular Stent Simulation > 25.5.3. Von Mises stress",
        "section": "25.5.3. Von Mises stress",
        "text": "25.5.3. Von Mises stress"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#2554-computed-displacements-of-the-stent",
        "title": "Cardiovascular Stent Simulation > 25.5.4. Computed displacements of the stent",
        "section": "25.5.4. Computed displacements of the stent",
        "text": "25.5.4. Computed displacements of the stent"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#256-exit-mapdl",
        "title": "Cardiovascular Stent Simulation > 25.6. Exit MAPDL",
        "section": "25.6. Exit MAPDL",
        "text": "25.6. Exit MAPDL"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-25/ex_25-tecstent",
        "href": "technology_showcase_examples/techdemo-25/ex_25-tecstent.html#257-input-files",
        "title": "Cardiovascular Stent Simulation > 25.7. Input files",
        "section": "25.7. Input files",
        "text": "The following files were used in this problem:\nstent.dat – Input file for the cardiovascular stent\nproblem.\nstent.cdb – The common database file containing the model\ninformation for this problem (called by stent.dat).\nDownload the zipped td-25 file set for this problem\nFor more information, see Obtaining the input files.\nGallery generated by Sphinx-Gallery\n25.7. Input files"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#stresses-in-a-long-cylinder",
        "title": "Stresses in a Long Cylinder",
        "section": "Stresses in a Long Cylinder",
        "text": "A long thick-walled cylinder is initially subjected to an internal pressure p.\nDetermine the radial displacement \\delta_r at the inner surface, the\nradial stress \\sigma_r , and tangential stress \\sigma_t , at the\ninner and outer surfaces and at the middle wall thickness. Internal pressure is then\nremoved and the cylinder is subjected to a rotation ω about its center line. Determine\nthe radial \\sigma_r and tangential \\sigma_t stresses at the inner wall\nand at an interior point located at r = Xi.\nS. Timoshenko, Strength of Materials, Part II, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1956,\npg. 213, problem 1 and pg. 213, article 42.\nStatic Analysis ANTYPE=0\n2-D 8-Node Structural Solid Elements (PLANE183)\nE = 30 \\cdot 10^6 psi\n\\mu = 0.3\n\\rho = 0.00073 lb-sec^2/in^4\na = 4 inches\nb = 8 inches\nX_i = 5.43 inches\np = 30,000 psi\n\\Omega = 1000 rad/sec\nThe axial length is arbitrarily selected. Elements are oriented such that surface stresses\nmay be obtained at the inner and outer cylinder surfaces.\nPOST1 is used to display linearized stresses through the thickness of the cylinder when it is\nsubjected to an internal pressure.\nStresses in a Long Cylinder\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#define-element-type-and-properties",
        "title": "Stresses in a Long Cylinder > Define element type and properties",
        "section": "Define element type and properties",
        "text": "Use 2-D 8-Node or 6-Node Structural Solid and specify Axisymmetric element behavior\nvia setting Keyopt(3)=1.\nDefine element type and properties"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#define-material",
        "title": "Stresses in a Long Cylinder > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6,\nDensity, rho = 0.00073 and Poisson’s ratio NUXY of 0.3 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#define-geometry",
        "title": "Stresses in a Long Cylinder > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#define-coupling-and-boundary-conditions",
        "title": "Stresses in a Long Cylinder > Define coupling and boundary conditions",
        "section": "Define coupling and boundary conditions",
        "text": "Apply a displacement boundary condition in the vertical direction (UY) to all nodes.\nCouple the axial displacements at the unconstrained Y-dir. Apply internal pressure of\n30000 psi is applied on nodes. Also, apply dummy pressure for surface printout.\nThen exit prep7 processor.\nDefine coupling and boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#solve",
        "title": "Stresses in a Long Cylinder > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#post-processing",
        "title": "Stresses in a Long Cylinder > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute displacement and stress components.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#inline-functions-in-pymapdl-to-query-node",
        "title": "Stresses in a Long Cylinder > Inline functions in PyMAPDL to query node",
        "section": "Inline functions in PyMAPDL to query node",
        "text": "Inline functions in PyMAPDL to query node"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#retrieve-nodal-deflection-and-section-stresses",
        "title": "Stresses in a Long Cylinder > Retrieve nodal deflection and section stresses",
        "section": "Retrieve nodal deflection and section stresses",
        "text": "Retrieve nodal deflection and section stresses"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#verify-the-results",
        "title": "Stresses in a Long Cylinder > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#finish-the-post-processing-processor",
        "title": "Stresses in a Long Cylinder > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#set-a-new-title-for-the-analysis",
        "title": "Stresses in a Long Cylinder > Set a new title for the analysis",
        "section": "Set a new title for the analysis",
        "text": "Set a new title for the analysis"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#solve",
        "title": "Stresses in a Long Cylinder > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#define-boundary-conditions",
        "title": "Stresses in a Long Cylinder > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Apply a displacement boundary condition in the vertical direction (UY) to all nodes.\nRotate the cylinder with an angular velocity of 1000 rad/sec. Also, apply dummy\npressure for surface printout. Then exit solution processor.\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#post-processing",
        "title": "Stresses in a Long Cylinder > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute displacement and stress components.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#inline-functions-in-pymapdl-to-query-node",
        "title": "Stresses in a Long Cylinder > Inline functions in PyMAPDL to query node",
        "section": "Inline functions in PyMAPDL to query node",
        "text": "Inline functions in PyMAPDL to query node"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#retrieve-nodal-deflection-and-section-stresses",
        "title": "Stresses in a Long Cylinder > Retrieve nodal deflection and section stresses",
        "section": "Retrieve nodal deflection and section stresses",
        "text": "Retrieve nodal deflection and section stresses"
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#verify-the-results",
        "title": "Stresses in a Long Cylinder > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#finish-the-post-processing-processor",
        "title": "Stresses in a Long Cylinder > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-025",
        "href": "verif-manual/vm-025.html#stop-mapdl",
        "title": "Stresses in a Long Cylinder > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 1.072 seconds)\nDownload Jupyter notebook: vm-025.ipynb\nDownload Python source code: vm-025.py\nDownload zipped: vm-025.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-025.ipynb\nDownload Python source code: vm-025.py\nDownload zipped: vm-025.zip"
    },
    {
        "objectID": "technology_showcase_examples/index",
        "href": "technology_showcase_examples/index.html#technology-showcases",
        "title": "Technology Showcases",
        "section": "Technology Showcases",
        "text": "The following examples initially come from the APDL Technology Showcase Manual.\nThey initially were MAPDL files.\nThey have been reproduced in Python files using PyMAPDL with the ansys-mapdl-core library.\nsphx_glr_ex_01-tecbrakesqueal.py\nsphx_glr_ex_15-tecHyperConstlModel.py\nsphx_glr_ex_20-tecPCB.rst\nsphx_glr_ex_21-tecbuckling.rst\nsphx_glr_ex_25-tecstent.rst\nsphx_glr_ex_28-tecfricstir.py\nsphx_glr_ex_62-techinverse.rst\nGallery generated by Sphinx-Gallery\nTechnology Showcases\nansys-mapdl-core"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#plastic-compression-of-a-pipe-assembly",
        "title": "Plastic compression of a pipe assembly",
        "section": "Plastic compression of a pipe assembly",
        "text": "Two coaxial tubes, the inner one of 1020 CR steel and cross-sectional\narea A_{\\mathrm{s}}, and the outer one of 2024-T4 aluminum alloy\nand of area A_{\\mathrm{a}}, are compressed between heavy, flat end plates,\nas shown below. Determine the load-deflection curve of the assembly\nas it is compressed into the plastic region by an axial displacement.\nAssume that the end plates are so stiff that both tubes are shortened by\nexactly the same amount.\nS. H. Crandall, N. C. Dahl, An Introduction to the Mechanics of Solids,\nMcGraw-Hill Book Co., Inc., New York, NY, 1959, pg. 180, ex. 5.1.\nStatic, Plastic Analysis (ANTYPE=0)\nPlastic Straight Pipe Element (PIPE288)\n4-Node Finite Strain Shell (SHELL181)\n3-D Structural Solid Elements (SOLID185)\nE_{\\mathrm{s}} = 26875000\\,psi\n\\sigma_{\\mathrm{(yp)s}} = 86000\\,psi\nE_{\\mathrm{a}} = 11000000\\,psi\n\\sigma_{\\mathrm{(yp)a}} = 55000\\,psi\n\\nu = 0.3\nl = 10\\,in\nA_{\\mathrm{s}} = 7\\,in^2\nA_{\\mathrm{a}} = 12\\,in^2\n1st Load Step: \\delta = 0.032\\,in\n2nd Load Step: \\delta = 0.050\\,in\n3rd Load Step: \\delta = 0.100\\,in\nThe following tube dimensions, which provide the desired cross-sectional\nareas, are arbitrarily chosen:\nInner (steel) tube: inside radius = 1.9781692 in., wall thickness = 0.5 in.\nOuter (aluminum) tube: inside radius = 3.5697185 in., wall thickness = 0.5 in.\nThe problem can be solved in three ways:\nusing PIPE288 - the plastic straight pipe element\nusing SOLID185 - the 3-D structural solid element\nusing SHELL181 - the 4-Node Finite Strain Shell\nIn the SOLID185 and SHELL181 cases, since the problem is axisymmetric,\nonly a one element \\theta -sector is modeled. A small angle \\theta = 6°\nis arbitrarily chosen to reasonably approximate the circular boundary\nwith straight sided elements.\nThe nodes at the boundaries have the UX (radial) degree of freedom coupled.\nIn the SHELL181 model, the nodes at the boundaries additionally have\nthe ROTY degree of freedom coupled.\nPlastic compression of a pipe assembly\nANTYPE=0\nPIPE288\nSOLID185\nSHELL181\nUX\nROTY"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#start-mapdl",
        "title": "Plastic compression of a pipe assembly > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL and import Numpy and Pandas libraries.\nStart MAPDL"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#pre-processing",
        "title": "Plastic compression of a pipe assembly > Pre-processing",
        "section": "Pre-processing",
        "text": "Enter verification example mode and the pre-processing routine.\nPre-processing"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#parameterization",
        "title": "Plastic compression of a pipe assembly > Parameterization",
        "section": "Parameterization",
        "text": "Parameterization"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#define-element-type",
        "title": "Plastic compression of a pipe assembly > Define element type",
        "section": "Define element type",
        "text": "Set up the element types .\nDefine element type"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#define-material",
        "title": "Plastic compression of a pipe assembly > Define material",
        "section": "Define material",
        "text": "Set up the material properties.\nYoung modulus of steel is: E_{\\mathrm{s}} = 26875000\\,psi,\nYield strength of steel is: \\sigma_{\\mathrm{(yp)s}} = 86000\\, psi,\nYoung modulus of aluminum is: E_{\\mathrm{a}} = 11000000\\,psi,\nYield strength of aluminum is: \\sigma_{\\mathrm{(yp)a}} = 55000\\,psi,\nPoisson’s ratio is: \\nu = 0.3\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#plot-stress---strain-curve",
        "title": "Plastic compression of a pipe assembly > Plot stress - strain curve",
        "section": "Plot stress - strain curve",
        "text": "Use Matplotlib library to plot material model curves of steel and aluminum.\nPlot stress - strain curve"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#define-section",
        "title": "Plastic compression of a pipe assembly > Define section",
        "section": "Define section",
        "text": "Set up the cross-section properties for a shell and pipe elements.\nDefine section"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#define-geometry",
        "title": "Plastic compression of a pipe assembly > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and create the elements through the nodes.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#define-boundary-conditions",
        "title": "Plastic compression of a pipe assembly > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Application of boundary conditions (BC) for simplified  axisymmetric model.\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#solve",
        "title": "Plastic compression of a pipe assembly > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#post-processing",
        "title": "Plastic compression of a pipe assembly > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#getting-loads",
        "title": "Plastic compression of a pipe assembly > Getting loads",
        "section": "Getting loads",
        "text": "Set up the function to get load values of each load step of the simplified\naxisymmetric model and convert it to the full model.\nGetting loads"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#getting-loads-for-each-load-step",
        "title": "Plastic compression of a pipe assembly > Getting loads for each load step",
        "section": "Getting loads for each load step",
        "text": "Obtain the loads of the model using getload() function.\nGetting loads for each load step\ngetload()"
    },
    {
        "objectID": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly",
        "href": "verif-manual/vm-007-plastic_compression_of_a_pipe_assembly.html#check-results",
        "title": "Plastic compression of a pipe assembly > Check results",
        "section": "Check results",
        "text": "Finally we have the results of the loads for the simplified axisymmetric model,\nwhich can be compared with expected target values for models with PIPE288,\nSOLID185, and SHELL181 elements. Loads expected for each load step are:\n1st load step with deflection \\delta = 0.032 (in) has load_1 = 1024400\\,(lb).\n2nd load step with deflection \\delta = 0.05 (in) has load_2 = 1262000\\,(lb).\n3rd load step with deflection \\delta = 0.1 (in) has load_3 = 1262000\\,(lb).\nStop MAPDL.\nTotal running time of the script: (0 minutes 1.506 seconds)\nDownload Jupyter notebook: vm-007-plastic_compression_of_a_pipe_assembly.ipynb\nDownload Python source code: vm-007-plastic_compression_of_a_pipe_assembly.py\nDownload zipped: vm-007-plastic_compression_of_a_pipe_assembly.zip\nGallery generated by Sphinx-Gallery\nCheck results\nPIPE288\nSOLID185\nSHELL181\nDownload Jupyter notebook: vm-007-plastic_compression_of_a_pipe_assembly.ipynb\nDownload Python source code: vm-007-plastic_compression_of_a_pipe_assembly.py\nDownload zipped: vm-007-plastic_compression_of_a_pipe_assembly.zip"
    },
    {
        "objectID": "contributing/write_examples",
        "href": "contributing/write_examples.html#how-to-write-a-good-example",
        "title": "How to write a good example?",
        "section": "How to write a good example?",
        "text": "Here are some tips for writing a good example.\nHow to write a good example?"
    },
    {
        "objectID": "contributing/write_examples",
        "href": "contributing/write_examples.html#use-mapdlconvert_script",
        "title": "How to write a good example? > Use mapdl.convert_script",
        "section": "Use mapdl.convert_script",
        "text": "If you want to translate a MAPDL script into a PyMAPDL one, you can first\nrun these commands:\nThe mapdl.convert_script method is still in the beta state. You should check its output.\nThere may be easier ways to write some commands.\nFor example, use mapdl.eplot() rather than mapdl.run(\"EPLOT\").\nUse mapdl.convert_script\nmapdl.convert_script\nmapdl.convert_script\nmapdl.eplot()\nmapdl.run(\"EPLOT\")"
    },
    {
        "objectID": "contributing/write_examples",
        "href": "contributing/write_examples.html#use-python-packages-as-much-as-possible",
        "title": "How to write a good example? > Use Python packages as much as possible",
        "section": "Use Python packages as much as possible",
        "text": "The aim of PyMAPDL is to make it possible to create workflows that combine\nMAPDL and the Python environment.\nSome MAPDL workflows can be very efficient, but mixing them with Python packages\ncan simplify the code and allow you to generate more visually effective plots.\nDo not hesitate to explore the Python Package Index\nto discover new Python packages.\nUse Python packages as much as possible"
    },
    {
        "objectID": "contributing/write_examples",
        "href": "contributing/write_examples.html#graphics-and-plots",
        "title": "How to write a good example? > Graphics and plots",
        "section": "Graphics and plots",
        "text": "The more visual your example is, the better.\nPython facilitates the creation of sophisticate graphics and plots: take advantage\nof that.\nPackages like Matplotlib, Pandas\nor PyVista can help you create nice graphics, tables, or plots .\nGraphics and plots"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#large-lateral-deflection-of-unequal-stiffness-springs",
        "title": "Large lateral deflection of unequal stiffness springs",
        "section": "Large lateral deflection of unequal stiffness springs",
        "text": "A two-spring system is subjected to a force F as shown below.\nDetermine the strain energy of the system and\nthe displacements \\delta_x and \\delta_y.\nG. N. Vanderplaats, Numerical Optimization Techniques for Engineering\nDesign with Applications, McGraw-Hill Book Co., Inc., New York,\nNY,1984, pp. 72-73, ex. 3-1.\nNonlinear Transient Dynamic Analysis (ANTYPE = 4)\nSpring-damper elements (COMBIN14)\nSpring-damper elements (COMBIN40)\nk_1 = 8\\,N/cm\nk_2 = 1\\,N/cm\nm = 1\nl = 10\\,cm\nF = 5{\\sqrt[2]{2}}\\,N\n\\alpha = 45\\,º\nThe solution to this problem is best obtained by adding mass and using\nthe “slow dynamics” technique with approximately critical damping.\nCombination elements COMBIN40 are used to provide damping\nin the X and Y directions. Approximate damping coefficients\nc_x and c_y, in the X and Y directions respectively,\nare determined from:\nc_x = \\sqrt[2]{k_xm}\nc_y = \\sqrt[2]{k_ym}\nwhere m is arbitrarily assumed to be unity.\nk_x and k_y cannot be known before solving so are approximated\nby k_y = k_2 = 1\\,N/cm and k_x = k_y/2 = 0.5\\,N/cm,\nhence c_x = 1.41 and c_y = 2.0. Large deflection analysis is\nperformed due to the fact that the resistance to the load is a function of\nthe deformed position. POST1 is used to extract results from\nthe solution phase.\nLarge lateral deflection of unequal stiffness springs\nANTYPE = 4\nCOMBIN40\nPOST1"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#start-mapdl",
        "title": "Large lateral deflection of unequal stiffness springs > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL and import Numpy and Pandas libraries.\nStart MAPDL"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#pre-processing",
        "title": "Large lateral deflection of unequal stiffness springs > Pre-processing",
        "section": "Pre-processing",
        "text": "Enter verification example mode and the pre-processing routine.\nPre-processing"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#parameterization",
        "title": "Large lateral deflection of unequal stiffness springs > Parameterization",
        "section": "Parameterization",
        "text": "Parameterization block includes main variables as :\nl = 10\\,cm - spring length.\nk_1 = 8\\,N/cm - stiffness of the 1st spring.\nk_2 = 1\\,N/cm - stiffness of the 2nd spring.\nm = 1 - mass.\nF = 5\\sqrt[2]{2}\\,N - main load\n\\alpha = 45\\,º - force angle\nc_x = \\sqrt[2]{k_xm} = 1,41 - damping coefficient, x-direction.\nc_y = \\sqrt[2]{k_ym} = 2.0 - damping coefficient, y-direction.\nParameterization"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#define-element-type",
        "title": "Large lateral deflection of unequal stiffness springs > Define element type",
        "section": "Define element type",
        "text": "Set up the element types.\nDefine element type"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#define-real-constants",
        "title": "Large lateral deflection of unequal stiffness springs > Define real constants",
        "section": "Define real constants",
        "text": "Define damping coefficients c_x = 1.41, c_y = 2.0 and\nstiffness values k_1 = 8\\,N/cm, k_2 = 1\\,N/cm for the\nspring elements.\nDefine real constants"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#define-nodes",
        "title": "Large lateral deflection of unequal stiffness springs > Define nodes",
        "section": "Define nodes",
        "text": "Set up the nodes coordinates using python for loop.\nDefine nodes\nfor"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#create-elements",
        "title": "Large lateral deflection of unequal stiffness springs > Create elements",
        "section": "Create elements",
        "text": "Create the elements through the nodes.\nCreate elements"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#define-boundary-conditions",
        "title": "Large lateral deflection of unequal stiffness springs > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Application of boundary conditions (BC) for the spring model.\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#solution-settings",
        "title": "Large lateral deflection of unequal stiffness springs > Solution settings",
        "section": "Solution settings",
        "text": "Enter solution mode and apply settings for Transient Dynamic Analysis.\nSolution settings"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#solve",
        "title": "Large lateral deflection of unequal stiffness springs > Solve",
        "section": "Solve",
        "text": "Solve the system , avoiding the printing output.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#post-processing",
        "title": "Large lateral deflection of unequal stiffness springs > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing, avoiding the printing output.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#getting-displacements",
        "title": "Large lateral deflection of unequal stiffness springs > Getting displacements",
        "section": "Getting displacements",
        "text": "Enter post-processing. To get results of the strain energy and displacements\nin X and Y directions from the node where the force is applied using\nMapdl.get_value.\nGetting displacements\nMapdl.get_value"
    },
    {
        "objectID": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs",
        "href": "verif-manual/vm-009-large_lateral_deflection_of_unequal_stiffness_springs.html#check-results",
        "title": "Large lateral deflection of unequal stiffness springs > Check results",
        "section": "Check results",
        "text": "Finally we have the results of the strain energy and\ndisplacements in X and Y directions, which can be compared with\nexpected target values:\nStrain energy of the system U_{\\mathrm{(energy)}} = 24.01\\;N\\,cm.\nDisplacement in X-direction U_x = 8.631\\,cm.\nDisplacement in Y-direction U_y = 4.533\\,cm.\nFor better representation of the results we can use pandas dataframe\nwith following settings below:\nStop MAPDL.\nTotal running time of the script: (0 minutes 0.415 seconds)\nDownload Jupyter notebook: vm-009-large_lateral_deflection_of_unequal_stiffness_springs.ipynb\nDownload Python source code: vm-009-large_lateral_deflection_of_unequal_stiffness_springs.py\nDownload zipped: vm-009-large_lateral_deflection_of_unequal_stiffness_springs.zip\nGallery generated by Sphinx-Gallery\nCheck results\npandas\nDownload Jupyter notebook: vm-009-large_lateral_deflection_of_unequal_stiffness_springs.ipynb\nDownload Python source code: vm-009-large_lateral_deflection_of_unequal_stiffness_springs.py\nDownload zipped: vm-009-large_lateral_deflection_of_unequal_stiffness_springs.zip"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#buckling-and-post-buckling-analysis-of-a-ring-stiffened-cylinder-using-nonlinear-stabilization",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization",
        "section": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization",
        "text": "This examples shows how to use PyMAPDL to import an existing FE model and\nto perform a7 nonlinear buckling and post-buckling analysis using nonlinear\nstabilization. The problem uses a stiffened cylinder subjected to uniform\nexternal pressure to show how to find the nonlinear buckling loads, achieve\nconvergence at the post-buckling stage, and interpret the results.\nThis example is inspired from the model and analysis defined in Chapter 21\nof the Mechanical APDL Technology Showcase Manual.\nBuckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#setting-up-model",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Setting up model",
        "section": "Setting up model",
        "text": "The original FE model is given in the Ansys Mechanical APDL Technology\nShowcase Manual. The .cdb contains a FE model of a ring-stiffened cylinder.\nA circular cylinder made of bare 2024-T3 aluminum alloy is stiffened inside\nwith five Z-section rings. Its ends are closed with thick aluminum bulkheads.\nA riveted L section exists between the top plate and the top ring and the\nbottom plate and bottom ring.\nThe cylinder is subjected to a differential external pressure. The pressure\ncauses a local buckling phenomenon characterized by buckling of the skin\nbetween stiffening rings, leading eventually to collapse.\nThe finite element model of the ring stiffened cylinder is meshed with\nSHELL281 elements with an element size of 10 mm. The fine mesh is required\nfor buckling analysis, and a full 360-degree model is necessary because\nthe deformation is no longer axisymmetric after buckling occurs.\nAll shell elements have uniform thickness. Five sections are created in the\nmodel with no offsets, so the shell sections are offset to the midplane\nby default.\nSetting up model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#starting-mapdl-as-a-service-and-importing-an-external-model",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Starting MAPDL as a service and importing an external model",
        "section": "Starting MAPDL as a service and importing an external model",
        "text": "Starting MAPDL as a service and importing an external model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#define-static-prestress-analysis",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Define static prestress analysis",
        "section": "Define static prestress analysis",
        "text": "Displacement boundary conditions are defined to prevent the six rigid body\nmotions. A total of six displacements are therefore applied to three nodes\nlocated on the top plate at 0, 90, and 270 degrees; the nodes are restricted\nso that all rigid translations and rotations are not possible for the\ncylinder.\nLoading consists of a uniformly distributed external differential\npressure: P_{ext} = 0.24 MPa\nDefine static prestress analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#run-linear-buckling-analysis",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Run linear buckling analysis",
        "section": "Run linear buckling analysis",
        "text": "This preliminary analysis predicts the theoretical buckling pressure of the\nideal linear elastic structure (perfect cylinder) and the buckled mode shapes\nused in the next step to generate the imperfections.\nIt is also an efficient way to check the completeness and\ncorrectness of modeling.\nTo run the linear buckling analysis, a static solution with prestress effects\nmust be obtained, followed by the eigenvalue buckling solution using the\nBlock Lanczos method and mode expansion.\nRun linear buckling analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#generate-imperfections",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Generate imperfections",
        "section": "Generate imperfections",
        "text": "If a structure is perfectly symmetric, nonsymmetric buckling does not occur\nnumerically, and a nonlinear buckling analysis fails because\nnonsymmetric buckling responses cannot be triggered. In this problem,\nthe geometry, elements, and pressure are all axisymmetric.\nIt is not possible, therefore, to simulate nonaxisymmetric buckling with\nthe initial model. To overcome this problem, small geometric imperfections\n(similar to those caused by manufacturing a real structure) must be\nintroduced to trigger the buckling responses.\nBecause the radius of the cylinder is 355.69 mm and the maximum\ndisplacement of a mode shape is 1 mm, a factor of 0.1 is applied when\nupdating the geometry with mode shapes. The factor assumes the manufacturing\ntolerance of the radius to be on the order of 0.1.\nGenerate imperfections"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#run-nonlinear-static-analysis-on-geometry-with-imperfections",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Run nonlinear static analysis on geometry with imperfections",
        "section": "Run nonlinear static analysis on geometry with imperfections",
        "text": "The nonlinear buckling analysis is a static analysis performed after adding\nimperfections with large deflection active (NLGEOM,ON), extended to a point\nwhere the stiffened cylinder can reach its limit load.\nTo perform the analysis, the load must be allowed to increase using very\nsmall time increments so that the expected critical buckling load can\nbe predicted accurately.\nNote - as this is a buckling analysis, divergence is expected.\nRun nonlinear static analysis on geometry with imperfections"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#post-buckling-analysis",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Post-buckling analysis",
        "section": "Post-buckling analysis",
        "text": "An unconverged solution of the nonlinear static analysis could mean that\nbuckling has occurred. In this example, the change in time (or load)\nincrement, and displacement value, occurs between substeps 10 and 11,\nwhich corresponds to TIME = 0.51781 and TIME = 0.53806 and to a pressure\nbetween 0.124 MPa and 0.129 MPa. It is therefore very likely that buckling\noccurred at this time; to be sure, the analysis is continued. The goal is to\nverify the assessment made at this stage by obtaining the load-displacement\nbehavior over a larger range. Because the post-buckling state is unstable,\nspecial techniques are necessary to compensate - in this case, nonlinear\nstabilization is used.\nPost-buckling analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#postprocess-buckling-analysis-in-post1",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Postprocess buckling analysis in POST1",
        "section": "Postprocess buckling analysis in POST1",
        "text": "Postprocess buckling analysis in POST1"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#postprocess-buckling-analysis-in-post26",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Postprocess buckling analysis in POST26",
        "section": "Postprocess buckling analysis in POST26",
        "text": "Postprocess buckling analysis in POST26"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling",
        "href": "technology_showcase_examples/techdemo-21/ex_21-tecbuckling.html#exit-mapdl",
        "title": "Buckling and post-buckling analysis of a ring-stiffened cylinder using nonlinear stabilization > Exit MAPDL",
        "section": "Exit MAPDL",
        "text": "Exit MAPDL instance.\nExit MAPDL"
    },
    {
        "objectID": "verif-manual/vm-003-thermally_loaded_support_structure",
        "href": "verif-manual/vm-003-thermally_loaded_support_structure.html#thermally-loaded-support-structure",
        "title": "Thermally loaded support structure",
        "section": "Thermally loaded support structure",
        "text": "Find the stresses in the copper and steel wire structure shown below.\nThe wires have a cross-sectional area of math:A. The structure is\nsubjected to a load math:Q and a temperature rise of math:Delta T after\nassembly.\nS. Timoshenko, Strength of Materials, Part I, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1955,\npg. 30, problem 9.\nStatic Analysis ANTYPE=0\n3-D Spar (or Truss) Elements (LINK180)\nE_c = 16 \\cdot 10^6 psi\nE_s = 30 \\cdot 10^6 psi\n\\alpha_c = 70 \\cdot 10^{-7} in/in-^\\circ F\n\\alpha_s = 92 \\cdot 10^{-7} in/in-^\\circ F\nA = 0.1 in^2\nQ = 4000 lb\n\\Delta T = 10 ^\\circ F\nThe compressive force X is given by the following equation\nX = \\frac{\\Delta T (\\alpha_c - \\alpha_s) (A_s - E_s) }{1 + \\frac{1 E_s A_s}{2 E_c A_c}} + \\frac{Q}{1 + \\frac{2 E_c A_c}{E_s A_s}}\nLength of wires (20 in.), spacing between wires (10 in.), and the reference\ntemperature (70°F) are arbitrarily selected. The rigid lower beam is modeled\nby nodal coupling.\nThermally loaded support structure\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-003-thermally_loaded_support_structure",
        "href": "verif-manual/vm-003-thermally_loaded_support_structure.html#define-material",
        "title": "Thermally loaded support structure > Define material",
        "section": "Define material",
        "text": "Set up the materials and their properties. We are using copper and\nsteel here.\n- EX - X-direction elastic modulus\n- ALPX - Secant x - coefficient of thermal expansion\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-003-thermally_loaded_support_structure",
        "href": "verif-manual/vm-003-thermally_loaded_support_structure.html#define-geometry-nodes",
        "title": "Thermally loaded support structure > Define geometry: nodes",
        "section": "Define geometry: nodes",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup. We create a square of nodes and use fill to add\nmid-point nodes to two opposite sides.\nDefine geometry: nodes"
    },
    {
        "objectID": "verif-manual/vm-003-thermally_loaded_support_structure",
        "href": "verif-manual/vm-003-thermally_loaded_support_structure.html#define-geometry-elements",
        "title": "Thermally loaded support structure > Define geometry: elements",
        "section": "Define geometry: elements",
        "text": "Create two elements (using material #1) that are two sides of our\nsquare, as links. Then create a single element using material #2\nbetween the first 2 that is parallel to them.\nDefine geometry: elements"
    },
    {
        "objectID": "verif-manual/vm-003-thermally_loaded_support_structure",
        "href": "verif-manual/vm-003-thermally_loaded_support_structure.html#define-boundary-conditions",
        "title": "Thermally loaded support structure > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Couple the degrees of freedom in y-displacement across nodes 5, 4,\nand 6.\nFix nodes 1, 2, and 3 in place.\nApply a force of -4000 in the y-direction to node 5\nApply a uniform temperature of 80 to the whole body\nFinally, exit the post-processor.\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-003-thermally_loaded_support_structure",
        "href": "verif-manual/vm-003-thermally_loaded_support_structure.html#solve",
        "title": "Thermally loaded support structure > Solve",
        "section": "Solve",
        "text": "Enter solution mode\nSpecify a timestep of 1 to be used for this load step\nSolve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-003-thermally_loaded_support_structure",
        "href": "verif-manual/vm-003-thermally_loaded_support_structure.html#post-processing",
        "title": "Thermally loaded support structure > Post-processing",
        "section": "Post-processing",
        "text": "Access the queries functions\nFind a steel node and a copper node\nThen use these to get the steel and copper elements\nFinally extract the stress experienced by each element\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-003-thermally_loaded_support_structure",
        "href": "verif-manual/vm-003-thermally_loaded_support_structure.html#check-results",
        "title": "Thermally loaded support structure > Check results",
        "section": "Check results",
        "text": "Now that we have the response we can compare the values to the\nexpected stresses of 19695 and 10152 respectively.\nStop MAPDL.\nTotal running time of the script: (0 minutes 1.531 seconds)\nDownload Jupyter notebook: vm-003-thermally_loaded_support_structure.ipynb\nDownload Python source code: vm-003-thermally_loaded_support_structure.py\nDownload zipped: vm-003-thermally_loaded_support_structure.zip\nGallery generated by Sphinx-Gallery\nCheck results\nDownload Jupyter notebook: vm-003-thermally_loaded_support_structure.ipynb\nDownload Python source code: vm-003-thermally_loaded_support_structure.py\nDownload zipped: vm-003-thermally_loaded_support_structure.zip"
    },
    {
        "objectID": "verif-manual/vm-298",
        "href": "verif-manual/vm-298.html#psd-analysis-of-40-story-building-under-wind-load-excitation",
        "title": "PSD Analysis of 40-Story Building Under Wind Load Excitation",
        "section": "PSD Analysis of 40-Story Building Under Wind Load Excitation",
        "text": "A 40-story building is modeled using spring-damper (COMBIN14) and point mass elements\n(MASS21). The stiffness represents the linear elastic massless column and the mass of\neach floor is concentrated at the floor level, as shown in Figure: Finite Element\nRepresentation of 40-Story Building Using Spring-Mass Damper System.\nThe wind load excitation is applied at discrete floor levels along the wind motion.\nBecause natural strong winds are turbulent in nature with randomly fluctuating wind\nvelocities, a probabilistic approach like Power Spectral Density (PSD) analysis is\nthe most suitable approach to analyze such structures. This analysis is performed to\ncalculate the response PSD of the 40th floor.\nYang, J.N., Lin, Y.K., “Along-Wind Motion of Multistorey Building”,\nASCE Publications, April 1981.\nModal Analysis ANTYPE=2\nPSD Analysis ANTYPE=8\nSpring-Damper Element (COMBIN14)\nStructural Point Mass Element (MASS21)\nFloor mass, m = 1.29 \\times 10^6 kg\nColumn stiffness, K = 1 \\cdot 10^9 N/m\nDamping coefficient, \\beta = 2.155 \\times 10^4 N/m/sec\nNumber of stories, N = 40\nStory height, h = 4 m\nWind load tributary area, A_w = 192 m^2\nGradient height, Z_g = 300 m\nGradient wind velocity, U_g = 44.69 m/sec\nReference mean wind velocity at 10 m height, U_r = 11.46 m/sec\nDrag coefficient, C_d = 1.2\nAir density, \\rho = 1.23 kg/m^3\nGround surface drag coefficient, K_o = 0.03\nExponent for the mean-wind-profile power law, \\alpha = 0.4\nConstant term, C_1 = 7.7\nPartly correlated wind excitation PSD spectrum (Davenport spectrum) is\napplied at each floor. For illustration, see Figure:\nPartly Correlated Wind Excitation PSD Spectrum (Davenport Spectrum).\nThe 40-story building is modeled using 1-D spring-damper system with one end fixed\nat its foundation. The motion of the tall building is allowed along the wind direction only.\nThe damping in the structure is based on material beta damping using MP,BETD.\nThe modal analysis is performed using the Lanczos eigensolver. Only the first frequency\nis used in the subsequent PSD analysis.\nThe PSD analysis loading consists of partly correlated wind excitation PSD applied\nat each of the floors. The different wind spectrum curves are calculated as APDL array\nparameters and input with PSDVAL and COVAL. In this example, the displacement response PSD\nat the top floor is calculated and compared with the reference curve. Using this calculated\nresponse PSD, the standard deviation is calculated and compared with the reference value.\nDisplacement response at the top floor (40th floor) is calculated.\nThe response PSD is computed and plotted.\nThe standard deviation of the response PSD is calculated.\nModal frequency of first mode, \\omega_1 = 1.02 rad/sec\nStandard deviation of response PSD at the top floor, \\sigma_{X40} = 4.65\\cdot 10^{-2} m\nThe model uses COMBIN14 elements for spring-damper representation and MASS21 elements\nfor point mass representation.\nThe wind load is applied as a power spectral density (PSD) analysis.\nThe results are visualized using plots of the response PSD and displacement.\nThe model is verified against the reference values provided in the literature.\nThe results are consistent with the expected behavior of a 40-story building under\nwind load excitation.\nPSD Analysis of 40-Story Building Under Wind Load Excitation\nCOMBIN14\nMASS21\nANTYPE=2\nANTYPE=8\nCOMBIN14\nMASS21\nMP,BETD\nPSDVAL\nCOVAL"
    },
    {
        "objectID": "verif-manual/vm-298",
        "href": "verif-manual/vm-298.html#preprocessing-model-40-story-building-using-1-d-spring-damper-system-and-point-mass-elements",
        "title": "PSD Analysis of 40-Story Building Under Wind Load Excitation > Preprocessing: Model 40-story building using 1-D spring-damper system and point mass elements",
        "section": "Preprocessing: Model 40-story building using 1-D spring-damper system and point mass elements",
        "text": "Preprocessing: Model 40-story building using 1-D spring-damper system and point mass elements"
    },
    {
        "objectID": "verif-manual/vm-298",
        "href": "verif-manual/vm-298.html#modal-analysis",
        "title": "PSD Analysis of 40-Story Building Under Wind Load Excitation > Modal analysis",
        "section": "Modal analysis",
        "text": "Perform modal analysis to obtain the first mode frequency\nand prepare for the PSD analysis.\nModal analysis"
    },
    {
        "objectID": "verif-manual/vm-298",
        "href": "verif-manual/vm-298.html#psd-analysis",
        "title": "PSD Analysis of 40-Story Building Under Wind Load Excitation > PSD analysis",
        "section": "PSD analysis",
        "text": "PSD analysis"
    },
    {
        "objectID": "verif-manual/vm-298",
        "href": "verif-manual/vm-298.html#solve-the-psd-analysis",
        "title": "PSD Analysis of 40-Story Building Under Wind Load Excitation > Solve the PSD analysis",
        "section": "Solve the PSD analysis",
        "text": "Solve the PSD analysis"
    },
    {
        "objectID": "verif-manual/vm-298",
        "href": "verif-manual/vm-298.html#post-processing",
        "title": "PSD Analysis of 40-Story Building Under Wind Load Excitation > Post-processing",
        "section": "Post-processing",
        "text": "Post-processing"
    },
    {
        "objectID": "verif-manual/vm-298",
        "href": "verif-manual/vm-298.html#post-processing-in-post26-time-history-postprocessing",
        "title": "PSD Analysis of 40-Story Building Under Wind Load Excitation > Post-processing in POST26 (time-history postprocessing)",
        "section": "Post-processing in POST26 (time-history postprocessing)",
        "text": "Post-process PSD response plot using Matplotlib\nThe above figure is plotted using lin-log scale to match Figure 2 in the reference.\nTo better show the general shape of the response PSD, it is plotted using a log-log\nscale in the figure below.\nBoth plots are not the default response PSD (1-sided with m^2/Hz units). APDL operations\nare done on the results to obtain the 2-sided response PSD expressed in m^2/rad/s as is\npresented in the reference article.\nPost-process PSD response using Matplotlib - Log-Log Scale\nUse Matplotlib to create graph\nCompute the standard deviation of the response PSD\nPost-processing in POST26 (time-history postprocessing)"
    },
    {
        "objectID": "verif-manual/vm-298",
        "href": "verif-manual/vm-298.html#verify-the-results",
        "title": "PSD Analysis of 40-Story Building Under Wind Load Excitation > Verify the results",
        "section": "Verify the results",
        "text": "Stop MAPDL.\nTotal running time of the script: (0 minutes 22.736 seconds)\nDownload Jupyter notebook: vm-298.ipynb\nDownload Python source code: vm-298.py\nDownload zipped: vm-298.zip\nGallery generated by Sphinx-Gallery\nVerify the results\nDownload Jupyter notebook: vm-298.ipynb\nDownload Python source code: vm-298.py\nDownload zipped: vm-298.zip"
    },
    {
        "objectID": "verif-manual/vm-011-residual-stress-problem",
        "href": "verif-manual/vm-011-residual-stress-problem.html#residual-stress-problem",
        "title": "Residual Stress Problem",
        "section": "Residual Stress Problem",
        "text": "A chain hoist is attached to the ceiling through three tie rods as shown below.\nThe tie rods are made of cold-rolled steel with yield strength \\sigma_{yp}\nand each has an area A. Find the deflection \\delta at load F_1 when\nthe deflections are elastic in all three rods. When the frame is loaded to F_2\n(where all three rods become fully plastic), and then unloaded,\nfind the residual stress \\sigma_r in the central rod.\nS. H. Crandall, N. C. Dahl, An Introduction to the Mechanics of Solids,\nMcGraw-Hill Book Co., Inc., New York, NY, 1959, pg. 234, problem 5.31.\nStatic Analysis (ANTYPE = 0)\n3-D Spar (or Truss) Elements (LINK180)\n\\sigma_{yp} = 30,000\\,psi\nE = 30 \\cdot 10^6\\,psi\nA = 1\\,in^2\nl = 100\\,in\n\\Theta = 30°\nF_1 = 51,961.5\\,lb\nF_2 = 81,961.5\\,lb\nAutomatic load stepping (:meth: Mapl.autots <ansys.mapdl.core.Mapdl.autots>,ON)\nis used to obtain the nonlinear plastic solution (load steps 2 and 3).\nResidual Stress Problem\nANTYPE = 0\nLINK180"
    },
    {
        "objectID": "verif-manual/vm-011-residual-stress-problem",
        "href": "verif-manual/vm-011-residual-stress-problem.html#start-mapdl",
        "title": "Residual Stress Problem > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL.\nStart MAPDL"
    },
    {
        "objectID": "verif-manual/vm-011-residual-stress-problem",
        "href": "verif-manual/vm-011-residual-stress-problem.html#pre-processing",
        "title": "Residual Stress Problem > Pre-processing",
        "section": "Pre-processing",
        "text": "Enter verification example mode and the pre-processing routine.\nPre-processing"
    },
    {
        "objectID": "verif-manual/vm-011-residual-stress-problem",
        "href": "verif-manual/vm-011-residual-stress-problem.html#define-element-type",
        "title": "Residual Stress Problem > Define element type",
        "section": "Define element type",
        "text": "Set up the element type LINK180.\nDefine element type\nLINK180"
    },
    {
        "objectID": "verif-manual/vm-011-residual-stress-problem",
        "href": "verif-manual/vm-011-residual-stress-problem.html#define-model-geometry",
        "title": "Residual Stress Problem > Define model geometry",
        "section": "Define model geometry",
        "text": "Set up parameters and geometry.\nDefine model geometry"
    },
    {
        "objectID": "verif-manual/vm-011-residual-stress-problem",
        "href": "verif-manual/vm-011-residual-stress-problem.html#define-elements",
        "title": "Residual Stress Problem > Define elements",
        "section": "Define elements",
        "text": "Create elements.\nDefine elements"
    },
    {
        "objectID": "verif-manual/vm-011-residual-stress-problem",
        "href": "verif-manual/vm-011-residual-stress-problem.html#solve",
        "title": "Residual Stress Problem > Solve",
        "section": "Solve",
        "text": "Enter solution mode and run the simulation.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-011-residual-stress-problem",
        "href": "verif-manual/vm-011-residual-stress-problem.html#post-processing",
        "title": "Residual Stress Problem > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing.\nStop MAPDL.\nTotal running time of the script: (0 minutes 1.006 seconds)\nDownload Jupyter notebook: vm-011-residual-stress-problem.ipynb\nDownload Python source code: vm-011-residual-stress-problem.py\nDownload zipped: vm-011-residual-stress-problem.zip\nGallery generated by Sphinx-Gallery\nPost-processing\nDownload Jupyter notebook: vm-011-residual-stress-problem.ipynb\nDownload Python source code: vm-011-residual-stress-problem.py\nDownload zipped: vm-011-residual-stress-problem.zip"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#brake-squeal-analysis",
        "title": "Brake Squeal Analysis",
        "section": "Brake Squeal Analysis",
        "text": "This example analysis shows how to solve a brake-squeal problem.\n1.6. Analysis and solution controls are highlighted: linear non-prestressed\nmodal, partial nonlinear perturbed modal, and full nonlinear perturbed\nmodal.\nThe problem demonstrates sliding frictional contact and uses complex\neigensolvers to predict unstable modes.\nThe following topics are available:\n1.1. Introduction\n1.2. Problem description\n1.3. Modeling\n1.4. Material properties\n1.5. Boundary conditions and loading\n1.6. Analysis and solution controls\n1.7. Results and discussion\n1.8. Recommendations\n1.9. References\n1.10. Input files\nYou can also perform this example analysis entirely in the Ansys\nMechanical Application. For more information, see Brake-Squeal Analysis in the\nWorkbench Technology Showcase: Example Problems.\nBrake Squeal Analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#11-introduction",
        "title": "Brake Squeal Analysis > 1.1. Introduction",
        "section": "1.1. Introduction",
        "text": "Eliminating brake noise is a classic challenge in the automotive industry. Brake discs\ndevelop large and sustained friction-induced oscillations, simple referred to as brake\nsqueal.\nTwo common theories describe brake-squeal phenomena:\nStick-Slip Theory – The self-excited\nvibration of a brake system occurs when the static coefficient of friction is\ngreater than the sliding coefficient of friction. Variable friction forces\nintroduce energy into the system which is not properly dissipated during the\nsquealing event, resulting in large vibrations.\nMode-Coupling Theory – When two similar\ncharacteristic modes couple with each other, instability is introduced to the\nbraking system. This instability is caused primarily by improperly selected\ngeometric parameters.\nBoth theories attribute brake squeal to variable friction forces at the disc-pad\ninterface.\nBrake noise is generally categorized as follows:\nLow-frequency noise – An example of a low-frequency noise is the\n“groaning” noise which occurs in the frequency range between 100 and\n1000 Hz. Any noise having a frequency above 1000 Hz is considered a\nsqueal.\nLow-frequency squeal – A result of mode coupling occurring between the\nout-of-plane modes of the rotor and the bending modes of the brake pad.\nHigh-frequency squeal – A result of mode coupling occurring between the\nin-plane modes of the rotor.\nLow- and high-frequency squealing can be determined via complex eigensolvers. The\npresence of unstable modes suggests that the geometry parameters and material properties\nof the braking system should be modified.\nFor more information, see Brake-Squeal (Prestressed Modal) Analysis  in the Structural Analysis Guide.\n1.1. Introduction"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#12-problem-description",
        "title": "Brake Squeal Analysis > 1.2. Problem description",
        "section": "1.2. Problem description",
        "text": "The following model is a simple brake disc-pad assembly. The disc has a thickness of\n10 mm and the brake pads have a thickness of 15 mm. The inner diameter of the disc is\n250 mm and outer diameter is of 350 mm. A pre-stressed modal analysis is performed on\nthis model using various methods to determine the unstable modes. A parametric study is\nthen performed to examine the effect of the friction coefficient on the dynamic\nstability of the model.\n1.2. Problem description"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#13-modeling",
        "title": "Brake Squeal Analysis > 1.3. Modeling",
        "section": "1.3. Modeling",
        "text": "The following modeling topics are available:\n1.3.1. Understanding the Advantages of Contact Element Technology\n1.3.2. Modeling Contact Pairs\n1.3.3. Generating Internal Sliding Motion\n1.3.4. Meshing the Brake Disc-Pad Model\n1.3. Modeling"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#131-understanding-the-advantages-of-contact-element-technology",
        "title": "Brake Squeal Analysis > 1.3.1. Understanding the Advantages of Contact Element Technology",
        "section": "1.3.1. Understanding the Advantages of Contact Element Technology",
        "text": "Brake-squeal problems typically require manual calculations of the unsymmetric\nterms arising from sources such as frictional sliding, and then inputting the\nunsymmetric terms using special elements (such as\nMATRIX27). It is a tedious process requiring a matched mesh\nat the disc-pad interface along with assumptions related to the amount of area in\ncontact and sliding.\n3-D contact elements (CONTA17x) offer a more efficient alternative by modeling\nsurface-to-surface contact at the pad-disc interface. With contact\nsurface-to-surface contact elements, a matched mesh is unnecessary at the\ncontact-target surface, and there is no need to calculate the unsymmetric\nterms.\nContact surface-to-surface elements offer many controls for defining contact\npairs, such as the type of contact surface, algorithm, contact stiffness, and\ngap/initial penetration effect.\n1.3.1. Understanding the Advantages of Contact Element Technology\nMATRIX27\nCONTA17x"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#132-modeling-contact-pairs",
        "title": "Brake Squeal Analysis > 1.3.2. Modeling Contact Pairs",
        "section": "1.3.2. Modeling Contact Pairs",
        "text": "Frictional surface-to-surface contact pairs with a 0.3 coefficient of friction are\nused to define contact between the brake pads and disc to simulate frictional\nsliding contact occurring at the pad-disc interface. Bonded surface-to-surface\ncontact pairs are used to define the contact for other components which will be\nalways in contact throughout the braking operation.\nThe augmented Lagrange algorithm is used for the frictional contact pairs, as the\npressure and frictional stresses are augmented during equilibrium iterations in such\na way that the penetration is reduced gradually. The augmented Lagrange algorithm\nalso requires fewer computational resources than the standard Lagrange multiplier\nalgorithm, which normally requires additional iterations to ensure that the contact\ncompatibility is satisfied exactly. The augmented Lagrange is well suited for\nmodeling general frictional contact, such as the contact between the brake pad and\ndisc defined in this example.\nAn internal multipoint constraint (MPC) contact algorithm is used for bonded\ncontact because it ties contact and target surface together efficiently for\nsolid-solid assembly. The MPC algorithm builds equations internally based on the\ncontact kinematics and does not require the degrees of freedom of the contact\nsurface nodes, reducing the wave front size of the equation solver. A contact\ndetection point is made on the Gauss point for frictional contact pairs, and on the\nnodal point (normal-to-target surface) for MPC bonded contact pairs.\n1.3.2. Modeling Contact Pairs"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#133-generating-internal-sliding-motion",
        "title": "Brake Squeal Analysis > 1.3.3. Generating Internal Sliding Motion",
        "section": "1.3.3. Generating Internal Sliding Motion",
        "text": "The Mapdl.cmrotate()\ncommand defines constant rotational velocities on\nthe contact/target nodes to generate internal sliding motion. The specified\nrotational velocity is used only to determine the sliding direction and has no\neffect on the final solution. The element component used should include only the\ncontact or the target elements that are on the brake disc/rotor. In this example,\nthe target elements are defined on the disc surface and the contact elements are\ndefined on the pad surface. The target elements attached to the disc surface are\ngrouped to form a component named E_ROTOR which is then later specified on the\nMapdl.cmrotate()\ncommand to generate a sliding frictional force.\n1.3.3. Generating Internal Sliding Motion\nMapdl.cmrotate()\nMapdl.cmrotate()"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#134-meshing-the-brake-disc-pad-model",
        "title": "Brake Squeal Analysis > 1.3.4. Meshing the Brake Disc-Pad Model",
        "section": "1.3.4. Meshing the Brake Disc-Pad Model",
        "text": "The sweep method is used to generate a hexahedral dominant mesh of the brake\nsystem assembly. Brake discs, pads and all other associated components are meshed\nwith 20-node structural solid SOLID186 elements with\nuniform reduced-integration element technology. The edge sizing tool is used to\nobtains a refined mesh at the pad-disc interface to improve the solution accuracy.\nFor problems with a large unsymmetric coefficient, a finer mesh should be used at\nthe pad-disc interface to accurately predict the unstable modes.\nCONTA174 (3-D 8 node surface to surface contact)\nelements are used to define the contact surface and\nTARGE170 (3-D target segment) elements are used to\ndefine the target surface. The brake disc-pad assembly is meshed with total of 60351\nnodes and 11473 elements.\nStart this example by launching MAPDL and loading the model.\n1.3.4. Meshing the Brake Disc-Pad Model\nSOLID186\nCONTA174\nTARGE170"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#14-material-properties",
        "title": "Brake Squeal Analysis > 1.4. Material properties",
        "section": "1.4. Material properties",
        "text": "Linear elastic isotropic materials are assigned to all the components of the braking\nsystem.\nTable 1.1: Material properties\nMaterial properties\nYoung’s Modulus (Nm-2)\n2.0 E+11 Pa\nDensity\n7800 Kg/m3\nPoisson’s Ratio\n0.3\n1.4. Material properties"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#15-boundary-conditions-and-loading",
        "title": "Brake Squeal Analysis > 1.5. Boundary conditions and loading",
        "section": "1.5. Boundary conditions and loading",
        "text": "The inner diameter of the cylinder hub and bolt holes is constrained in all\ndirections.\nSmall pressure loading is applied on both ends of the pad to establish\ncontact with the brake disc and to include prestress effects. The displacement on the\nbrake pad surfaces where the pressure loading is applied is constrained in all\ndirections except axial (along the Z-axis).\n1.5. Boundary conditions and loading"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#16-analysis-and-solution-controls",
        "title": "Brake Squeal Analysis > 1.6. Analysis and solution controls",
        "section": "1.6. Analysis and solution controls",
        "text": "The analysis settings and solution controls differ depending upon the method used\nto solve a brake-squeal problem. This section describes three possible\nmethods:\n1.6.1. Linear Non-prestressed Modal Analysis\n1.6.2. Partial Nonlinear Perturbed Modal Analysis\n1.6.3. Full Nonlinear Perturbed Modal Analysis\n1.6. Analysis and solution controls"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#161-linear-non-prestressed-modal-analysis",
        "title": "Brake Squeal Analysis > 1.6.1. Linear Non-prestressed Modal Analysis",
        "section": "1.6.1. Linear Non-prestressed Modal Analysis",
        "text": "A linear\nnon-prestressed modal analysis is effective when the stress-stiffening\neffects are not critical.\nThis method requires less run time than the other two methods, as\nNewton-Raphson iterations are not required. The contact-stiffness matrix\nis based on the initial contact status.\nFollowing is the process for solving a brake-squeal problem using this method:\nPerform a linear partial-element analysis with no prestress effects.\nGenerate the unsymmetric stiffness matrix\n(Mapdl.nropt(\"UNSYM\")).\nGenerate sliding frictional force (Mapdl.cmrotate()).\nPerform a complex modal analysis using the QRDAMP or UNSYM eigensolver.\nWhen using the QRDAMP solver, you can reuse the symmetric\neigensolution from the previous load steps\n(Mapdl.qrdopt()), effective when performing a friction-\nsensitive/parametric analysis, as it saves time by not recalculating the\nreal symmetric modes after the first solve operation.\nExpand the modes and postprocess the results from jobname.rST.\nFor this analysis, the UNSYM solver is selected to solve the problem.\n(Guidelines for selecting the eigensolver for brake-squeal problems appear\nin  1.8. Recommendations.)\nThe frequencies obtained from the modal solution have real and imaginary parts due\nthe presence of an unsymmetric stiffness matrix. The imaginary frequency reflects\nthe damped frequency, and the real frequency indicates whether the mode is stable or\nnot. A real eigenfrequency with a positive value indicates an unstable mode.\nThe following input shows the solution steps involved in this method:\nModal Solution\nFigure 1.3: Mode Shape for Unstable Mode (Mode 21).\nObtained from the  1.6.1. Linear Non-prestressed Modal Analysis .\n1.6.1. Linear Non-prestressed Modal Analysis\nMapdl.nropt(\"UNSYM\")\nMapdl.cmrotate()\nMapdl.qrdopt()"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#162-partial-nonlinear-perturbed-modal-analysis",
        "title": "Brake Squeal Analysis > 1.6.2. Partial Nonlinear Perturbed Modal Analysis",
        "section": "1.6.2. Partial Nonlinear Perturbed Modal Analysis",
        "text": "Use a partial nonlinear perturbed modal analysis when stress-stiffening affects\nthe final modal solution. The initial contact conditions are established, and a\nprestressed matrix is generated at the end of the first static solution.\nFollowing is the process for solving a brake-squeal problem using this method:\nPerform a nonlinear, large-deflection static analysis\n(Mapdl.nlgeom(\"ON\")).\nUse the unsymmetric Newton-Raphson method\n(Mapdl.nropt(\"UNSYM\")). Specify the restart control points needed\nfor the linear perturbation analysis (Mapdl.rescontrol())\nCreate components for use in the next step.\nThe static solution with external loading establishes the initial contact\ncondition and generates a prestressed matrix.\nRestart the previous static solution from the desired load step and\nsubstep, and perform the first phase of the perturbation analysis while\npreserving the .ldhi, .rnnn and .rst files (Mapdl.antype(\"STATIC\", \"RESTART\", \"\", \"\", \"PERTURB\")).\nInitiate a modal linear perturbation analysis\n(Mapdl.perturb(\"MODAL\")).\nGenerate forced frictional sliding contact (Mapdl.cmrotate()),\nspecifying the component names created in the previous step.\nThe contact stiffness matrix is based only on the contact status at the\nrestart point.\nRegenerate the element stiffness matrix at the end of the first phase of\nthe linear perturbation solution (Mapdl.solve(\"ELFORM\")).\nObtain the linear perturbation modal solution using the QRDAMP or UNSYM\neigensolver (Mapdl.modopt()).\nWhen using the QRDAMP solver, you can reuse the symmetric\neigensolution from the previous load steps\n(Mapdl.qrdopt()), effective when performing a\nfriction-sensitive/parametric analysis, as it saves time by not\nrecalculating the real symmetric modes after the first solve\noperation.\nExpand the modes and postprocess the results (from the jobname.rstp file).\nThe following inputs show the solution steps involved with this method:\nStatic Solution\nPost processing to show partial results.\nPerturbed Modal Solution\nPost processing to show results.\nFigure 1.5: Mode Shape for Unstable Mode (Mode 21).\nObtained from the  1.6.1. Linear Non-prestressed Modal Analysis .\nFigure 1.6: Mode Shape for Unstable Mode (Mode 21).\nObtained from the  1.6.1. Linear Non-prestressed Modal Analysis .\n1.6.2. Partial Nonlinear Perturbed Modal Analysis\nMapdl.nlgeom(\"ON\")\nMapdl.nropt(\"UNSYM\")\nMapdl.rescontrol()\nMapdl.antype(\"STATIC\", \"RESTART\", \"\", \"\", \"PERTURB\")\nMapdl.perturb(\"MODAL\")\nMapdl.cmrotate()\nMapdl.solve(\"ELFORM\")\nMapdl.modopt()\nMapdl.qrdopt()"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#163-full-nonlinear-perturbed-modal-analysis",
        "title": "Brake Squeal Analysis > 1.6.3. Full Nonlinear Perturbed Modal Analysis",
        "section": "1.6.3. Full Nonlinear Perturbed Modal Analysis",
        "text": "A full nonlinear perturbed modal analysis is the most accurate method for modeling\nthe brake-squeal problem. This method uses Newton-Raphson iterations for both of the static solutions.\nFollowing is the process for solving a brake-squeal problem using this method:\nPerform a nonlinear, large-deflection static analysis\n(Mapdl.nlgeom(\"ON\")).\nUse the unsymmetric Newton-Raphson method (Mapdl.nropt(\"UNSYM\")).\nSpecify the restart control points needed for the linear perturbation analysis\n(Mapdl.rescontrol()).\nPerform a full second static analysis. Generate sliding contact\n(Mapdl.cmrotate()) to form an unsymmetric stiffness matrix.\nAfter obtaining the second static solution, postprocess the contact results.\nDetermine the status (that is, whether the elements are sliding, and the sliding distance, if any).\nRestart the previous static solution from the desired load step and substep, and perform the first\nphase of the perturbation analysis while preserving the .ldhi, .rnnn and\n.rst files (Mapdl.antype(\"STATIC\", \"RESTART\",,, \"PERTURB\")).\nInitiate a modal linear perturbation analysis\n(Mapdl.perturb(\"MODAL\")).\nRegenerate the element stiffness matrix at the end of the first phase of\nthe linear perturbation solution (Mapdl.solve(\"ELFORM\")).\nObtain the linear perturbation modal solution using the QRDAMP or UNSYM eigensolver\n(Mapdl.modopt()).\nExpand the modes and postprocess the results (from the jobname.rstp file).\nThe following inputs show the solution steps involved with this method:\nFirst Static Solution\nSecond Static Solution\nPlotting partial results\nPerturbed Modal Solution\nPlotting results\nFigure 1.7: Mode Shape for Unstable Mode (Mode 21).\nFigure 1.8: Mode Shape for Unstable Mode (Mode 21).\n1.6.3. Full Nonlinear Perturbed Modal Analysis\nMapdl.nlgeom(\"ON\")\nMapdl.nropt(\"UNSYM\")\nMapdl.rescontrol()\nMapdl.cmrotate()\nMapdl.antype(\"STATIC\", \"RESTART\",,, \"PERTURB\")\nMapdl.perturb(\"MODAL\")\nMapdl.solve(\"ELFORM\")\nMapdl.modopt()"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#17-results-and-discussion",
        "title": "Brake Squeal Analysis > 1.7. Results and discussion",
        "section": "1.7. Results and discussion",
        "text": "The unstable mode predictions for the brake disc-pad assembly using all three methods\nwere very close due to the relatively small prestress load.\nThe  1.6.1. Linear Non-prestressed Modal Analysis predicted\nunstable modes at 6474 Hz, while the other two solution methods predicted unstable modes\nat 6470 Hz.\nThe mode shape plots for the unstable modes suggest that the bending mode of the pads\nand disc have similar characteristics. These bending modes couple due to friction, and\nproduce a squealing noise.\nFigure 1.9: Mode Shape for Unstable Mode (Mode 21).\nObtained from the  1.6.1. Linear Non-prestressed Modal Analysis .\nFigure 1.10: Mode Shape for Unstable Mode (Mode 22).\nObtained from the  1.6.1. Linear Non-prestressed Modal Analysis .\nTable 1.2: Solution Output\nLinear non-prestressed modal\nPartial nonlinear perturbed modal\nFull nonlinear perturbed modal\nMode\nImaginary\nReal\nImaginary\nReal\nImaginary\nReal\n1.00\n775.91\n0.00\n775.73\n0.00\n775.73\n0.00\n2.00\n863.54\n0.00\n863.45\n0.00\n863.45\n0.00\n3.00\n1097.18\n0.00\n1097.03\n0.00\n1097.03\n0.00\n4.00\n1311.54\n0.00\n1311.06\n0.00\n1311.06\n0.00\n5.00\n1328.73\n0.00\n1328.07\n0.00\n1328.07\n0.00\n6.00\n1600.95\n0.00\n1600.66\n0.00\n1600.66\n0.00\n7.00\n1616.15\n0.00\n1615.87\n0.00\n1615.87\n0.00\n8.00\n1910.50\n0.00\n1910.50\n0.00\n1910.50\n0.00\n9.00\n2070.73\n0.00\n2070.44\n0.00\n2070.44\n0.00\n10.00\n2081.26\n0.00\n2080.98\n0.00\n2080.98\n0.00\n11.00\n2676.71\n0.00\n2675.23\n0.00\n2675.23\n0.00\n12.00\n2724.05\n0.00\n2722.61\n0.00\n2722.61\n0.00\n13.00\n3373.96\n0.00\n3373.32\n0.00\n3373.32\n0.00\n14.00\n4141.64\n0.00\n4141.45\n0.00\n4141.45\n0.00\n15.00\n4145.16\n0.00\n4145.04\n0.00\n4145.04\n0.00\n16.00\n4433.91\n0.00\n4431.08\n0.00\n4431.08\n0.00\n17.00\n4486.50\n0.00\n4484.00\n0.00\n4484.00\n0.00\n18.00\n4668.51\n0.00\n4667.62\n0.00\n4667.62\n0.00\n19.00\n4767.54\n0.00\n4766.95\n0.00\n4766.95\n0.00\n20.00\n5241.61\n0.00\n5241.38\n0.00\n5241.38\n0.00\n21.00\n6474.25\n21.61\n6470.24\n21.90\n6470.24\n21.90\n22.00\n6474.25\n-21.61\n6470.24\n-21.90\n6470.24\n-21.90\n23.00\n6763.36\n0.00\n6763.19\n0.00\n6763.19\n0.00\n24.00\n6765.62\n0.00\n6765.51\n0.00\n6765.51\n0.00\n25.00\n6920.64\n0.00\n6919.64\n0.00\n6919.64\n0.00\n26.00\n6929.25\n0.00\n6929.19\n0.00\n6929.19\n0.00\n27.00\n7069.69\n0.00\n7066.72\n0.00\n7066.72\n0.00\n28.00\n7243.80\n0.00\n7242.71\n0.00\n7242.71\n0.00\n29.00\n8498.41\n0.00\n8493.08\n0.00\n8493.08\n0.00\n30.00\n8623.76\n0.00\n8616.68\n0.00\n8616.68\n0.00\n1.7. Results and discussion"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#171-determining-the-modal-behavior-of-individual-components",
        "title": "Brake Squeal Analysis > 1.7.1. Determining the Modal Behavior of Individual Components",
        "section": "1.7.1. Determining the Modal Behavior of Individual Components",
        "text": "It is important to determine the modal behavior of individual components (disc and\npads) when predicting brake-squeal noise. A modal analysis performed on the free pad\nand free disc model gives insight into potential coupling modes. The natural\nfrequency and mode shapes of brake pads and disc can also be used to define the type\nof squeal noise that may occur in a braking system. Bending modes of pads and disc\nare more significant than twisting modes because they eventually couple to produce\nsqueal noise.\nAn examination of the results obtained from the modal analysis of a free disc and\npad shows that the second bending mode of the pad and ninth bending mode of the disc\ncan couple to create dynamic instability in the system. These pad and disc bending\nmodes can couple to produce an intermediate lock, resulting in a squeal noise at a\nfrequency close to 6470 Hz.\n1.7.1. Determining the Modal Behavior of Individual Components"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#172-parametric-study-with-increasing-friction-coefficient",
        "title": "Brake Squeal Analysis > 1.7.2. Parametric Study with Increasing Friction Coefficient",
        "section": "1.7.2. Parametric Study with Increasing Friction Coefficient",
        "text": "A parametric study was performed on the brake disc model using a linear\nnon-prestressed modal solution with an increasing coefficient of friction. QRDAMP\neigensolver is used to perform the parametric studies by reusing the symmetric real\nmodes (Mapdl.qrdopt(\"ON\")) obtained in the first load\nstep.\nThe following plot suggests that modes with similar characteristics approach each\nother and couple as the coefficient of friction increases:\nFigure 1.11: Effect of Friction Coefficient on Unstable Modes\n1.7.2. Parametric Study with Increasing Friction Coefficient\nMapdl.qrdopt(\"ON\")"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#18-recommendations",
        "title": "Brake Squeal Analysis > 1.8. Recommendations",
        "section": "1.8. Recommendations",
        "text": "The following table provides guidelines for selecting the optimal analysis method to\nuse for a brake-squeal problem:\nTable 1.3: Analysis comparison\nAnalysis Method\nBenefits\nCosts\nLinear non-prestressed modal\nFast run time.\nNo convergence issues.\nGood method for performing parametric studies\nAccuracy.\nDoes not include prestress effects\nPartial nonlinear perturbed modal\nNo convergence issues.\nIncludes prestress effects\nAccuracy\nFull nonlinear perturbed modal\nAccurate.\nIncludes prestress effects\nLonger run time.\nConvergence issues\nThe following table provides guidelines for selecting the optimal eigensolver\n(Mapdl.modopt()) for obtaining the brake-squeal solution:\nTable 1.4: Solver comparison\nEigensolver\nBenefits\nCosts\nQRDAMP\nFast run time.\nAn excellent solver for performing parametric studies\nAccuracy, as it approximates the unsymmetric stiffness matrix.\nNot recommended when the number of elements contributing to unsymmetric stiffness matrix exceeds 10 percent of the total number of elements in the model.\nUNSYM\nAccuracy, as it uses the full unsymmetric stiffness matrix to solve the problem\nLong run time when many modes are extracted\nFor further information, see Brake-Squeal (Prestressed Modal) Analysis in the Structural Analysis Guide.\n1.8. Recommendations\nMapdl.modopt()"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#19-references",
        "title": "Brake Squeal Analysis > 1.9. References",
        "section": "1.9. References",
        "text": "The following works were consulted when creating this example problem:\nTriches, M. Jr., Gerges, S. N. Y., & Jordon, R. (2004). Reduction of\nsqueal noise from disc brake systems using constrained layer damping.\nJournal of the Brazilian Society of Mechanical Sciences and\nEngineering. 26, 340-343.\nAllgaier, R., Gaul, L., Keiper, W., & Willner, K. (1999). Mode lock-in and\nfriction modeling. Computational Methods in Contact\nMechanics. 4, 35-47.\nSchroth, R., Hoffmann, N., Swift, R. (2004, January). Mechanism of brake\nsqueal from theory to experimentally measured mode coupling. In\nProceedings of the twenty second International Modal Analysis\nConference (IMAC XXII).\n1.9. References"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal",
        "href": "technology_showcase_examples/techdemo-1/ex_01-tecbrakesqueal.html#110-input-files",
        "title": "Brake Squeal Analysis > 1.10. Input files",
        "section": "1.10. Input files",
        "text": "The following input files were used for this problem:\nlinear_non_prestressed.html – Linear non-prestressed modal solve input file.\nDownload source code: linear_non_prestressed.py.\npartial_prestressed.html – Partial prestressed modal solve input file.\nDownload source code: partial_prestressed.py.\nfull_non_linear.html – Full nonlinear prestressed modal solve input file.\nDownload source code: full_non_linear.py.\nlinear_non_prestressed_par.html – Parametric studies with increasing coefficient of friction.\nDownload source code: linear_non_prestressed_par.py.\ndisc_pad_model.cdb – Common database file used for the linear non-prestressed modal analysis, the partial prestressed modal analysis,\nand the full nonlinear prestressed modal analysis (called by the linear_non_prestressed.dat, partial_prestressed.dat,\nfull_non_linear.html and linear_non_prestressed_par.html files, respectively).\nDownload file: disc_pad_model.cdb.\nDownload the zipped td-1 file set for this problem\nFor more information, see Obtaining the input files.\nGallery generated by Sphinx-Gallery\n1.10. Input files\nDownload source code: linear_non_prestressed.py\nDownload source code: partial_prestressed.py\nDownload source code: full_non_linear.py\nDownload source code: linear_non_prestressed_par.py\nDownload file: disc_pad_model.cdb"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#force-on-the-boundary-of-a-semi-infinite-body-boussinesq-problem",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem)",
        "section": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem)",
        "text": "A point force is applied at the origin of a half-space 2D axisymmetric solid modeled with\nfar-field domain. Determine the displacement in the Y-direction on nodes along the radial\ndirection (at location Y = 0) and vertical direction (at location X = 0).\nTIMOSHENKO,S.P.,AND J.N.GOODIER,THEORY OF ELASTICITY\nMCGRAW-HILL,NEW YORK, PP 398-402, 1970.\nStatic Analysis ANTYPE=0\nStructural Infinite Solid (INFIN257)\n2-D 4-Node Structural Solid (PLANE182)\n2-D 8-Node Structural Solid (PLANE183)\nYoungs modulus, E = 1.0\nPoissons ratio, \\mu = 0.3\nRadius of finite mesh = 4.0\nRadius of infinite mesh = 4.0\nPoint Load = 1.0\nThe problem is solved for two cases:\n- Case 1: Using PLANE182 and INFIN257 elements\n- Case 2: Using PLANE183 and INFIN257 elements\nThe problem is composed with 12 axisymmetric finite element mesh\n(PLANE182 or PLANE183) with a radius of 4 from the origin, and 4\ninfinite element mesh (INFIN257) modeling the far-field domain with\na radius of 4 extending from the finite element domain. The infinite\nelement mesh is modeled using the EINFIN command. The UX degrees of\nfreedom are constrained at location X = 0. The UY results are computed\nalong the radial and vertical direction on the nodes belonging to the\nfinite element mesh and then compared to the analytical results.\nThe analytic solution to compute vertical displacement for the problem\nof a point load on a half space is:\n\\omega = \\frac{P}{2 \\pi E} \\bigg [ \\frac{(1+\\nu)z^2}{(r^2+z^2)^{3/2}} + \\frac{2(1-\\nu ^2)}{(r^2 + z^2)^{1/2}} \\bigg]\nWhere P is the point load, E is the Young’s modulus,\n\\nu is the Poisson’s ratio, and r and z are\nthe radial and vertical distance from the point load.\nThe above equation clearly shows the \\frac {1}{r} singularity\nat the point of application of the load (r=0 and z=0),\nwhich indicates that the finite element results may not be close to\nthe analytical solution a points close to the origin.\nForce on the Boundary of a Semi-Infinite Body (Boussinesq Problem)\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#define-element-type-and-properties",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Define element type and properties",
        "section": "Define element type and properties",
        "text": "Use 2D 4-Node structural solid element (PLANE182) and set Keyopt(3)=1, Axisymmetric.\nDefine element type and properties"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#define-material",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’S ratio of 0.1 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#define-geometry",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#inline-functions-in-pymapdl-to-query-node",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Inline functions in PyMAPDL to query node",
        "section": "Inline functions in PyMAPDL to query node",
        "text": "Select node located at (0,0,0) and assign it to variable “NPOLE”.\nInline functions in PyMAPDL to query node"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#define-boundary-conditions",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Fix UX degrees of freedom at node location X=0. Apply a negative force 1.0 lb\nalong FY direction at node 1. Then exit prep7 processor.\nEffectiely, this sets:\n- Point Load = 1.0\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#solve",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#post-processing",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflections.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#verify-the-results",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#finish-the-post-processing-processor",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#clears-the-database-without-restarting",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Clears the database without restarting.",
        "section": "Clears the database without restarting.",
        "text": "Clears the database without restarting."
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#define-material",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’S ratio of 0.1 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#define-element-type-and-properties",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Define element type and properties",
        "section": "Define element type and properties",
        "text": "Use 2D 8-Node structural solid element (PLANE183) and set Keyopt(3)=1, Axisymmetric.\nDefine element type and properties"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#define-geometry",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#inline-functions-in-pymapdl-to-query-node",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Inline functions in PyMAPDL to query node",
        "section": "Inline functions in PyMAPDL to query node",
        "text": "Select node located at (0,0,0) and assign it to variable “NPOLE”.\nInline functions in PyMAPDL to query node"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#define-boundary-conditions",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Fix UX degrees of freedom at node location X=0. Apply a negative force 1.0 lb\nalong FY direction at node 6. Then exit prep7 processor.\nEffectiely, this sets:\n- Point Load = 1.0\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#solve",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#post-processing",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflections.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#finish-the-post-processing-processor",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-291",
        "href": "verif-manual/vm-291.html#stop-mapdl",
        "title": "Force on the Boundary of a Semi-Infinite Body (Boussinesq Problem) > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 1.890 seconds)\nDownload Jupyter notebook: vm-291.ipynb\nDownload Python source code: vm-291.py\nDownload zipped: vm-291.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-291.ipynb\nDownload Python source code: vm-291.py\nDownload zipped: vm-291.zip"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#laterally-loaded-tapered-support-structure",
        "title": "Laterally Loaded Tapered Support Structure",
        "section": "Laterally Loaded Tapered Support Structure",
        "text": "A cantilever beam of thickness t and length l\nhas a depth which tapers uniformly from d at the tip\nto 3d at the wall. It is loaded by a force F\nat the tip, as shown. Find the maximum bending stress at the\nmid-length (X = l) and the fixed end of the beam.\nS. H. Crandall, N. C. Dahl, An Introduction to the Mechanics\nof Solids, McGraw-Hill Book Co., Inc., New York, NY, 1959,\npg. 342, problem 7.18.\nStatic Analysis ANTYPE=0\n2-D 4-Node Structural Solid Elements (PLANE182)\n2-D 8-Node Structural Solid Elements (PLANE183)\nE = 30 \\cdot 10^6 psi\n\\nu = 0.0\nd = 3in\nt = 2in\nl = 50 in\nd = 3 in\nt = 2 in\nF = 4000 lb\nTwo different solutions are obtained. The first solution uses\nlower order PLANE182 elements and the second solution uses higher\norder PLANE82 elements. The 2 inch thickness is incorporated\nby using the plane stress with thickness option. Poisson’s\nratio is set to 0.0 to agree with beam theory.\nLaterally Loaded Tapered Support Structure\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#start-mapdl",
        "title": "Laterally Loaded Tapered Support Structure > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#define-material",
        "title": "Laterally Loaded Tapered Support Structure > Define material",
        "section": "Define material",
        "text": "Set up the material using PLANE182 with a thickness of 2 (using real\nconstants), and create a material with a Young’s modulus of 30e6,\nand a poisson’s ratio of 0.0 to agree with beam theory.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#define-geometry",
        "title": "Laterally Loaded Tapered Support Structure > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#define-boundary-conditions",
        "title": "Laterally Loaded Tapered Support Structure > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Fix the nodes at the larger end (the “wall” end) and apply a vertical force\nto the whole structure.\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#solve",
        "title": "Laterally Loaded Tapered Support Structure > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#post-processing",
        "title": "Laterally Loaded Tapered Support Structure > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Get the stress at the fixed end and the mid point\nof the structure by querying the stress at nodes closest to these locations.\nWe’ve gathered the code into a function because we’ll have use for it later.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#plotting",
        "title": "Laterally Loaded Tapered Support Structure > Plotting",
        "section": "Plotting",
        "text": "View the equivalent stress, and displacement, of the cantilever with a\ndisplacement_factor of 26 to scale up the deformation to a visible\namount.\nPlotting\ndisplacement_factor"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#redo-with-plane-183",
        "title": "Laterally Loaded Tapered Support Structure > Redo with Plane 183",
        "section": "Redo with Plane 183",
        "text": "Now we need to perform the simulation again but this time using the PLANE183\nelement type. We additionally remove midside nodes with emid.\nRedo with Plane 183\nemid"
    },
    {
        "objectID": "verif-manual/vm-005-laterally_loaded_tapered_support_structure",
        "href": "verif-manual/vm-005-laterally_loaded_tapered_support_structure.html#check-results",
        "title": "Laterally Loaded Tapered Support Structure > Check results",
        "section": "Check results",
        "text": "Now that we have the stresses we can compare them to the expected values\nof stress at the midpoint (8333) and the fixed end (7407) for both\nsimulations.\nStop MAPDL.\nTotal running time of the script: (0 minutes 2.229 seconds)\nDownload Jupyter notebook: vm-005-laterally_loaded_tapered_support_structure.ipynb\nDownload Python source code: vm-005-laterally_loaded_tapered_support_structure.py\nDownload zipped: vm-005-laterally_loaded_tapered_support_structure.zip\nGallery generated by Sphinx-Gallery\nCheck results\nDownload Jupyter notebook: vm-005-laterally_loaded_tapered_support_structure.ipynb\nDownload Python source code: vm-005-laterally_loaded_tapered_support_structure.py\nDownload zipped: vm-005-laterally_loaded_tapered_support_structure.zip"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#pinched-cylinder",
        "title": "Pinched cylinder",
        "section": "Pinched cylinder",
        "text": "A thin-walled cylinder is pinched by a force F at the middle\nof the cylinder length. Determine the radial displacement \\delta\nat the point where the force F is applied.\nThe ends of the cylinder are free edges.\nR. D. Cook, Concepts and Applications of Finite Element Analysis, 2nd Edition,\nJohn Wiley and Sons, Inc., New York, NY, 1981, pp. 284-287.\nH. Takemoto, R. D. Cook, “Some Modifications of an Isoparametric Shell\nElement”, International Journal for Numerical Methods in Engineering, Vol.7\nNo. 3, 1973.\nStatic Analysis ANTYPE=0\n4-Node Finite Strain Shell Elements (SHELL181)\n8-Node Finite Strain Shell Elements (SHELL281)\nE = 10.5 \\cdot 10^6 psi\n\\nu = 0.3125\nl = 10.35  in\nr = 4.953  in\nt = 0.094  in\nF = 100  lb\nA one-eighth symmetry model is used. One-fourth of the load is applied\ndue to symmetry.\nPinched cylinder\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#start-mapdl",
        "title": "Pinched cylinder > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#initiate-pre-processing",
        "title": "Pinched cylinder > Initiate pre-processing",
        "section": "Initiate pre-processing",
        "text": "Enter verification example mode and the pre-processing routine.\nInitiate pre-processing"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#define-element-type",
        "title": "Pinched cylinder > Define element type",
        "section": "Define element type",
        "text": "Set up the element type (a shell-type).\nDefine element type"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#define-material",
        "title": "Pinched cylinder > Define material",
        "section": "Define material",
        "text": "Set up the material properties, where:\nYoung Modulus is E = 10.5 \\cdot 10^6 psi,\nPoisson’s ratio is \\nu = 0.3125.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#define-section",
        "title": "Pinched cylinder > Define section",
        "section": "Define section",
        "text": "Set up the cross-section properties for a shell element.\nDefine section"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#define-geometry",
        "title": "Pinched cylinder > Define geometry",
        "section": "Define geometry",
        "text": "Set up the keypoints and create the area through the keypoints.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#meshing",
        "title": "Pinched cylinder > Meshing",
        "section": "Meshing",
        "text": "Define line division of the lines, then mesh the area with shell elements.\nMeshing"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#define-boundary-conditions",
        "title": "Pinched cylinder > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Application of symmetric boundary conditions for simplified model.\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#define-distributed-loads",
        "title": "Pinched cylinder > Define distributed loads",
        "section": "Define distributed loads",
        "text": "Apply the force of F = (100/4) lb in the y-direction.\nDefine distributed loads"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#solve",
        "title": "Pinched cylinder > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system. Print the solver output.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#post-processing",
        "title": "Pinched cylinder > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing for the model with elements shell181.\nPlotting nodal displacement.\nGet the the radial displacement at the node where force F is applied.\nPost-processing\nshell181"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#plotting",
        "title": "Pinched cylinder > Plotting",
        "section": "Plotting",
        "text": "Plot nodal displacement using PyVista.\nPlotting"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#getting-the-radial-displacements",
        "title": "Pinched cylinder > Getting the radial displacements",
        "section": "Getting the radial displacements",
        "text": "To determine the radial displacement \\delta at the point\nwhere F is applied, we can use Mapdl.get_value.\nGetting the radial displacements\nMapdl.get_value"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#rerun-model-with-shell281",
        "title": "Pinched cylinder > Rerun model with SHELL281",
        "section": "Rerun model with SHELL281",
        "text": "Perform the simulation again using the element type SHELL281.\nRerun model with SHELL281"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#solve",
        "title": "Pinched cylinder > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system. Print the solver output.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#post-processing",
        "title": "Pinched cylinder > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing for the model with elements shell281.\nPlotting nodal displacement.\nGet the the radial displacement at the node where force F is applied.\nPost-processing\nshell281"
    },
    {
        "objectID": "verif-manual/vm-006-pinched_cylinder",
        "href": "verif-manual/vm-006-pinched_cylinder.html#check-results",
        "title": "Pinched cylinder > Check results",
        "section": "Check results",
        "text": "Now we have the deflections, we can compare them to the expected values\nof radial deflection at the node where force F was applied\nfor both simulations. The expected value for \\delta_{\\mathrm{shell181}} is 0.1139,\nand \\delta_{\\mathrm{shell281}} is 0.1139.\nStop MAPDL.\nTotal running time of the script: (0 minutes 6.342 seconds)\nDownload Jupyter notebook: vm-006-pinched_cylinder.ipynb\nDownload Python source code: vm-006-pinched_cylinder.py\nDownload zipped: vm-006-pinched_cylinder.zip\nGallery generated by Sphinx-Gallery\nCheck results\nDownload Jupyter notebook: vm-006-pinched_cylinder.ipynb\nDownload Python source code: vm-006-pinched_cylinder.py\nDownload zipped: vm-006-pinched_cylinder.zip"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#contribute",
        "title": "Contribute",
        "section": "Contribute",
        "text": "Overall guidance on contributing to a PyAnsys library appears in the\nContributing topic\nin the PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar\nwith this guide before attempting to contribute to PyMAPDL Examples.\nThe following contribution information is specific to PyMAPDL Examples.\nContribute"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#clone-the-repository",
        "title": "Contribute > Clone the repository",
        "section": "Clone the repository",
        "text": "Run this code to clone and install the latest version of PyMAPDL Examples in development mode:\nClone the repository"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#post-issues",
        "title": "Contribute > Post issues",
        "section": "Post issues",
        "text": "Use the PyMAPDL Examples Issues page to submit questions,\nreport bugs, and request new features. When possible, use these issue\ntemplates:\nBug report template\nFeature request template\nIf your issue does not fit into one of these template categories, create your own issue.\nTo reach the project support team, email pyansys.core@ansys.com.\nPost issues"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#python-virtual-environment",
        "title": "Contribute > Python virtual environment",
        "section": "Python virtual environment",
        "text": "The use of a Python virtual environment is recommended.\nTo create one, run the following commands:\nTo deactivate the virtual environment, run this command:\nPython virtual environment"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#build-documentation",
        "title": "Contribute > Build documentation",
        "section": "Build documentation",
        "text": "To build the documentation for PyMAPDL Examples locally, in the root directory of the repository,\nrun these commands:\nBuild documentation"
    },
    {
        "objectID": "contributing/index",
        "href": "contributing/index.html#adhere-to-code-style",
        "title": "Contribute > Adhere to code style",
        "section": "Adhere to code style",
        "text": "PyMAPDL Examples follows the PEP8 standard as outlined in the PyAnsys Development Guide and implements style checking using\npre-commit.\npre-commit is a multi-language package manager for pre-commit hooks. To ensure\nthat your code meets minimum code styling standards, install pre-commit with\nthis command:\nOnce installed, you can run code style checks with this command:\nYou can also install this as a pre-commit hook by running this command:\nThis way, it is not possible for you to push code that fails the style checks:\nAdhere to code style\npre-commit\npre-commit"
    },
    {
        "objectID": "index",
        "href": "index.html#pymapdl-examples",
        "title": "PyMAPDL Examples",
        "section": "PyMAPDL Examples",
        "text": "The Technology Showcases and the Verification Manual examples for\nPyMAPDL are contained in this repository.\nPyMAPDL Examples"
    },
    {
        "objectID": "index",
        "href": "index.html#verification-manual",
        "title": "PyMAPDL Examples > Verification Manual",
        "section": "Verification Manual",
        "text": "These examples present how to use PyMAPDL in an academic modeling context.\nThey ensure the PyMAPDL accuracy.\nVerification Manual"
    },
    {
        "objectID": "index",
        "href": "index.html#summary-of-the-exposed-verification-manual-examples",
        "title": "PyMAPDL Examples > Summary of the exposed Verification Manual Examples",
        "section": "Summary of the exposed Verification Manual Examples",
        "text": "in straightforward problems which have “classical” or readily-obtainable\ntheoretical solutions using PyMAPDL.\nThese problems may then serve as the basis for additional validation and\nqualification of Mechanical APDL capabilities for specific applications that\nmay be of interest.\nsphx_glr_verif-manual_vm-001-statically_indeterminate_reaction_force_analysis.py\nsphx_glr_verif-manual_vm-002-beam_stresses_and_deflections.py\nsphx_glr_verif-manual_vm-003-thermally_loaded_support_structure.py\nsphx_glr_verif-manual_vm-004-deflection_of_a_hinged_support.py\nsphx_glr_verif-manual_vm-005-laterally_loaded_tapered_support_structure.py\nsphx_glr_verif-manual_vm-006-pinched_cylinder.py\nsphx_glr_verif-manual_vm-007-plastic_compression_of_a_pipe_assembly.py\nsphx_glr_verif-manual_vm-008-parametric_calculation.py\nsphx_glr_verif-manual_vm-009-large_lateral_deflection_of_unequal_stiffness_springs.py\nsphx_glr_verif-manual_vm-010-bending_of_a_t-shaped_beam.py\nsphx_glr_verif-manual_vm-011-residual-stress-problem.py\nsphx_glr_verif-manual_vm-012-combined-bending-and-torsion.py\nsphx_glr_verif-manual_vm-013.py\nsphx_glr_verif-manual_vm-014.py\nsphx_glr_verif-manual_vm-015.py\nsphx_glr_verif-manual_vm-016.py\nsphx_glr_verif-manual_vm-018.py\nsphx_glr_verif-manual_vm-020.py\nsphx_glr_verif-manual_vm-021.py\nsphx_glr_verif-manual_vm-025.py\nsphx_glr_verif-manual_vm-291.py\nsphx_glr_verif-manual_vm-295.py\nsphx_glr_verif-manual_vm-298.py\nSummary of the exposed Verification Manual Examples"
    },
    {
        "objectID": "index",
        "href": "index.html#technology-showcases",
        "title": "PyMAPDL Examples > Technology Showcases",
        "section": "Technology Showcases",
        "text": "This documentation demonstrates the broad simulation capabilities of Ansys Mechanical\nAPDL.\nThe problems demonstrate how to use PyMAPDL to effectively and accurately\nsolve interdisciplinary problems from a variety of industries and engineering\nfields.\nTechnology Showcases"
    },
    {
        "objectID": "index",
        "href": "index.html#summary-of-the-exposed-technology-showcases",
        "title": "PyMAPDL Examples > Summary of the exposed Technology Showcases",
        "section": "Summary of the exposed Technology Showcases",
        "text": "The exposed files are more complex examples than the ones presented in the APDL\nVerification Manual. They are complete and concrete case studies\nwhich necessitate more resources.\nsphx_glr_ex_01-tecbrakesqueal.py\nsphx_glr_ex_15-tecHyperConstlModel.py\nsphx_glr_ex_20-tecPCB.rst\nsphx_glr_ex_21-tecbuckling.rst\nsphx_glr_ex_25-tecstent.rst\nsphx_glr_ex_28-tecfricstir.py\nsphx_glr_ex_62-techinverse.rst\nSummary of the exposed Technology Showcases"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#bending-of-a-tee-shaped-beam",
        "title": "Bending of a Tee-Shaped Beam",
        "section": "Bending of a Tee-Shaped Beam",
        "text": "Find the maximum tensile \\sigma_{\\mathrm{(B,Bot)}} and compressive\n\\sigma_{\\mathrm{(B,Top)}}\nbending stresses in an unsymmetrical T-beam subjected to uniform bending M_z,\nwith dimensions and geometric properties as shown below.\nS. H. Crandall, N. C. Dahl, An Introduction to the Mechanics of Solids,\nMcGraw-Hill Book Co., Inc., New York, NY, 1959, pg. 294, ex. 7.2.\nStatic Analysis (ANTYPE = 0)\n3-D 2 Node Beam (BEAM188)\nE = 30 \\cdot 10^6 psi\n\\nu = 0.3\nl = 100\\,in\nh = 1.5\\,in\nb = 8\\,in\nM_z = 100,000\\,in\\,lb\nA length (l = 100 in) is arbitrarily selected since the bending moment is constant.\nA T-section beam is modeled using flange width (6b),\nflange thickness (\\frac{h}{2}), overall depth (2h + \\frac{h}{2}), and\nstem thickness (b), input using Mapdl.secdata.\nBending of a Tee-Shaped Beam\nANTYPE = 0\nBEAM188\nMapdl.secdata"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#start-mapdl",
        "title": "Bending of a Tee-Shaped Beam > Start MAPDL",
        "section": "Start MAPDL",
        "text": "Start MAPDL and import Numpy and Pandas libraries.\nStart MAPDL"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#pre-processing",
        "title": "Bending of a Tee-Shaped Beam > Pre-processing",
        "section": "Pre-processing",
        "text": "Enter verification example mode and the pre-processing routine.\nPre-processing"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#define-element-type",
        "title": "Bending of a Tee-Shaped Beam > Define element type",
        "section": "Define element type",
        "text": "Set up the element type BEAM188.\nDefine element type\nBEAM188"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#define-material",
        "title": "Bending of a Tee-Shaped Beam > Define material",
        "section": "Define material",
        "text": "Set up the material, where:\nE = 30 \\cdot 10^6 psi - Young Modulus of steel.\n\\nu = 0.3 - Poisson’s ratio.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#define-section",
        "title": "Bending of a Tee-Shaped Beam > Define section",
        "section": "Define section",
        "text": "Set up the cross-section properties for a beam elements, where:\nw_1 = 6b = 6 \\cdot 1.5 = 9\\,in - flange width.\nw_2 = 2h + h/2 = 2 \\cdot 8 + 8/2 = 20\\,in - overall depth.\nt_1 = h/2 = 8/2 = 4\\,in - flange thickness.\nt_2 = b = 1.5\\,in - stem thickness.\nDefine section"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#define-geometry",
        "title": "Bending of a Tee-Shaped Beam > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. Create nodes between elements.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#define-elements",
        "title": "Bending of a Tee-Shaped Beam > Define elements",
        "section": "Define elements",
        "text": "Create element between nodes 1 and 2 using node 3 as orientational node.\nDefine elements"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#define-boundary-conditions",
        "title": "Bending of a Tee-Shaped Beam > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Application of boundary conditions (BC).\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#define-distributed-loads",
        "title": "Bending of a Tee-Shaped Beam > Define distributed loads",
        "section": "Define distributed loads",
        "text": "Apply a bending moment \\mathrm{M_{z}}= 100000\\,in\\,lb.\nDefine distributed loads"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#solve",
        "title": "Bending of a Tee-Shaped Beam > Solve",
        "section": "Solve",
        "text": "Enter solution mode and run the simulation.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#post-processing",
        "title": "Bending of a Tee-Shaped Beam > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#getting-displacements",
        "title": "Bending of a Tee-Shaped Beam > Getting displacements",
        "section": "Getting displacements",
        "text": "Using Mapdl.etable get the results of\nthe the maximum tensile and compressive bending stresses in\nan unsymmetric T-beam with Mapdl.get_value.\nGetting displacements\nMapdl.etable\nMapdl.get_value"
    },
    {
        "objectID": "verif-manual/vm-010-bending_of_a_t-shaped_beam",
        "href": "verif-manual/vm-010-bending_of_a_t-shaped_beam.html#check-results",
        "title": "Bending of a Tee-Shaped Beam > Check results",
        "section": "Check results",
        "text": "Finally we have the results of the the maximum tensile and\ncompressive bending stresses, which can be compared with expected target\nvalues:\nmaximum tensile bending stress \\sigma_{\\mathrm{(B,Bot)}} = 300\\,psi.\nmaximum compressive bending stress \\sigma_{\\mathrm{(B,Top)}} = -700\\,psi.\nFor better representation of the results we can use pandas dataframe\nwith following settings below:\nStop MAPDL.\nTotal running time of the script: (0 minutes 0.899 seconds)\nDownload Jupyter notebook: vm-010-bending_of_a_t-shaped_beam.ipynb\nDownload Python source code: vm-010-bending_of_a_t-shaped_beam.py\nDownload zipped: vm-010-bending_of_a_t-shaped_beam.zip\nGallery generated by Sphinx-Gallery\nCheck results\npandas\nDownload Jupyter notebook: vm-010-bending_of_a_t-shaped_beam.ipynb\nDownload Python source code: vm-010-bending_of_a_t-shaped_beam.py\nDownload zipped: vm-010-bending_of_a_t-shaped_beam.zip"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#large-deflection-eccentric-compression-of-slender-column",
        "title": "Large Deflection Eccentric Compression of Slender Column",
        "section": "Large Deflection Eccentric Compression of Slender Column",
        "text": "Find the deflection \\delta at the middle and the maximum tensile and compressive stresses\nin an eccentrically compressed steel strut of length L. The cross-section is a channel\nwith the dimensions shown in the diagram. The ends are pinned at the point of load application.\nThe distance between the centroid and the back of the channel is e, and the compressive force F\nacts in the plane of the back of the channel and in the symmetry plane of the channel.\nS. Timoshenko, Strength of Materials, Part I, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1955,\npg. 263, problem 1.\nStatic, Large Deflection Analysis ANTYPE=0\nElastic Tapered Unsymmetric Beam Elements (BEAM188)\nE = 30 \\cdot 10^6 psi\n\\mu = 0.3\nL = 10 ft\nh = 8 in\ns = 0.22 in\nt = 0.39 in\ne = 0.6465 in\nb = 2.26 in\nF = 4000 lb\nOnly one-half of the structure is modeled because of symmetry.\nThe boundary conditions for the equivalent half model become fixed-free.\nLarge deflection is needed since the stiffness of the structure and the\nloading change significantly with deflection. The offset e is defined in\nthe element coordinate system.\nLarge Deflection Eccentric Compression of Slender Column\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#define-element-type-and-properties",
        "title": "Large Deflection Eccentric Compression of Slender Column > Define element type and properties",
        "section": "Define element type and properties",
        "text": "Use 3D 2-Node Beam element (Beam188) and set cubic shape function Keyopt(3)=3.\nDefine element type and properties"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#define-material",
        "title": "Large Deflection Eccentric Compression of Slender Column > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’s ratio of 0.3 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#define-geometry",
        "title": "Large Deflection Eccentric Compression of Slender Column > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#define-coupling-and-boundary-conditions",
        "title": "Large Deflection Eccentric Compression of Slender Column > Define coupling and boundary conditions",
        "section": "Define coupling and boundary conditions",
        "text": "Fix all degrees of freedom for node 1. Apply a negative force 4000 lb in FY\ndirection at node 5. Apply symmetry boundary condition along z-direction.\nThen exit prep7 processor.\nF = 4000 lb\nDefine coupling and boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#solve",
        "title": "Large Deflection Eccentric Compression of Slender Column > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#post-processing",
        "title": "Large Deflection Eccentric Compression of Slender Column > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute deflection and stress components.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#inline-functions-in-pymapdl-to-query-node",
        "title": "Large Deflection Eccentric Compression of Slender Column > Inline functions in PyMAPDL to query node",
        "section": "Inline functions in PyMAPDL to query node",
        "text": "Inline functions in PyMAPDL to query node"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#retrieve-nodal-deflection-and-section-stresses",
        "title": "Large Deflection Eccentric Compression of Slender Column > Retrieve nodal deflection and section stresses",
        "section": "Retrieve nodal deflection and section stresses",
        "text": "Retrieve nodal deflection and section stresses"
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#verify-the-results",
        "title": "Large Deflection Eccentric Compression of Slender Column > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#finish-the-post-processing-processor",
        "title": "Large Deflection Eccentric Compression of Slender Column > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-014",
        "href": "verif-manual/vm-014.html#stop-mapdl",
        "title": "Large Deflection Eccentric Compression of Slender Column > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 0.880 seconds)\nDownload Jupyter notebook: vm-014.ipynb\nDownload Python source code: vm-014.py\nDownload zipped: vm-014.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-014.ipynb\nDownload Python source code: vm-014.py\nDownload zipped: vm-014.zip"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#dynamic-simulation-of-a-printed-circuit-board-assembly",
        "title": "Dynamic simulation of a printed circuit board assembly",
        "section": "Dynamic simulation of a printed circuit board assembly",
        "text": "This examples shows how to use PyMAPDL to import an existing FE model and to\nrun a modal and PSD analysis. PyDPF modules are also used for post-processing.\nThe following topics are available:\n20.1. Introduction\n20.2. Modeling\n20.3. Modal analysis\n20.4. PSD analysis\n20.5. Exit MAPDL\n20.6. Input files\nThis example is inspired from the model and analysis defined in Chapter 20 of\nthe Mechanical APDL Technology Showcase Manual.\nDynamic simulation of a printed circuit board assembly"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#201-introduction",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.1. Introduction",
        "section": "20.1. Introduction",
        "text": "20.1. Introduction"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#2011-additional-packages-used",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.1.1. Additional Packages Used",
        "section": "20.1.1. Additional Packages Used",
        "text": "Matplotlib is used for plotting purposes.\n20.1.1. Additional Packages Used"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#2012-setting-up-model",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.1.2. Setting up model",
        "section": "20.1.2. Setting up model",
        "text": "The original FE model is given in the Ansys Mechanical APDL Technology\nShowcase Manual. The pcb_mesh_file.cdb contains a FE model of a single\ncircuit board. The model is meshed with SOLID186, SHELL181 and BEAM188 elements.\nAll components of the PCB model is assigned with linear elastic isotropic materials.\nBonded and flexible surface-to-surface contact pairs are used to define the contact\nbetween the IC packages and the circuit board.\n20.1.2. Setting up model\npcb_mesh_file.cdb"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#2013-starting-mapdl-as-a-service",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.1.3. Starting MAPDL as a service",
        "section": "20.1.3. Starting MAPDL as a service",
        "text": "20.1.3. Starting MAPDL as a service"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#202-modeling",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.2. Modeling",
        "section": "20.2. Modeling",
        "text": "20.2. Modeling"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#2021-importing-an-external-model",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.2.1. Importing an external model",
        "section": "20.2.1. Importing an external model",
        "text": "20.2.1. Importing an external model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#2022-creating-the-complete-layered-model",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.2.2. Creating the complete layered model",
        "section": "20.2.2. Creating the complete layered model",
        "text": "The original model will be duplicated to create a layered PCB of three layers\nthat are bound together.\n20.2.2. Creating the complete layered model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#203-modal-analysis",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.3. Modal analysis",
        "section": "20.3. Modal analysis",
        "text": "20.3. Modal analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#2031-run-modal-analysis",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.3.1. Run modal analysis",
        "section": "20.3.1. Run modal analysis",
        "text": "A modal analysis is run using Block Lanczos.\nOnly 10 modes are extracted for the sake of run times, but using a higher\nnumber of nodes is recommended (suggestion: 300 modes).\n20.3.1. Run modal analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#2032-post-processing-the-modal-results",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.3.2. Post-processing the modal results",
        "section": "20.3.2. Post-processing the modal results",
        "text": "This sections illustrates different methods to post-process the results of the\nmodal analysis : PyMAPDL method, PyMAPDL result reader, PyDPF-Post\nand PyDPF-Core. All methods lead to the same result and are just given as an\nexample of how each module can be used.\n20.3.2. Post-processing the modal results"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#20321-using-pymapdl-result-reader",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.3.2.1 Using PyMAPDL result reader",
        "section": "20.3.2.1 Using PyMAPDL result reader",
        "text": "Not recommended - PyMAPDL reader library is in process to being deprecated.\nIt is recommended to use DPF Post.\n20.3.2.1 Using PyMAPDL result reader"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#20322-using-dpf-post",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.3.2.2. Using DPF-Post",
        "section": "20.3.2.2. Using DPF-Post",
        "text": "20.3.2.2. Using DPF-Post"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#20323-using-dpf-core",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.3.2.3. Using DPF-Core",
        "section": "20.3.2.3. Using DPF-Core",
        "text": "20.3.2.3. Using DPF-Core"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#204-psd-analysis",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.4. PSD analysis",
        "section": "20.4. PSD analysis",
        "text": "20.4. PSD analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#2041-run-psd-analysis",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.4.1. Run PSD analysis",
        "section": "20.4.1. Run PSD analysis",
        "text": "The response spectrum analysis is defined, solved and post-processed.\n20.4.1. Run PSD analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#2042-post-process-psd-analysis",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.4.2. Post-process PSD analysis",
        "section": "20.4.2. Post-process PSD analysis",
        "text": "The response spectrum analysis is post-processed. First, the standard\nMAPDL POST1 postprocessor is used. Then, the MAPDL time-history\nPOST26 postprocessor is used to generate the response power spectral\ndensity.\nThe graph generated through POST26 is exported as a picture in the working\ndirectory. Finally, the results from POST26 are saved to Python variables\nto be plotted in the Python environment with the use of Matplotlib\nlibrary.\n20.4.2. Post-process PSD analysis"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#20421-post-process-psd-analysis-in-post1",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.4.2.1. Post-process PSD analysis in POST1",
        "section": "20.4.2.1. Post-process PSD analysis in POST1",
        "text": "20.4.2.1. Post-process PSD analysis in POST1"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#20422-post-process-psd-analysis-in-post26-time-history-post-processing",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.4.2.2. Post-process PSD analysis in POST26 (time-history post-processing)",
        "section": "20.4.2.2. Post-process PSD analysis in POST26 (time-history post-processing)",
        "text": "20.4.2.2. Post-process PSD analysis in POST26 (time-history post-processing)"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#20423-post-process-psd-analysis-using-matplotlib",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.4.2.3. Post-process PSD analysis using Matplotlib",
        "section": "20.4.2.3. Post-process PSD analysis using Matplotlib",
        "text": "20.4.2.3. Post-process PSD analysis using Matplotlib"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#205-exit-mapdl",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.5. Exit MAPDL",
        "section": "20.5. Exit MAPDL",
        "text": "20.5. Exit MAPDL"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-20/ex_20-tecPCB",
        "href": "technology_showcase_examples/techdemo-20/ex_20-tecPCB.html#206-input-files",
        "title": "Dynamic simulation of a printed circuit board assembly > 20.6. Input files",
        "section": "20.6. Input files",
        "text": "The following file was used in this problem:\npcb_mesh_file.cdb contains a FE model of a single\ncircuit board\npcb_mesh_file.cdb – Input file containing the model of a single\ncircuit board.\nDownload the zipped td-20 file set for this problem\nFor more information, see Obtaining the input files.\nGallery generated by Sphinx-Gallery\n20.6. Input files\npcb_mesh_file.cdb"
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#cylindrical-membrane-under-pressure",
        "title": "Cylindrical Membrane Under Pressure",
        "section": "Cylindrical Membrane Under Pressure",
        "text": "A long cylindrical membrane container of diameter d and wall thickness t is subjected to a\nuniform internal pressure P. Determine the axial stress \\sigma_1 and the\nhoop stress \\sigma_2 in the container. See VM13 for the problem sketch.\nS. Timoshenko, Strength of Materials, Part II, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1956,\npg. 121, article 25.\nStatic Analysis ANTYPE=0\n4-Node Finite Strain Shell Elements (SHELL181)\nE = 30 \\cdot 10^6 psi\n\\mu = 0.3\nd = 120 in\nt = 1 in\np = 500 psi\nAn arbitrary axial length is selected. Since the problem is axisymmetric, only a one element\nsector is needed. A small angle \\theta = 10° is used for approximating the circular\nboundary with a straight-sided element. Nodal coupling is used at the boundaries. An axial\ntraction of 15,000 psi is applied to the edge of the element to simulate the closed-end effect.\nThe internal pressure is applied as an equivalent negative pressure on the exterior (face 1)\nof the element.\nCylindrical Membrane Under Pressure\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#define-element-type-and-section-properties",
        "title": "Cylindrical Membrane Under Pressure > Define element type and section properties",
        "section": "Define element type and section properties",
        "text": "Use 4-Node Structural Shell element (SHELL181) for finite strain membrane. Specify\nkey option for membrane stiffness only via setting Keyopt(1)=1. Include full integration\nvia setting Keyopt(3)=2.\nDefine element type and section properties"
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#define-material",
        "title": "Cylindrical Membrane Under Pressure > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’s ratio NUXY of 0.3 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#define-geometry",
        "title": "Cylindrical Membrane Under Pressure > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#define-coupling-and-boundary-conditions",
        "title": "Cylindrical Membrane Under Pressure > Define coupling and boundary conditions",
        "section": "Define coupling and boundary conditions",
        "text": "Apply couplings and fix UZ displacement at specific node and UY displacement for all nodes.\nSpecify axial traction= -15000 psi and internal pressure= -500 psi on elements uaing SFE command.\nThen exit prep7 processor.\nDefine coupling and boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#solve",
        "title": "Cylindrical Membrane Under Pressure > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#post-processing",
        "title": "Cylindrical Membrane Under Pressure > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute stress quantities.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#verify-the-results",
        "title": "Cylindrical Membrane Under Pressure > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#finish-the-post-processing-processor",
        "title": "Cylindrical Membrane Under Pressure > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-020",
        "href": "verif-manual/vm-020.html#stop-mapdl",
        "title": "Cylindrical Membrane Under Pressure > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 0.867 seconds)\nDownload Jupyter notebook: vm-020.ipynb\nDownload Python source code: vm-020.py\nDownload zipped: vm-020.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-020.ipynb\nDownload Python source code: vm-020.py\nDownload zipped: vm-020.zip"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#tie-rod-with-lateral-loading",
        "title": "Tie Rod with Lateral Loading",
        "section": "Tie Rod with Lateral Loading",
        "text": "A tie rod is subjected to the action of a tensile force F and a uniform lateral load p.\nDetermine the maximum deflection z_{max}, the slope \\theta at the left-hand end,\nand the maximum bending moment M_{max}. In addition, determine the same three quantities\nfor the unstiffened tie rod (F = 0).\nS. Timoshenko, Strength of Materials, Part II, Elementary Theory and\nProblems, 3rd Edition, D. Van Nostrand Co., Inc., New York, NY, 1956,\npg. 42, article 6.\nStatic, Stress Stiffening Analysis ANTYPE=0\n3-D 2 node beam (BEAM188)\nE = 30 \\cdot 10^6 psi\nl = 200 in\nb = h = 2.5 in\nF = 21,972.6 lb\np = 1.79253 lb/in\nDue to symmetry, only one-half of the beam is modeled. The full load is applied for each\niteration. The first solution represents the unstiffened case. The second solution represents\nthe stiffened case.\nTie Rod with Lateral Loading\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#define-element-type-and-section-properties",
        "title": "Tie Rod with Lateral Loading > Define element type and section properties",
        "section": "Define element type and section properties",
        "text": "Use 3-D 2-Node Beam Element and specify cubic shape function via setting Keyopt(3)=3.\nDefine element type and section properties"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#define-material",
        "title": "Tie Rod with Lateral Loading > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), Young’s modulus of 30e6\nand Poisson’s ratio PRXY of 0.3 is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#define-geometry",
        "title": "Tie Rod with Lateral Loading > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#define-boundary-conditions-and-loading",
        "title": "Tie Rod with Lateral Loading > Define boundary conditions and loading",
        "section": "Define boundary conditions and loading",
        "text": "Apply a displacement boundary condition in the UY, ROTX and ROTZ directions to all nodes.\nSpecify symmetry degree-of-freedom constraints on nodes, surface normal to X-dir (default).\nApply a tensile force in X-dir, F = -21972.6 lb and a uniform lateral load, p = 1.79253 lb/in.\nThen exit prep7 processor.\nDefine boundary conditions and loading"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#solve",
        "title": "Tie Rod with Lateral Loading > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#post-processing",
        "title": "Tie Rod with Lateral Loading > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute displacement and rotation quantities.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#inline-functions-in-pymapdl-to-query-node",
        "title": "Tie Rod with Lateral Loading > Inline functions in PyMAPDL to query node",
        "section": "Inline functions in PyMAPDL to query node",
        "text": "Inline functions in PyMAPDL to query node"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#retrieve-nodal-deflection-and-rotation",
        "title": "Tie Rod with Lateral Loading > Retrieve nodal deflection and rotation",
        "section": "Retrieve nodal deflection and rotation",
        "text": "Retrieve nodal deflection and rotation"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#post-processing",
        "title": "Tie Rod with Lateral Loading > Post-processing",
        "section": "Post-processing",
        "text": "Enter /post26 time-history post-processing processor.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#set-a-new-title-for-the-analysis",
        "title": "Tie Rod with Lateral Loading > Set a new title for the analysis",
        "section": "Set a new title for the analysis",
        "text": "Set a new title for the analysis"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#solve",
        "title": "Tie Rod with Lateral Loading > Solve",
        "section": "Solve",
        "text": "Enter new solution mode and solve the nonlinear system including stress stiffening.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#post-processing",
        "title": "Tie Rod with Lateral Loading > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing. Compute displacement and rotation quantities.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#post-processing",
        "title": "Tie Rod with Lateral Loading > Post-processing",
        "section": "Post-processing",
        "text": "Enter /post26 time-history post-processing processor.\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#verify-the-results",
        "title": "Tie Rod with Lateral Loading > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#finish-the-post-processing-processor",
        "title": "Tie Rod with Lateral Loading > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-021",
        "href": "verif-manual/vm-021.html#stop-mapdl",
        "title": "Tie Rod with Lateral Loading > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 1.049 seconds)\nDownload Jupyter notebook: vm-021.ipynb\nDownload Python source code: vm-021.py\nDownload zipped: vm-021.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-021.ipynb\nDownload Python source code: vm-021.py\nDownload zipped: vm-021.zip"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#calibrating-and-validating-a-hyperelastic-constitutive-model",
        "title": "Calibrating and validating a hyperelastic constitutive model",
        "section": "Calibrating and validating a hyperelastic constitutive model",
        "text": "This example problem demonstrates the hyperelastic curve-fitting capabilities used\nto select constitutive model parameters to fit experimental data. Several issues\nthat influence the accuracy of the curve fit are discussed.\nValidation of the resulting constitutive model is demonstrated by comparison with a\ntension-torsion experiment.\nThe following topics are available:\n15.1. Introduction\n15.2. Problem description\n15.3. Material properties\n15.4. Analysis and solution controls\n15.5. Results and discussion\n15.6. Recommendations\n15.7. References\n15.8. Input files\nYou can also perform this example analysis entirely in the Ansys\nMechanical Application. For more information, see\nCalibrating and Validating a Hyperelastic Constitutive Model in the Workbench Technology Showcase: Example Problems.\nCalibrating and validating a hyperelastic constitutive model"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#151-introduction",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.1. Introduction",
        "section": "15.1. Introduction",
        "text": "Several hyperelastic constitutive models can be used to model the large deformation\nbehavior of elastic materials; however, it is sometimes difficult to select parameters\nto adequately match the behavior of the material.\nThe curve-fitting process fits the hyperelastic constitutive model parameters to a set\nof experimental data using a least-squares minimization.\nCurve-fitting is relatively simple, but certain conditions can affect the accuracy of\nthe resulting constitutive model.\nThe constitutive model should therefore be compared with experimental data to ensure\nthat it adequately reproduces the material behavior over the actual range of deformation.\n15.1. Introduction"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#152-problem-description",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.2. Problem description",
        "section": "15.2. Problem description",
        "text": "A constitutive model is needed that matches the behavior of a vulcanized natural\nrubber material up to 100 percent engineering strain in a variety of deformation modes.\nIn this problem, the experimental data are obtained from a simulation of a\nhyperelastic test suite (uniaxial, biaxial, and planar tension tests) using common\nexperimental test specimens. Using this data, parameters for a constitutive model are\ndetermined using hyperelastic fitting capabilities that focus on use of the three-,\nfive-, and nine-parameter Mooney-Rivlin hyperelastic models.\nAfter demonstrating the fitting procedure and selecting a suitable constitutive model,\na tension-torsion experiment is simulated and compared to the experimental data to\nvalidate the predictions for the model.\n15.2. Problem description"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#153-material-properties",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.3. Material properties",
        "section": "15.3. Material properties",
        "text": "Material properties for the calibration and validation experiments follow:\n15.3.1. Calibration Experiments\n15.3.2. Validation Experiment\n15.3. Material properties"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#1531-calibration-experiments",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.3.1. Calibration experiments",
        "section": "15.3.1. Calibration experiments",
        "text": "Experimental data was obtained via a simulation of a hyperelastic test suite with\nan Ogden hyperelastic material.\nThe test suite specimens are shown here, with the dark areas indicating locations\nof the clamps:\nThe engineering-stress vs. engineering-strain results are as follows:\nThe uniaxial specimen is similar to ASTM D412-C (ASTM Standard D412, 2006).\nThe crosshead is displaced by 396 mm, giving a measured engineering strain in the\ngage section of 662 percent and a calculated engineering stress of 58.1 MPa.\nThe equibiaxial specimen is disc-shaped, with 16 equally spaced tabs about the\ncircumference. The tabs are stretched 127.3 mm, resulting in a measured engineering\nstrain in the gage section of 336 percent and a calculated engineering stress of\n22.1 MPa.\nFor the planar specimen, the crosshead is displaced by 191.6 mm, giving a\ncalculated engineering strain of 639 percent and a calculated engineering stress of\n54.7 MPa.\n15.3.1. Calibration experiments"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#1532-validation-experiment",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.3.2. Validation experiment",
        "section": "15.3.2. Validation experiment",
        "text": "A simulated tension-torsion experiment was performed on a thin strip. The specimen\nis similar to that specified in ASTM D1043 (ASTM Standard D1043, 2006) and is shown\nhere:\nThe experiment consists of clamping each end of the specimen into the test\napparatus, then stretching the specimen by 50 percent of its original gage length\nand twisting one end of the specimen for four complete revolutions. Following is the\nresulting moment-vs.-rotation data:\n15.3.2. Validation experiment"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#154-analysis-and-solution-controls",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.4. Analysis and solution controls",
        "section": "15.4. Analysis and solution controls",
        "text": "Analysis and solution-control information for calibration and validation\nfollow:\n15.4.1. Calibrating parameters\n15.4.2. Validating parameters\n15.4. Analysis and solution controls"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#1541-calibrating-parameters",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.4.1. Calibrating parameters",
        "section": "15.4.1. Calibrating parameters",
        "text": "Material parameter calibration occurs using the curve-fitting\ntool.\nExample 15.1: Fitting a hyperelastic constitutive model to a set of uniaxial stress-strain\nData\nThe command input shown here is for illustration only. While curve-fitting is\npossible via command input, Ansys, Inc. recommends using the graphical user\ninterface (GUI) to perform the curve-fitting, or at least visually validating\nthe results using the GUI to ensure a sound fit.\nThe TBFT,FADD command initializes the curve-fitting procedure\nfor a hyperelastic, three-parameter, Mooney-Rivlin model assigned to\nmaterial identification number 1.\nTBFT,EADD reads the uniaxial experimental data in the\nuniax.log file as the fitting data for material number 1.\nThe experimental data in the file is a set of engineering-strain vs.\nengineering-stress input:\nTBFT,SOLVE determines the three constitutive parameters for the\nMooney-Rivlin model, minimizing the difference between the model and the\nexperimental data.\nTBFT,FSET assigns the fitted constitutive parameters to\nmaterial number 1.\nFor this problem, the fitted parameters for the three-parameter Mooney-Rivlin\nmodel are:\nC_{10} = 1.338856\nC_{11} = - 1.648364 x10-2\n15.4.1. Calibrating parameters\nTBFT,FADD\nTBFT,EADD\nuniax.log\nTBFT,SOLVE\nTBFT,FSET"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#1542-validating-parameters",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.4.2. Validating parameters",
        "section": "15.4.2. Validating parameters",
        "text": "Following is a mesh developed to simulate the torsion experiment to validate the\nfitted constitutive model parameters obtained in  15.4.1. Calibrating Parameters:\nThe mesh consists of 1,332 SOLID186 elements using the\ndefault formulation (a mixed-displacement pressure formulation with reduced\nintegration).\nThe attachment of the test specimen\nto the test apparatus is simulated by boundary conditions applied to the specimen in\nthe region of the clamps, as described here:\nThe back-left clamp region is fully restrained.\nThe back-right clamp region is attached to a rigid-contact surface and\nfixed in place.\nThe front-left clamp region is attached to a rigid-contact surface and\ndisplaced in the z direction to simulate a clamping displacement equal\nto 25 percent of the specimen thickness. The same is true for the\nfront-right clamp region.\nThe stretching to 50 percent engineering strain is simulated by displacing the\nrigid-contact surfaces attached to the right clamp regions while holding left clamp\nregions fixed.\nThe torsion of the specimen is simulated by holding the left clamp region in place\nand twisting the keypoints attached to the right contact surfaces about the\nlongitudinal axis.\n15.4.2. Validating parameters"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#155-results-and-discussion",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.5. Results and discussion",
        "section": "15.5. Results and discussion",
        "text": "Results for the calibration and validation operations are discussed below:\n15.5.1. Calibration results\n15.5.2. Validation results\n15.5. Results and discussion"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#1551-calibration-results",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.5.1. Calibration results",
        "section": "15.5.1. Calibration results",
        "text": "Using all of experimental data shown in figure_experimental_data\nto fit the three-, five-, and nine-parameter Mooney-Rivlin models results in the\nfollowing parameters, fit to the entire range of experimental data:\nThree-Parameter\nFive-Parameter\nNine-Parameter\nC_{10}\n1.8785\n1.4546\n1.7095\nC_{01}\n-5.7759 x 10-2\n7.6677 x 10-2\n5.6365 x 10-2\nC_{20}\n—\n1.3484 x 10-2\n-1.2088 x 10-2\nC_{11}\n1.9589 x 10-3\n-4.4337 x 10-3\n3.7099 x 10-5\nC_{02}\n—\n2.3997 x 10-4\n-4.6858 x 10-4\nC_{30}\n—\n—\n3.5202 x 10-4\nC_{21}\n—\n—\n6.0562 x 10-6\nC_{12}\n—\n—\n1.9666 x 10-5\nC_{03}\n—\n—\n-8.9997 x 10-7\n\\nu\n3.6415\n3.0625\n3.5318\nThe following figure is a comparison of the models to the experimental data:\nThus far, it is obvious that none of the models provide a suitable fit to the\nentire range of experimental data. The reason is that the least-squares fitting\nprocedure is minimizing the error over the entire range of data; therefore, it can\nbe detrimental to include data that is not representative of the actual range of use.\nIf the experimental data range is limited to about 100 percent strain, however,\nthe fitted parameters shown in the following table are obtained:\nThree-Parameter\nFive-Parameter\nNine-Parameter\nC_{10}\n1.6540\n1.7874\n1.8904\nC_{01}\n1.2929 x 10-1\n5.7229 x 10-2\n-3.6352 x 10-2\nC_{20}\n—\n-5.8765 x 10-2\n-2.3484 x 10-1\nC_{11}\n-1.2726 x 10-2\n2.6843 x 10-2\n2.6511 x 10-1\nC_{02}\n—\n-5.1127 x 10-3\n-6.8670 x 10-2\nC_{30}\n—\n—\n5.1742 x 10-2\nC_{21}\n—\n—\n-8.3262 x 10-2\nC_{12}\n—\n—\n3.6204 x 10-2\nC_{03}\n—\n—\n-4.3754 x 10-3\n\\nu\n3.5665\n3.6892\n3.7081\nThe following figure is a comparison of the models with the parameters fit to the\nmodified experimental data:\nFor the equibiaxial and planar experiments, any of the three models might be\nacceptable; however, the comparison with the uniaxial data might indicate that\nnone of the three models are acceptable.\nThe behavior of the model outside the fitted range can significantly differ from\nthe actual response of the material. For example, the model parameters fit to the\nexperimental data to 100 percent strain have been used to simulate the hyperelastic\ntest suite to strains of about 200 percent, as shown in the following comparisons:\nBeyond 100 percent strain, it becomes apparent that some of the predictions\nquickly deteriorate. In all three comparisons, the nine-parameter model quickly\nloses accuracy, and it appears that the three- and nine-parameter Mooney-Rivlin\nmodels have lost stability for the biaxial deformation case.\n15.5.1. Calibration results\nfigure_experimental_data"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#1552-validation-results",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.5.2. Validation results",
        "section": "15.5.2. Validation results",
        "text": "The five-parameter Mooney-Rivlin model, fit to the experimental data up to 100\npercent strain, is selected as an adequate representation of the material response.\nThe constitutive model is specified via the following input:\nThe following figure shows a contour plot of the strain energy density at the end\nof simulation. The plot offers a general idea of the overall deformation of the\nspecimen.\nWith the exception of the clamp regions, the deformation shows a uniform pattern\nin the gage region along the axis of twisting. Perpendicular to the axis of twisting\nis a large strain-energy density near the outside edge of the specimen, decreasing\ntoward the center.\nThe following figure shows a comparison of the model with the experimental moment\nvs. theta data:\nAfter a seemingly anomalous first data point, the error between the simulation and\nexperiment is in the range of 2 to 4 percent. Throughout the entire simulation, the\nfive-parameter Mooney-Rivlin model predicts a higher moment for an equivalent twist,\nwhich is not entirely expected by the error plots for the hyperelastic test suite\ncomparisons; nevertheless, a maximum four percent error appears to be a reasonable\nmargin of error for this simulation.\n15.5.2. Validation results"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#156-recommendations",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.6. Recommendations",
        "section": "15.6. Recommendations",
        "text": "When performing a similar type of calibration and validation, consider the following\nrecommendations:\nObtain test data from at least two (and preferably all three) of the\nexperiments in the hyperelastic test suite.\nEnsure that the test data covers the range of deformation over which the\nconstitutive model will be used.\nIf the error between the experimental data and the constitutive model is too\ngreat, try limiting the experimental data to the range of deformation over which\nthe constitutive model will be used.\nUse the constitutive model within the range of fitted data only.\nUse an independent experiment to validate that the constitutive model\nadequately matches the material behavior.\n15.6. Recommendations"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#157-references",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.7. References",
        "section": "15.7. References",
        "text": "The following references were consulted when creating this example problem:\n1. ASTM International. (2006). (http://www.astm.org/Standards/D1043.htm).\nStandard Test Method for Stiffness Properties of Plastics as a Function of Temperature by Means of a Torsion Test.\nWest Conshohocken.\n2. ASTM International. (2006). [ASTM Standard D412](http://www.astm.org/Standards/D412.htm).\nStandard Test Methods for Vulcanized Rubber and Thermoplastic Elastomers-Tension.\nWest Conshohocken.\n15.7. References"
    },
    {
        "objectID": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper",
        "href": "technology_showcase_examples/techdemo-15/ex_15-teccalvalhyper.html#158-input-files",
        "title": "Calibrating and validating a hyperelastic constitutive model > 15.8. Input files",
        "section": "15.8. Input files",
        "text": "The following files were used in this problem:\ntension_torsion.dat  – Tension-torsion simulation input file.\ntension_torsion.cdb – The common database file containing the model information for this problem\n(called by tension_torsion.dat ).\nDownload the zipped td-15 file set for this problem\nFor more information, see Obtaining the input files.\nGallery generated by Sphinx-Gallery\n15.8. Input files"
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#sound-diffusion-in-a-flat-room",
        "title": "Sound Diffusion in a Flat Room",
        "section": "Sound Diffusion in a Flat Room",
        "text": "Sound diffusion is modeled in a flat room of size 30 x 30 x 3 m^3. A sound source\nis placed at (2,2,1) with a sound power level of 1 \\cdot 10^-2 W. The wall absorption\ncoefficient is equal to 0.1. The coefficient of atmospheric attenuation is 0.01 m^-1.\nA.BILLON,J.PICAUT,’INTRODUCING ATMOSPHERIC ATTENUATION\nWITHIN A DIFFUSION MODEL FOR ROOM-ACOUSTIC PREDICTIONS MARCH 2008.\nStatic Analysis ANTYPE=0\n3D 20-Node Acoustic Solid (FLUID220)\nSpeed of sound, c_0 = 343 m/s\nDensity, \\rho = 1.21 kg/m^3\nWall absorption coefficient, \\alpha = 0.1\nAtmospheric attenuation coefficient attn. = 0.01 m^-1\nRoom length = 30 m\nRoom width = 30 m\nRoom height = 3 m\nSound power source = 1 \\cdot 10^{-2} W\nSteady analysis is performed to determine the sound pressure level inside the room.\nIn the post-processing, the sound pressure level (SPL) is listed every 2 m along a line\npassing through the room center at 1 m high. The sound pressure level is calculated in\nMechanical APDL as:\nSPL = 10 \\times \\log_{10} \\times \\frac{\\rho \\times c_0^2 \\times w}{P_{ref}^2}\nwhere w is diffuse sound energy and reference pressure P_{ref} = 2 \\times 10^{-5}.\nSound Diffusion in a Flat Room\nANTYPE=0"
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#define-material",
        "title": "Sound Diffusion in a Flat Room > Define material",
        "section": "Define material",
        "text": "Set up the material and its type (a single material), density, speed of sound\nwall absorption coefficient and Atmospheric attenuation coefficient is specified.\nDefine material"
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#define-geometry",
        "title": "Sound Diffusion in a Flat Room > Define geometry",
        "section": "Define geometry",
        "text": "Set up the nodes and elements. This creates a mesh just like in the\nproblem setup.\nDefine geometry"
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#define-boundary-conditions",
        "title": "Sound Diffusion in a Flat Room > Define boundary conditions",
        "section": "Define boundary conditions",
        "text": "Define Absorption coefficient and transmission loss.Define Mass source; mass\nsource rate; or power source in an energy diffusion solution for room acoustics.\nThen exit prep7 processor.\nEffectiely, this sets:\n- Sound power source = 1 \\cdot 10^{-2} W\nDefine boundary conditions"
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#solve",
        "title": "Sound Diffusion in a Flat Room > Solve",
        "section": "Solve",
        "text": "Enter solution mode and solve the system.\nSolve"
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#post-processing",
        "title": "Sound Diffusion in a Flat Room > Post-processing",
        "section": "Post-processing",
        "text": "Enter post-processing and read results set\nPost-processing"
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#inline-functions-in-pymapdl-to-query-node",
        "title": "Sound Diffusion in a Flat Room > Inline functions in PyMAPDL to query node",
        "section": "Inline functions in PyMAPDL to query node",
        "text": "Inline functions in PyMAPDL to query node"
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#post-processing-compute-sound-pressure-level-spl",
        "title": "Sound Diffusion in a Flat Room > Post-processing: Compute sound pressure level (SPL)",
        "section": "Post-processing: Compute sound pressure level (SPL)",
        "text": "Post-processing: Compute sound pressure level (SPL)"
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#verify-the-results",
        "title": "Sound Diffusion in a Flat Room > Verify the results.",
        "section": "Verify the results.",
        "text": "Verify the results."
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#finish-the-post-processing-processor",
        "title": "Sound Diffusion in a Flat Room > Finish the post-processing processor.",
        "section": "Finish the post-processing processor.",
        "text": "Finish the post-processing processor."
    },
    {
        "objectID": "verif-manual/vm-299",
        "href": "verif-manual/vm-299.html#stop-mapdl",
        "title": "Sound Diffusion in a Flat Room > Stop MAPDL.",
        "section": "Stop MAPDL.",
        "text": "Total running time of the script: (0 minutes 6.382 seconds)\nDownload Jupyter notebook: vm-299.ipynb\nDownload Python source code: vm-299.py\nDownload zipped: vm-299.zip\nGallery generated by Sphinx-Gallery\nStop MAPDL.\nDownload Jupyter notebook: vm-299.ipynb\nDownload Python source code: vm-299.py\nDownload zipped: vm-299.zip"
    }
]